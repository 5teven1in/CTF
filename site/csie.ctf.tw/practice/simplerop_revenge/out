Gadgets information
============================================================
0x00000000004bfd5d : adc al, 0 ; add byte ptr [rax + 0x28], dl ; cmc ; call qword ptr [rax]
0x00000000004296ef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429759 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c24d : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000042fcd5 : adc al, 0x13 ; jmp rdx
0x000000000042e2c5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000043fdca : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x000000000049bf6a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e948 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000418bf7 : adc al, 0x41 ; pop rsp ; ret
0x000000000043bad0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043f428 : adc al, 0x4f ; add byte ptr [rax], al ; ret
0x000000000041fd6a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000043f576 : adc al, 0x89 ; ret 0xdaf7
0x0000000000464cde : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004c7414 : adc al, 0x8b ; add byte ptr [rax], al ; cwde ; adc bl, bh ; jmp qword ptr [rdx]
0x000000000042ab80 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004292ae : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042fcd1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004215b7 : adc al, 0xa ; jmp r10
0x000000000042e433 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000468cc2 : adc al, 0xbf ; ret 0x6c
0x0000000000401529 : adc al, 0xdd ; nop ; cwde ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422a91 : adc al, 0xe ; sub eax, edx ; ret
0x000000000049c2ed : adc al, 0xf7 ; ret
0x00000000004a37fd : adc al, 0xf8 ; call rax
0x00000000004a3f05 : adc al, 0xf9 ; call qword ptr [rax]
0x00000000004a3dc9 : adc al, 0xf9 ; call rdx
0x00000000004a3dc5 : adc al, 0xf9 ; inc dword ptr [rdx + 0x14] ; stc ; call rdx
0x00000000004a3d49 : adc al, 0xf9 ; jmp rsi
0x0000000000476882 : adc al, 3 ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000049180e : adc al, 9 ; ret 0xa074
0x0000000000429897 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429901 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040d6c7 : adc al, ch ; push rbx ; ret
0x000000000047adfa : adc ax, 0x25 ; call rax
0x00000000004c7621 : adc bh, bl ; call qword ptr [rax]
0x000000000047fcae : adc bh, byte ptr [rcx] ; ret 0x850f
0x00000000004bcb78 : adc bl, al ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004c7419 : adc bl, bh ; jmp qword ptr [rdx]
0x0000000000426d55 : adc bl, ch ; call 0xffffffffc412f6aa
0x0000000000423825 : adc bl, ch ; call 0xffffffffc43ac17a
0x0000000000478e32 : adc bl, ch ; jno 0x478e88 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004838d4 : adc bl, ch ; ret 0x8348
0x0000000000426744 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043b406 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b477 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b3d7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b405 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004745b0 : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000413066 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x000000000044faad : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045060b : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x000000000044faa6 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000004785af : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000046a899 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a86d
0x0000000000416a6c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004715f4 : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004408a2 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000410623 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000478a2c : adc byte ptr [rax + 0x29], cl ; ret
0x000000000045a34e : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x000000000044faa7 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004187b3 : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x00000000004785b0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000412587 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000048837a : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004794ce : adc byte ptr [rax + 1], cl ; ret
0x00000000004003dd : adc byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000474924 : adc byte ptr [rax - 0x6df0fe06], al ; ret 0x8348
0x000000000042c2c4 : adc byte ptr [rax - 0x73], cl ; jg 0x42c2e1 ; jne 0x42c2b8 ; ret
0x000000000046aeb5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046aeb4 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000440512 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000447328 : adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447c8b : adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000042c6da : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004098d7 : adc byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405bd7
0x0000000000463a67 : adc byte ptr [rax - 0x77], cl ; jo 0x463a85 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464d9c : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000046a89a : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0x46a86c
0x0000000000463a27 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040e2e3 : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416a6d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000485bff : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000048a2a4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x000000000041c7a9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x00000000004329bf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000438177 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004381b3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000400a9a : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000420c73 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041fc4b : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000479a09 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b14c : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429aa1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e4aa : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049d218 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000049a078 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x0000000000418b8a : adc byte ptr [rbp + 0x39], cl ; ret
0x00000000004789d5 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x0000000000426868 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000042c2c8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000440387 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000400b76 : adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x000000000049d2bb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041ebab : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040fd13 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c0ee2 : adc byte ptr [rbx + 0xa], cl ; ret
0x0000000000413067 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000416522 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047a6d7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47a6f1 ; ret
0x000000000043e15a : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000410624 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000044c554 : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000004504a7 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x000000000041fa93 : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000462130 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a40f8 : adc byte ptr [rcx + rdi*8], cl ; call qword ptr [rax + 0x10fff90b]
0x00000000004a39e8 : adc byte ptr [rcx - 0x45ff0008], bh ; clc ; jmp qword ptr [rsi]
0x000000000049f268 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040d2cc : adc byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000418b37 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000422b13 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004943b7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004a4228 : adc byte ptr [rcx - 7], dh ; jmp qword ptr [rax]
0x000000000043e8d4 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000416525 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000420479 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042668a : adc byte ptr [rdi + 0x43], dl ; add bl, dh ; ret
0x000000000043e9bf : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004be21c : adc byte ptr [rdi - 3], bl ; call rax
0x00000000004a3cec : adc byte ptr [rdi], 0xf9 ; call qword ptr [rax]
0x00000000004a40e0 : adc byte ptr [rdi], cl ; stc ; call qword ptr [rax + 0x10fff90e]
0x000000000043bce3 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000049782b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049632f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000049752f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496c2f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496f2f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496627 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004968d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004974d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004977d4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496ed4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496bd4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000004965cc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049565d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049547d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495e55 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494d75 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495c75 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000044faae : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045060c : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045002c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004301c9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000485eda : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x00000000004a38e4 : adc byte ptr [rdx - 8], al ; jmp qword ptr [rax]
0x000000000042f12b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a40f0 : adc byte ptr [rip + 0xc90fff9], cl ; stc ; call qword ptr [rax]
0x000000000042efda : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042e5d5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421705 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004271bb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004a40e8 : adc byte ptr [rsi], cl ; stc ; call qword ptr [rax + 0x10fff90d]
0x000000000049183f : adc byte ptr [rsp - 4], al ; ret
0x0000000000491885 : adc byte ptr [rsp - 8], al ; ret
0x00000000004968d7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3c7c : adc cl, 0xf8 ; call rax
0x000000000049e5d4 : adc cl, ah ; and al, byte ptr [rax] ; test eax, eax ; je 0x49e5e9 ; ret
0x00000000004a40d9 : adc cl, bh ; call qword ptr [rax + 0x10fff90f]
0x00000000004a4115 : adc cl, bh ; call qword ptr [rax]
0x00000000004a40d5 : adc cl, bh ; jmp qword ptr [rax]
0x00000000004526af : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000423815 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004526b2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x0000000000474f0a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x0000000000479a01 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000464644 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000004267d0 : adc dh, bh ; ret
0x000000000041b181 : adc dh, dh ; ret 0xf0f
0x00000000004a3bd0 : adc dl, bl ; clc ; call rax
0x0000000000479373 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004a3a2c : adc dword ptr [rax + rdi*8 - 0x7436e01], edi ; call qword ptr [rcx]
0x0000000000411bc2 : adc dword ptr [rax - 0x39], ecx ; ret 0xffd0
0x000000000044f505 : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000410615 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000479a4c : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000044f5dc : adc dword ptr [rax - 0x75], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000417d3e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x00000000004164cc : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x0000000000475fba : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000000000042b14b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x0000000000429a37 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b04f : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042122b : adc dword ptr [rbp - 0x76b70001], esi ; ret 0xc6eb
0x00000000004a3a24 : adc dword ptr [rbx - 0x446e0008], edi ; clc ; call qword ptr [rcx]
0x0000000000435b47 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004357e2 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000004357a6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046982f : adc dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000402ea4 : adc dword ptr [rdi + 0x6cb980], edi ; call rax
0x0000000000435ca9 : adc dword ptr [rdi - 8], edi ; ret
0x000000000043ddac : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043dedf : adc dword ptr [rsi + 3], edx ; ret
0x000000000043df7c : adc dword ptr [rsi + 7], edx ; ret
0x000000000043dd7e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000429a36 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3cfd : adc eax, 0x1550fff9 ; stc ; jmp rax
0x00000000004a3801 : adc eax, 0x1750fff8 ; clc ; call rax
0x000000000044f4e6 : adc eax, 0x27beed ; je 0x44f4f8 ; ret
0x0000000000444167 : adc eax, 0x2857ec ; pop rbx ; ret
0x00000000004711dd : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x0000000000471119 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004295c1 : adc eax, 0x83480000 ; ret 0xe910
0x000000000046e3e9 : adc eax, 0x89000003 ; ret 0xe8c0
0x000000000046664a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042aeae : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494b99 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041772f : adc eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417756
0x00000000004965cf : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a339 : adc eax, eax ; ret
0x00000000004a37f5 : adc eax, edi ; call rax
0x000000000047a476 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000418de2 : adc ebp, dword ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004b9925 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000046aebc : adc ebx, eax ; nop ; mov eax, edi ; ret
0x00000000004420ef : adc ecx, dword ptr [rax - 0x39] ; ret 0xffd0
0x000000000041553a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004472c1 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044c824 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000452971 : adc ecx, dword ptr [rcx + rax - 0x16] ; call qword ptr [r10 + rax*8]
0x0000000000441ecb : adc ecx, eax ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004c2ff9 : adc edi, eax ; call qword ptr [rax]
0x00000000004a3e51 : adc edi, ecx ; call rsp
0x00000000004a3cd1 : adc edi, ecx ; jmp qword ptr [rax]
0x00000000004c5b49 : adc edi, edx ; jmp qword ptr [rax]
0x00000000004bae3e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000049d08c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043f367 : adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x00000000004967b2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000435b46 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004357e1 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000004357a5 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000435ca8 : adc qword ptr [rdi - 8], rdi ; ret
0x000000000043dede : adc qword ptr [rsi + 3], rdx ; ret
0x000000000043df7b : adc qword ptr [rsi + 7], rdx ; ret
0x000000000043dd7d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000426743 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000494d00 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047a475 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004c2ff8 : adc rdi, rax ; call qword ptr [rax]
0x00000000004267cf : adc sil, r15b ; ret
0x00000000004bebe3 : add ah, ah ; add al, byte ptr [rax] ; add byte ptr [rax], ch ; xor esi, esp ; call qword ptr [rdx]
0x00000000004c85c3 : add ah, al ; pushfq ; add byte ptr [rax], al ; js 0x4c85d5 ; cld ; call qword ptr [rdx]
0x000000000043e40e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e42e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000043e4bd : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3ed : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004bcb6f : add ah, bh ; ret 0x4b
0x00000000004c70fb : add ah, bh ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x17], dl ; cli ; jmp qword ptr [rdx]
0x00000000004c85db : add ah, bl ; pushfq ; add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004bff4f : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c0028 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x000000000043deda : add ah, byte ptr [rdx - 0xf] ; jl 0x43df2f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004bf2eb : add ah, ch ; or dword ptr [rax], eax ; add al, al ; div ah ; call qword ptr [rbx]
0x00000000004c45eb : add ah, ch ; pop rsp ; add byte ptr [rax], al ; rcl ch, 1 ; clc ; call qword ptr [rdx]
0x00000000004c19eb : add ah, ch ; xor byte ptr [rax], al ; add byte ptr [rax - 0x12], ah ; cmc ; call qword ptr [rdx]
0x00000000004c1fcb : add ah, cl ; add byte ptr ss:[rax], al ; xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rsi]
0x00000000004c2ff3 : add ah, dh ; add byte ptr [rax], r8b ; adc rdi, rax ; call qword ptr [rax]
0x00000000004c4df3 : add ah, dh ; add byte ptr fs:[rax], al ; test al, 0xde ; stc ; jmp rax
0x00000000004c63f3 : add ah, dh ; jp 0x4c63ff ; add byte ptr [rax + 0x4c], bh ; cli ; jmp rsp
0x00000000004c85f3 : add ah, dh ; pushfq ; add byte ptr [rax], al ; js 0x4c8605 ; cld ; call qword ptr [rdx]
0x00000000004c57d3 : add ah, dl ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; or byte ptr [rax], al ; cli ; jmp rdx
0x00000000004c45d3 : add ah, dl ; pop rsp ; add byte ptr [rax], al ; fcom st(5) ; clc ; call qword ptr [rax]
0x0000000000449961 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000449999 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000041be0b : add al, 0 ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x0000000000471659 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000042324d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bd6f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423271 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049d1b0 : add al, 0 ; add byte ptr [rax], al ; jne 0x49d1d7 ; ret
0x0000000000440d72 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000426de8 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000449cc1 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x000000000041827d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000402ba5 : add al, 0 ; add byte ptr [rdi + 0x6cc0c0], bh ; call rbx
0x0000000000418da6 : add al, 0 ; add dh, dh ; ret
0x000000000040f354 : add al, 0 ; add rsp, 0xd8 ; ret
0x000000000046aebb : add al, 0x11 ; ret
0x000000000043e45d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000474559 : add al, 0x16 ; jae 0x474507 ; xor eax, eax ; ret
0x000000000042e2c1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000042294a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000469fa5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469f76
0x000000000043f29d : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000004098da : add al, 0x24 ; call 0x405bd4
0x00000000004715fc : add al, 0x24 ; call rax
0x000000000046f913 : add al, 0x24 ; lea rdi, qword ptr [rax + 0x6cab80] ; call rdx
0x000000000044f54a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000047c8b5 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000040e990 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000044cf7d : add al, 0x29 ; ret 0x8941
0x00000000004659ce : add al, 0x31 ; ret
0x00000000004658ca : add al, 0x37 ; ret
0x0000000000415c1f : add al, 0x3a ; ret
0x0000000000480b6c : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480b41
0x0000000000466796 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000004711e1 : add al, 0x48 ; add esp, 8 ; ret
0x000000000043b93b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000043ae49 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ae5b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000463f53 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000463e93 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c300 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x000000000043522a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000463d74 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000439689 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004655c4 : add al, 0x48 ; xor eax, eax ; ret
0x00000000004c3404 : add al, 0x4b ; add byte ptr [rax], al ; sub al, dl ; std ; jmp qword ptr [rdx]
0x0000000000474556 : add al, 0x4c ; cmp eax, dword ptr [rsi + rdx] ; jae 0x47450a ; xor eax, eax ; ret
0x0000000000473e46 : add al, 0x4c ; cmp edx, eax ; jne 0x473df4 ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000043ae57 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439697 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000044c822 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000041bdc4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000466794 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000041ff4a : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004bffe7 : add al, 0x79 ; ret
0x0000000000475191 : add al, 0x80 ; cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000499ec3 : add al, 0x81 ; je 0x499ea5 ; ret
0x00000000004292ab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000499ebf : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x499ea9 ; ret
0x000000000042ab83 : add al, 0x81 ; sub eax, edx ; ret
0x000000000043e558 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e548 ; ret
0x0000000000429007 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044932d : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000049b19a : add al, 0x84 ; add rax, r12 ; jmp rax
0x000000000046b110 : add al, 0x85 ; leave ; jne 0x46b0c8 ; xor eax, eax ; ret
0x0000000000466e79 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000049ba9b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000049a149 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000043ae46 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000439686 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000499f23 : add al, 0x88 ; add rax, r8 ; jmp rax
0x000000000040e1ba : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000043e55b : add al, 0x8a ; je 0x43e545 ; ret
0x000000000045c430 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000041b7c4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x0000000000489f73 : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004c23b0 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c589e : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000049b6d3 : add al, 0x99 ; add rax, r9 ; jmp rax
0x00000000004c8304 : add al, 0x9a ; add byte ptr [rax], al ; js 0x4c830c ; sti ; jmp qword ptr [rax]
0x0000000000441ed8 : add al, 0xc1 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x441ee8 ; call rbx
0x0000000000457454 : add al, 0xc5 ; sal byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000047a3cd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47a429
0x000000000047fedd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x47ff39
0x0000000000466be7 : add al, 0xe8 ; ret
0x000000000047ad45 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000422a8d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000435593 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f31b : add al, 0xf3 ; ret
0x0000000000426829 : add al, 0xf6 ; ret 0x7408
0x00000000004be851 : add al, 0xfe ; call rax
0x00000000004be845 : add al, 0xfe ; jmp qword ptr [rbx]
0x0000000000481268 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000047450c : add al, 1 ; cmp rax, 0xff ; cmove rax, rdx ; ret
0x00000000004c005f : add al, 2 ; hlt ; ret
0x000000000042f837 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004c8130 : add al, 3 ; mov dword ptr [rcx], eax ; ret
0x000000000042132d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000042ce58 : add al, 7 ; ret
0x000000000042e42f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000049e6e4 : add al, ah ; and al, byte ptr [rax] ; test eax, eax ; je 0x49e6f9 ; ret
0x00000000004a3b9c : add al, ah ; clc ; jmp rax
0x00000000004c421f : add al, ah ; leave ; std ; call qword ptr [rbx]
0x00000000004c50bf : add al, ah ; out 0xf9, al ; call qword ptr [rsi]
0x0000000000441bda : add al, ah ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004c761f : add al, al ; adc bh, bl ; call qword ptr [rax]
0x0000000000411c78 : add al, al ; and dword ptr [rdx], ecx ; pop rbx ; ret
0x00000000004c569f : add al, al ; cli ; stc ; call rsi
0x00000000004bf2ef : add al, al ; div ah ; call qword ptr [rbx]
0x00000000004c42bf : add al, al ; mov dl, 0xf8 ; call qword ptr [rcx]
0x00000000004c4a2f : add al, al ; ret
0x00000000004ae9c7 : add al, al ; sldt word ptr [rax] ; ret
0x00000000004a398f : add al, al ; xchg eax, edi ; clc ; jmp rax
0x00000000004c1f57 : add al, bl ; jo 0x4c1f55 ; call qword ptr [rax]
0x000000000041aca5 : add al, bpl ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400486 : add al, bpl ; ret
0x000000000041ae06 : add al, bpl ; ret 0xffff
0x00000000004976b2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423811 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000041920d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000425e03 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004106f5 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000469da6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000417730 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041f886 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445cfd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000451ccd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004233ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047db5c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000042a941 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423411 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043ff62 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000004411e2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440f55 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440e21 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440d99 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004666b3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000046a4ba : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bebe5 : add al, byte ptr [rax] ; add byte ptr [rax], ch ; xor esi, esp ; call qword ptr [rdx]
0x000000000043d2e4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000004750fd : add al, byte ptr [rax] ; add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x0000000000482fbe : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x0000000000418858 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d067 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a65c : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000447bac : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000044722c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044c9b4 : add al, byte ptr [rax] ; mov rdi, rbx ; call r12
0x00000000004c97e6 : add al, byte ptr [rax] ; ret
0x000000000044417a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44416e
0x000000000044281e : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004bfb80 : add al, byte ptr [rdi + 0xa] ; ret
0x00000000004c54bd : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000004c5295 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000004c08cd : add al, byte ptr [rdx] ; ret
0x000000000047a905 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000004c23b4 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000046d4c0 : add al, ch ; cmp al, byte ptr [rdx - 7] ; inc dword ptr [rcx - 0x47] ; ret
0x000000000041aca6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400487 : add al, ch ; ret
0x0000000000468818 : add al, ch ; ret 0xfb57
0x000000000041ae07 : add al, ch ; ret 0xffff
0x00000000004bc7f7 : add al, cl ; ret
0x00000000004bc867 : add al, dh ; ret
0x00000000004c3ecf : add al, dh ; xchg eax, esp ; clc ; call qword ptr [rdx]
0x00000000004c8baf : add al, dl ; sar esp, cl ; call qword ptr [rax]
0x00000000004c7232 : add bh, ah ; ret
0x00000000004449ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045f75e : add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000041344a : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000400a97 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047e1bf : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x0000000000441d9c : add bh, bh ; ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41dfe8
0x0000000000402bac : add bh, bh ; sar dword ptr [rdi + 0x6cb980], cl ; call rbx
0x000000000047a4e0 : add bh, byte ptr [rax + 1] ; ret
0x00000000004123b2 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000040dbab : add bh, byte ptr [rax - 1] ; ret
0x00000000004bf783 : add bh, byte ptr [rcx + 0x41380e0a] ; ret
0x000000000043d6b2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004a41cd : add bh, cl ; jmp qword ptr [rax]
0x0000000000470206 : add bh, dh ; ret 0x804
0x000000000047ae34 : add bl, 0x6c ; add cl, ch ; ret
0x00000000004260e6 : add bl, al ; lea rax, qword ptr [rip + 0x15e71] ; ret
0x0000000000466e51 : add bl, al ; mov eax, 2 ; ret
0x0000000000421194 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000044412a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000004a3c34 : add bl, bl ; clc ; call rax
0x00000000004c6027 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x00000000004c5267 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000004c60e5 : add bl, byte ptr [rdx + 0xa] ; ret
0x0000000000469faa : add bl, ch ; ret 0x1f0f
0x00000000004bcb67 : add bl, ch ; ret 0x4b
0x0000000000406287 : add bl, dh ; ret
0x000000000044ed12 : add byte ptr [eax - 0x77], cl ; ret 0x8840
0x00000000004c50bd : add byte ptr [eax], al ; loopne 0x4c50ae ; stc ; call qword ptr [rsi]
0x00000000004654a8 : add byte ptr [r15 + 0x4b2dbc], dil ; call 0x401749
0x000000000047aab0 : add byte ptr [r15 + 0x6cc360], r15b ; call rax
0x000000000047abdb : add byte ptr [r15 + 0x6cc364], r15b ; call rdx
0x000000000045b6e3 : add byte ptr [r15 + r9 + 0x44], cl ; ret 0xf4c
0x000000000045a6cf : add byte ptr [r15 + r9 + 0x45], cl ; ret 0xf4c
0x0000000000474591 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000425d5f : add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x0000000000468e5e : add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x00000000004683d5 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000443121 : add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000459738 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc27edf4a
0x0000000000446dc5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000004bcb6a : add byte ptr [r8], al ; add byte ptr [rax], al ; add ah, bh ; ret 0x4b
0x00000000004bc7f2 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000004bc862 : add byte ptr [r8], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000004bcb62 : add byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret 0x4b
0x00000000004bcb7a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bcb22 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004bcb12 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004bcb72 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000000004bcb1a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret 0x4b
0x00000000004bcb2a : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4b
0x00000000004bcb82 : add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; ret
0x00000000004bcb5a : add byte ptr [r8], al ; add byte ptr [rax], al ; add dh, dl ; ret 0x4b
0x00000000004c3405 : add byte ptr [r8], al ; sub al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c34ad : add byte ptr [r8], al ; sub byte ptr [rbx], 0xf8 ; jmp rsp
0x00000000004c303d : add byte ptr [r8], r8b ; and byte ptr [rax], bl ; clc ; call qword ptr [rax]
0x000000000043f369 : add byte ptr [r8], r8b ; ret
0x00000000004c2ff7 : add byte ptr [rax + 0x13], cl ; clc ; call qword ptr [rax]
0x000000000042118f : add byte ptr [rax + 0x16], bh ; ret
0x00000000004c5d1f : add byte ptr [rax + 0x1c], dl ; cli ; jmp rdi
0x000000000043dc7f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00000000004bfd5f : add byte ptr [rax + 0x28], dl ; cmc ; call qword ptr [rax]
0x00000000004053b7 : add byte ptr [rax + 0x29], cl ; ret
0x000000000044c1d8 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000418d65 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000044b350 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004172fb : add byte ptr [rax + 0x39], cl ; ret
0x000000000046db57 : add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483bab : add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000049a0f3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x0000000000417746 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044e9bb : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000417707 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000049a188 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046dd35 : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004c1d0f : add byte ptr [rax + 0x3a], dh ; idiv bh ; ret
0x0000000000467714 : add byte ptr [rax + 0x3d], cl ; ret 0x6c
0x0000000000425d5b : add byte ptr [rax + 0x43d6d0], bh ; cmove rax, rdx ; ret
0x000000000047a786 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x000000000047ae55 : add byte ptr [rax + 0x48006cb4], al ; add esp, 8 ; ret
0x000000000047aa67 : add byte ptr [rax + 0x48006cc3], al ; add esp, 8 ; ret
0x00000000004c63f7 : add byte ptr [rax + 0x4c], bh ; cli ; jmp rsp
0x00000000004c0587 : add byte ptr [rax + 0x4f], ch ; cmc ; call qword ptr [rcx]
0x00000000004c957f : add byte ptr [rax + 0x50], dh ; std ; call qword ptr [rdx]
0x0000000000462e27 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000004c0ba7 : add byte ptr [rax + 0x62], bh ; cmc ; call qword ptr [rsi]
0x000000000045cede : add byte ptr [rax + 0x63], cl ; ret
0x0000000000464b1f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000049bbc3 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000046ab0f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000046aaff : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000046ab1f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x0000000000417ca2 : add byte ptr [rax + 0x6ca1a0], bh ; ret
0x000000000042380f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004767b4 : add byte ptr [rax + 0x75], al ; cmp bl, dh ; ret
0x000000000043b8df : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004c4bbf : add byte ptr [rax + 0x7a], ah ; stc ; call rdx
0x000000000040f82a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004671af : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x0000000000465835 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000004435db : add byte ptr [rax + 0xf], cl ; ret
0x0000000000412727 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000425d60 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000040f9c9 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000468e5f : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000426683 : add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x0000000000448a9a : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004482ed : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044aeaa : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x0000000000401400 : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000004748c7 : add byte ptr [rax + 1], bh ; ret
0x0000000000425e05 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000004106f7 : add byte ptr [rax + 1], cl ; ret
0x0000000000488aff : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000047b51c : add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000047f187 : add byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000479970 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000049d1bf : add byte ptr [rax + 2], bh ; ret
0x00000000004c85c7 : add byte ptr [rax + 3], bh ; cld ; call qword ptr [rdx]
0x00000000004c72a7 : add byte ptr [rax + 5], bh ; sti ; jmp rsi
0x000000000043e47e : add byte ptr [rax + 8], bh ; pop rbx ; ret
0x000000000043e47d : add byte ptr [rax + 8], dil ; pop rbx ; ret
0x00000000004ad96b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x000000000041bfe8 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c8f9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004711e0 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004aeb17 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000004c19ef : add byte ptr [rax - 0x12], ah ; cmc ; call qword ptr [rdx]
0x00000000004c70ff : add byte ptr [rax - 0x17], dl ; cli ; jmp qword ptr [rdx]
0x0000000000403206 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x000000000043fd21 : add byte ptr [rax - 0x39], cl ; ret
0x000000000045269f : add byte ptr [rax - 0x39], cl ; ret 0xffb0
0x000000000040db9f : add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000042106b : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000044f5df : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000045868f : add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x0000000000410717 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000004666bf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000046669f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004666ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004666af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004666ef : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000459088 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000044c9cd : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004c1327 : add byte ptr [rax - 0x47], ch ; cmc ; call qword ptr [rcx]
0x0000000000489512 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004c431f : add byte ptr [rax - 0x4d], ah ; clc ; jmp qword ptr [rsi]
0x00000000004c6a5f : add byte ptr [rax - 0x58], ah ; cli ; call rdx
0x00000000004c752f : add byte ptr [rax - 0x67], ah ; std ; call rcx
0x000000000044faa3 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x000000000044997f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449963 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000044999b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x000000000047b81a : add byte ptr [rax - 0x73], cl ; jl 0x47b84a ; js 0x47b869 ; call rsp
0x000000000047bb2f : add byte ptr [rax - 0x73], cl ; jl 0x47bb5f ; js 0x47bb7e ; call rsp
0x000000000047bef6 : add byte ptr [rax - 0x73], cl ; jl 0x47bf26 ; js 0x47bf45 ; call rsp
0x00000000004678ce : add byte ptr [rax - 0x73], cl ; nop ; ret 0x6c
0x000000000041b17d : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x0000000000474f07 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x0000000000457451 : add byte ptr [rax - 0x75], cl ; add al, 0xc5 ; sal byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000044c9ff : add byte ptr [rax - 0x75], cl ; add eax, 0x27f691 ; ret
0x000000000044568f : add byte ptr [rax - 0x75], cl ; add eax, 0x2875d1 ; ret
0x00000000004167ff : add byte ptr [rax - 0x75], cl ; add eax, 0x2b3259 ; ret
0x0000000000419bcb : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044fabf : add byte ptr [rax - 0x75], cl ; jl 0x44faf0 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004151d6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464dd6 : add byte ptr [rax - 0x75], cl ; jp 0x464e21 ; jmp 0x464da6
0x0000000000464e0f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047d61d : add byte ptr [rax - 0x75], cl ; or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000416da7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004315ff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000041e3c7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00000000004451b2 : add byte ptr [rax - 0x75], cl ; ret
0x000000000041682f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000040fac2 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000041dfd3 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000414d42 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414eb2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004697e9 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441635 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441535 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000041be0d : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xffff
0x000000000049a59e : add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x00000000004692b8 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091c0e
0x000000000040f911 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000004411f1 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000041e680 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000040333c : add byte ptr [rax - 0x77], cl ; ret
0x0000000000417732 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000041dbac : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000047a8a3 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000049d96c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000046a07f : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000485bd4 : add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000043ed5a : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x00000000004029ae : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000046c64f : add byte ptr [rax - 0x77], cl ; ret 0x8349
0x0000000000419abf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000459a09 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000044ed14 : add byte ptr [rax - 0x77], cl ; ret 0x8840
0x00000000004554d1 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ebc3 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000044f0e7 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000470ce7 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000049d0bf : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000425d0b : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a9af : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000045a114 : add byte ptr [rax - 0x77], cl ; ret 0xf0e9
0x0000000000413450 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000471fbf : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049bcdf : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000470c83 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004655bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000467fff : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x00000000004648fa : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000443122 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004115c7 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000047165b : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000000000049de1e : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000459739 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc27edf49
0x000000000041e598 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004212ad : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401698 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454fb8 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004565df : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041e6c2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040152e : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041bd6f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043d7af : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000041c749 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000469bdf : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000040ed1f : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475e9f : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0f6f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452fbf : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000040128f : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x0000000000446dc6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000044bdb0 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000422b0f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000464817 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000425fff : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f8f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000049d09f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000047db5e : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000004471bf : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000462607 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000048491f : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000004255a0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000429423 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422b33 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000046752f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e36f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004656ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000044c534 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000044dfbf : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000446aac : add byte ptr [rax - 0x7f], cl ; ret 0x5f20
0x0000000000432d7b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000463e82 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000410242 : add byte ptr [rax - 1], bh ; ret
0x000000000041695e : add byte ptr [rax - 1], dil ; ret
0x00000000004c8307 : add byte ptr [rax - 5], bh ; sti ; jmp qword ptr [rax]
0x00000000004a38e0 : add byte ptr [rax - 8], al ; call qword ptr [rax]
0x00000000004bf3a7 : add byte ptr [rax - 8], bl ; hlt ; call qword ptr [rax]
0x00000000004bf3bf : add byte ptr [rax - 8], dl ; hlt ; call qword ptr [rdx]
0x0000000000414419 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000417c9f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x6ca1a0], bh ; ret
0x0000000000410479 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000048b640 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041344d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000047e01b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call rax
0x000000000043559b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047838b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000046616b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000044e953 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000041ca93 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000417cab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cdfb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000047c4c5 : add byte ptr [rax], 0 ; add byte ptr [rcx], bh ; ret
0x000000000042e851 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446fb2 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x4801
0x000000000040f82b : add byte ptr [rax], 0 ; je 0x40f840 ; mov eax, edx ; pop rbx ; ret
0x000000000047a787 : add byte ptr [rax], 0 ; je 0x47a798 ; mov eax, edx ; pop rbx ; ret
0x00000000004c8c0f : add byte ptr [rax], ah ; in eax, dx ; cld ; call qword ptr [rax]
0x00000000004bcb7f : add byte ptr [rax], ah ; ret
0x00000000004c6d3f : add byte ptr [rax], ah ; sar edx, 1 ; jmp rsi
0x00000000004c303f : add byte ptr [rax], ah ; sbb al, bh ; call qword ptr [rax]
0x00000000004c7412 : add byte ptr [rax], al ; adc al, 0x8b ; add byte ptr [rax], al ; cwde ; adc bl, bh ; jmp qword ptr [rdx]
0x00000000004c2ff6 : add byte ptr [rax], al ; adc rdi, rax ; call qword ptr [rax]
0x00000000004bcb6d : add byte ptr [rax], al ; add ah, bh ; ret 0x4b
0x00000000004711df : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004c3402 : add byte ptr [rax], al ; add al, 0x4b ; add byte ptr [rax], al ; sub al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c8302 : add byte ptr [rax], al ; add al, 0x9a ; add byte ptr [rax], al ; js 0x4c830e ; sti ; jmp qword ptr [rax]
0x00000000004a398d : add byte ptr [rax], al ; add al, al ; xchg eax, edi ; clc ; jmp rax
0x0000000000420955 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000468816 : add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x00000000004bc7f5 : add byte ptr [rax], al ; add al, cl ; ret
0x00000000004bc865 : add byte ptr [rax], al ; add al, dh ; ret
0x00000000004603d6 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000466e4f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000469fa8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000004bcb65 : add byte ptr [rax], al ; add bl, ch ; ret 0x4b
0x000000000041441a : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000042118d : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x000000000045c6bb : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000046db55 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x7874
0x0000000000483ba9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000049a0f1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000044e9b9 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000049a186 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000464b1d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000417ca0 : add byte ptr [rax], al ; add byte ptr [rax + 0x6ca1a0], bh ; ret
0x000000000043b8dd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000448a98 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x00000000004482eb : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x000000000044aea8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000004013fe : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000047a513 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000488c24 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000488afd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000049d1bd : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000043fd1f : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004132fd : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045868d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041047a : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000044c9cb : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000047b818 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47b84c ; js 0x47b86b ; call rsp
0x000000000047bb2d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bb61 ; js 0x47bb80 ; call rsp
0x000000000047bef4 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; jl 0x47bf28 ; js 0x47bf47 ; call rsp
0x0000000000419bc9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000004151d4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000464dd4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x464e23 ; jmp 0x464da8
0x000000000041682d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000004697e7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000441633 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000441533 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000049a59c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x00000000004411ef : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000040f951 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041dbaa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485bd2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000046c64d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8349
0x000000000046dd62 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000043ebc1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000049d0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000425d09 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000045a9ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000041344e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000471fbd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000049bcdd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000442b8c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d7ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000444a03 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475e9d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0f6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452fbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000044bdae : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000042aa77 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000425ffd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000049d09d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000004471bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004849fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000042aae1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046752d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000042e36d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000044dfbd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000434588 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000410240 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000004bcb7d : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000004bcb6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; ret 0x4b
0x00000000004a398b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; xchg eax, edi ; clc ; jmp rax
0x0000000000468814 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x00000000004bc7f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x00000000004bc863 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000004bcb63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret 0x4b
0x00000000004167eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000047457b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000464b1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x0000000000462d5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004132fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x000000000045868b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff0
0x000000000041682b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041dba8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000485bd0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x53e8
0x000000000049d0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000045e8bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000049bcdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000045807b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043d7ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x0000000000475e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000004a0f6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000452fbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000425ffb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000425f8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000049d09b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000004471bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000004849fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000004bcb7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000041562b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004af7f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004afce2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004bcb23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004bcb13 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004bcb73 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000041700b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bcb1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret 0x4b
0x000000000043d9eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000422aeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004216bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004bcb2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4b
0x0000000000411dfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000004bcb83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; ret
0x0000000000442d09 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004bcb5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dl ; ret 0x4b
0x000000000046667c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047816f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047e01c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004b181c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b09cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004bcb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret 0x4b
0x000000000049c2a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x49c28c ; ret
0x00000000004bcb64 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x4bcb31
0x000000000045f7e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000043bf0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bf1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043bf2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043bf3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bf4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043be8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043be9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043beac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bebc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043becc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bedc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043beec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043befc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043be7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000400984 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x00000000004bcbb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000043b8dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000042118c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000004150bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000047a512 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049d1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000043559c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000047838c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041681c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041682c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004356ec : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000442d0a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004154a0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414ca1 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bcb34 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rdi ; ret 0x4b
0x00000000004bcb4c : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 0x4b
0x000000000041562d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b07ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0f84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004af7f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004afce4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004a4424 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43e3
0x00000000004a4e14 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43ef
0x00000000004bcb5c : add byte ptr [rax], al ; add byte ptr [rax], al ; salc ; ret 0x4b
0x000000000041ca94 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cdfc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004bcb25 : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x00000000004bcb15 : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x00000000004bcb75 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000049d1b1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x000000000045c48c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x000000000049c2e6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004678e4 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 - 0x58], cl ; ret 0x6c
0x00000000004426b8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000046202d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000447f52 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e0da : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000043e429 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000047bb5f : add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044294c : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000434e7d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004115b3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004154a1 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000412f60 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000049c2a5 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000443c63 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], al ; ret
0x0000000000460556 : add byte ptr [rax], al ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000045dcfc : add byte ptr [rax], al ; add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x0000000000443b0d : add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462e86 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000049e04d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x000000000041662c : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000004c85ae : add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004bcb1d : add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret 0x4b
0x00000000004c7b6e : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sti ; jmp qword ptr [rdx]
0x000000000040fc37 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000045d302 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d285 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x0000000000403c83 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d9ed : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000420758 : add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000440e31 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000440f65 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000440d9a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000440da9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x0000000000425901 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004589ec : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000422aed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004216bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041d115 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000426110 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426136 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000047c4c6 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004bcb2d : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4b
0x000000000045b78a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x000000000040eb9a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c013 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000049c03b : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000049cd8a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x000000000043e385 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043567d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004356ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448b4c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462aa5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000411dfd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042603d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004671c5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d586 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x0000000000442f64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x000000000046bb57 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000049c215 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004bcb85 : add byte ptr [rax], al ; add byte ptr [rdx], dh ; ret
0x000000000042e852 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425f52 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440d73 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x0000000000442d0b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c2559 : add byte ptr [rax], al ; add byte ptr [rsp + rdi], bl ; add byte ptr [rax], ah ; ret
0x00000000004586dd : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004499e5 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004723a2 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000400985 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004654d0 : add byte ptr [rax], al ; add dh, al ; and al, 0x14 ; add al, ch ; ret
0x0000000000417508 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000446fb3 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000043d141 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000485aa0 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000004bcb5d : add byte ptr [rax], al ; add dh, dl ; ret 0x4b
0x00000000004788e7 : add byte ptr [rax], al ; add rax, -8 ; ret
0x000000000046667e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000425e04 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000043e5fe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000043e947 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000049c250 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004010cc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044f8a6 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x000000000040f3e5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x00000000004456f7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478171 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004c157e : add byte ptr [rax], al ; and ah, cl ; cmc ; call rdx
0x00000000004c8622 : add byte ptr [rax], al ; and al, 0x9d ; add byte ptr [rax], al ; js 0x4c8636 ; cld ; call qword ptr [rdx]
0x00000000004c303e : add byte ptr [rax], al ; and byte ptr [rax], bl ; clc ; call qword ptr [rax]
0x00000000004c8c0e : add byte ptr [rax], al ; and ch, ch ; cld ; call qword ptr [rax]
0x00000000004c6d3e : add byte ptr [rax], al ; and cl, dl ; cli ; jmp rsi
0x000000000042603e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000423900 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000465834 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000044c6db : add byte ptr [rax], al ; call r12
0x000000000047b9d4 : add byte ptr [rax], al ; call r14
0x000000000044c7b5 : add byte ptr [rax], al ; call r15
0x00000000004015ea : add byte ptr [rax], al ; call rax
0x0000000000440d79 : add byte ptr [rax], al ; call rbx
0x00000000004b181e : add byte ptr [rax], al ; call rdi
0x000000000040e94c : add byte ptr [rax], al ; call rdx
0x00000000004b09ce : add byte ptr [rax], al ; call rsp
0x00000000004bcb6e : add byte ptr [rax], al ; cld ; ret 0x4b
0x00000000004c70fa : add byte ptr [rax], al ; cld ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x17], dl ; cli ; jmp qword ptr [rdx]
0x00000000004c303a : add byte ptr [rax], al ; cmp al, 0x47 ; add byte ptr [rax], al ; and byte ptr [rax], bl ; clc ; call qword ptr [rax]
0x00000000004c353a : add byte ptr [rax], al ; cmp al, 0x4c ; add byte ptr [rax], al ; xor byte ptr [rsi], dh ; clc ; call qword ptr [rax]
0x00000000004c6d3a : add byte ptr [rax], al ; cmp al, 0x84 ; add byte ptr [rax], al ; and cl, dl ; cli ; jmp rsi
0x00000000004c1fb6 : add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rax]
0x0000000000410c37 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x410c48 ; pop rbx ; ret
0x0000000000464895 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x4648a9 ; ret
0x00000000004c7416 : add byte ptr [rax], al ; cwde ; adc bl, bh ; jmp qword ptr [rdx]
0x00000000004c6646 : add byte ptr [rax], al ; cwde ; js 0x4c664a ; call rax
0x00000000004c0a56 : add byte ptr [rax], al ; cwde ; pop rsi ; cmc ; jmp qword ptr [rax]
0x00000000004c45d6 : add byte ptr [rax], al ; fcom st(5) ; clc ; call qword ptr [rax]
0x00000000004c85da : add byte ptr [rax], al ; fcomp qword ptr [rax + rax - 0x3fc8000] ; call qword ptr [rax]
0x00000000004c1f56 : add byte ptr [rax], al ; fdiv dword ptr [rax - 0xa] ; call qword ptr [rax]
0x00000000004c8bda : add byte ptr [rax], al ; fsub qword ptr [rdx - 0x72800000] ; cld ; call qword ptr [rax]
0x00000000004c91da : add byte ptr [rax], al ; fsubr qword ptr [rax + 0x3ba00000] ; std ; call qword ptr [rbx]
0x00000000004c2ff2 : add byte ptr [rax], al ; hlt ; add byte ptr [rax], r8b ; adc rdi, rax ; call qword ptr [rax]
0x00000000004c4df2 : add byte ptr [rax], al ; hlt ; add byte ptr fs:[rax], al ; test al, 0xde ; stc ; jmp rax
0x00000000004c63f2 : add byte ptr [rax], al ; hlt ; jp 0x4c6400 ; add byte ptr [rax + 0x4c], bh ; cli ; jmp rsp
0x00000000004c85f2 : add byte ptr [rax], al ; hlt ; pushfq ; add byte ptr [rax], al ; js 0x4c8606 ; cld ; call qword ptr [rdx]
0x00000000004bebe2 : add byte ptr [rax], al ; in al, 2 ; add byte ptr [rax], al ; sub byte ptr [rbx], dh ; hlt ; call qword ptr [rdx]
0x00000000004bf2ea : add byte ptr [rax], al ; in al, dx ; or dword ptr [rax], eax ; add al, al ; div ah ; call qword ptr [rbx]
0x00000000004c45ea : add byte ptr [rax], al ; in al, dx ; pop rsp ; add byte ptr [rax], al ; rcl ch, 1 ; clc ; call qword ptr [rdx]
0x00000000004c19ea : add byte ptr [rax], al ; in al, dx ; xor byte ptr [rax], al ; add byte ptr [rax - 0x12], ah ; cmc ; call qword ptr [rdx]
0x00000000004c7b6a : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sti ; jmp qword ptr [rdx]
0x000000000049cd8b : add byte ptr [rax], al ; ja 0x49cd98 ; sbb eax, eax ; ret
0x00000000004c5b42 : add byte ptr [rax], al ; jb 0x4c5b50 ; add byte ptr [rax], bl ; adc edi, edx ; jmp qword ptr [rax]
0x000000000040f82c : add byte ptr [rax], al ; je 0x40f83f ; mov eax, edx ; pop rbx ; ret
0x0000000000420ff7 : add byte ptr [rax], al ; je 0x421004 ; ret
0x000000000047a788 : add byte ptr [rax], al ; je 0x47a797 ; mov eax, edx ; pop rbx ; ret
0x000000000049c216 : add byte ptr [rax], al ; je 0x49c204 ; add rsp, 0x18 ; ret
0x000000000049c2a6 : add byte ptr [rax], al ; je 0x49c28a ; ret
0x000000000049c2e7 : add byte ptr [rax], al ; je 0x49c2f8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004c4272 : add byte ptr [rax], al ; je 0x4c42d8 ; add byte ptr [rax], al ; test al, 0xb2 ; clc ; call qword ptr [rdi]
0x00000000004c157a : add byte ptr [rax], al ; jl 0x4c15b3 ; add byte ptr [rax], al ; and ah, cl ; cmc ; call rdx
0x00000000004c957a : add byte ptr [rax], al ; jl 0x4c9533 ; add byte ptr [rax], al ; jo 0x4c95db ; std ; call qword ptr [rdx]
0x0000000000469fa9 : add byte ptr [rax], al ; jmp 0x469f72
0x00000000004bcb66 : add byte ptr [rax], al ; jmp 0x4bcb2f
0x000000000043ff64 : add byte ptr [rax], al ; jmp rax
0x000000000049d1b2 : add byte ptr [rax], al ; jne 0x49d1d5 ; ret
0x00000000004c1d0e : add byte ptr [rax], al ; jo 0x4c1d52 ; idiv bh ; ret
0x00000000004c957e : add byte ptr [rax], al ; jo 0x4c95d7 ; std ; call qword ptr [rdx]
0x00000000004c0ba6 : add byte ptr [rax], al ; js 0x4c0c11 ; cmc ; call qword ptr [rsi]
0x00000000004c63f6 : add byte ptr [rax], al ; js 0x4c644b ; cli ; jmp rsp
0x00000000004c72a6 : add byte ptr [rax], al ; js 0x4c72b4 ; sti ; jmp rsi
0x00000000004c8306 : add byte ptr [rax], al ; js 0x4c830a ; sti ; jmp qword ptr [rax]
0x00000000004c85c6 : add byte ptr [rax], al ; js 0x4c85d2 ; cld ; call qword ptr [rdx]
0x00000000004c85f6 : add byte ptr [rax], al ; js 0x4c8602 ; cld ; call qword ptr [rdx]
0x00000000004c8626 : add byte ptr [rax], al ; js 0x4c8632 ; cld ; call qword ptr [rdx]
0x000000000043bf0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043bf1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043bf2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043bf3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043bf4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043be6d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043be8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043be9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043beae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bebe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043bece : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043bede : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043be1a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043beee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043befe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043be7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000047b819 : add byte ptr [rax], al ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x0000000000400986 : add byte ptr [rax], al ; leave ; ret
0x00000000004c34aa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; sub byte ptr [rbx], 0xf8 ; jmp rsp
0x00000000004c85aa : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pushfq ; add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004bcbb6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000004c421e : add byte ptr [rax], al ; loopne 0x4c41f0 ; std ; call qword ptr [rbx]
0x00000000004c50be : add byte ptr [rax], al ; loopne 0x4c50ad ; stc ; call qword ptr [rsi]
0x00000000004c03b2 : add byte ptr [rax], al ; mov ah, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx - 0xb], cl ; jmp qword ptr [rcx]
0x00000000004c1fb2 : add byte ptr [rax], al ; mov ah, 0x36 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rax]
0x00000000004c428e : add byte ptr [rax], al ; mov al, 0xb2 ; clc ; call qword ptr [rcx]
0x000000000043adee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000043963e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000043b8de : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b2be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000004bedc6 : add byte ptr [rax], al ; mov byte ptr [rsi - 0xc], bl ; call qword ptr [rax]
0x00000000004c123f : add byte ptr [rax], al ; mov ch, 0xf5 ; call qword ptr [rax]
0x000000000046496b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043b2ce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000042118e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x000000000046ab0e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000046aafe : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000046ab1e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x0000000000417ca1 : add byte ptr [rax], al ; mov eax, 0x6ca1a0 ; ret
0x0000000000463e81 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000410241 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004748c6 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000049d1be : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000004164ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000049e62e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e649 ; ret
0x000000000049e85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e879 ; ret
0x000000000048859e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x24465a] ; ret
0x000000000040f641 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fc38 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473506 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000040f875 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004449a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043b2fe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000046547b : add byte ptr [rax], al ; mov edi, 0x4b2dbc ; call 0x401749
0x0000000000402ba6 : add byte ptr [rax], al ; mov edi, 0x6cc0c0 ; call rbx
0x000000000049c014 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000049c03c : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000434e7e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043559e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000473b59 : add byte ptr [rax], al ; mov edx, r13d ; xor edi, edi ; call 0x43fde9
0x0000000000440d74 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004c4aba : add byte ptr [rax], al ; mov esp, 0x30000061 ; js 0x4c4ac5 ; call rdi
0x00000000004bf3ba : add byte ptr [rax], al ; mov esp, 0x5000000a ; clc ; hlt ; call qword ptr [rdx]
0x00000000004c4bba : add byte ptr [rax], al ; mov esp, 0x60000062 ; jp 0x4c4bc5 ; call rdx
0x00000000004c6eba : add byte ptr [rax], al ; mov esp, 0xa0000085 ; salc ; cli ; call rsi
0x00000000004c42ba : add byte ptr [rax], al ; mov esp, 0xc0000059 ; mov dl, 0xf8 ; call qword ptr [rcx]
0x00000000004c50ba : add byte ptr [rax], al ; mov esp, 0xe0000067 ; out 0xf9, al ; call qword ptr [rsi]
0x000000000047af48 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000454f35 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000487eb2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000487f36 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000470c54 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042ca8e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000049c33e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000047a500 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000044f5ef : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000041679e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000046669e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000004666ae : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000004666be : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000004666ce : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000004666de : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000004666ee : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004666fe : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000414cd9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410c50 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004151d5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000047838e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000471a8e : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x0000000000464e0e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041681e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c2be : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c34e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c3ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c39e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c35e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044568e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2875d1] ; ret
0x00000000004167fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b3259] ; ret
0x000000000049a08e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000047472f : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c4b8 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000040fac1 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041dfd2 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000041bfeb : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041682e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041e67f : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047a8c9 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000464dd5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464da7
0x0000000000440f66 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440e32 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440daa : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000440d9b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004411f0 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000041be0c : add byte ptr [rax], al ; mov rdi, rbx ; call 0x418067
0x00000000004627d6 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004620eb : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000004353de : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000417731 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x417754
0x000000000049cd2e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400574 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400587 ; ret
0x00000000004c0ba2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rax + 0x62], bh ; cmc ; call qword ptr [rsi]
0x00000000004c72a2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rax], eax ; add byte ptr [rax + 5], bh ; sti ; jmp rsi
0x00000000004bf3a2 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax - 8], bl ; hlt ; call qword ptr [rax]
0x000000000049a145 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000411dfe : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000043500e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004356ee : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043567e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000442d0c : add byte ptr [rax], al ; nop ; ret
0x00000000004c860a : add byte ptr [rax], al ; or al, 0x9d ; add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004c8c0a : add byte ptr [rax], al ; or al, 0xa3 ; add byte ptr [rax], al ; and ch, ch ; cld ; call qword ptr [rax]
0x00000000004c57d6 : add byte ptr [rax], al ; or byte ptr [rax], al ; cli ; jmp rdx
0x00000000004c03b6 : add byte ptr [rax], al ; or byte ptr [rcx - 0xb], cl ; jmp qword ptr [rcx]
0x0000000000476884 : add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004bed86 : add byte ptr [rax], al ; pop rax ; add edi, esi ; call rdi
0x00000000004bf3a6 : add byte ptr [rax], al ; pop rax ; clc ; hlt ; call qword ptr [rax]
0x00000000004c1f86 : add byte ptr [rax], al ; pop rax ; mov esi, dr0 ; call qword ptr [rax]
0x000000000045c3bd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045c48d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400886 : add byte ptr [rax], al ; pop rbp ; ret
0x000000000043e42a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000462e87 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a48c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000044294d : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004115b4 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004005a6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040046e : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000411b9b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004bfd5a : add byte ptr [rax], al ; pop rsp ; adc al, 0 ; add byte ptr [rax + 0x28], dl ; cmc ; call qword ptr [rax]
0x00000000004c6a5a : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xfaa86000 ; call rdx
0x00000000004c255a : add byte ptr [rax], al ; pop rsp ; cmp al, 0 ; add byte ptr [rax], ah ; ret
0x00000000004bf3be : add byte ptr [rax], al ; push rax ; clc ; hlt ; call qword ptr [rdx]
0x00000000004c5d1e : add byte ptr [rax], al ; push rax ; sbb al, 0xfa ; jmp rdi
0x00000000004bfd5e : add byte ptr [rax], al ; push rax ; sub ch, dh ; call qword ptr [rax]
0x00000000004bcb36 : add byte ptr [rax], al ; push rdi ; ret 0x4b
0x00000000004c1f52 : add byte ptr [rax], al ; push rsp ; add byte ptr ss:[rax], al ; fdiv dword ptr [rax - 0xa] ; call qword ptr [rax]
0x00000000004c7052 : add byte ptr [rax], al ; push rsp ; xchg dword ptr [rax], eax ; add byte ptr [rax], bl ; fdivp st(2) ; jmp qword ptr [rdx]
0x00000000004c569a : add byte ptr [rax], al ; pushfq ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sar dl, 0xf9 ; call rsi
0x00000000004bcb4e : add byte ptr [rax], al ; pushfq ; ret 0x4b
0x00000000004c8bae : add byte ptr [rax], al ; rcl bl, 1 ; cld ; call qword ptr [rax]
0x00000000004c761e : add byte ptr [rax], al ; rcl byte ptr [rdx], 0xfb ; call qword ptr [rax]
0x00000000004c45be : add byte ptr [rax], al ; rcl ch, 1 ; clc ; call qword ptr [rbx]
0x00000000004c45ee : add byte ptr [rax], al ; rcl ch, 1 ; clc ; call qword ptr [rdx]
0x00000000004010d3 : add byte ptr [rax], al ; ret
0x00000000004a7ba6 : add byte ptr [rax], al ; ret 0
0x00000000004aeb1e : add byte ptr [rax], al ; ret 0x10
0x00000000004b07ee : add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0f86 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004af7f6 : add byte ptr [rax], al ; ret 0x24
0x00000000004afce6 : add byte ptr [rax], al ; ret 0x33
0x00000000004a4426 : add byte ptr [rax], al ; ret 0x43e3
0x00000000004a4e16 : add byte ptr [rax], al ; ret 0x43ef
0x00000000004ae31e : add byte ptr [rax], al ; ret 0xa
0x00000000004ae71e : add byte ptr [rax], al ; ret 0xd
0x00000000004b1bc2 : add byte ptr [rax], al ; ret 1
0x00000000004b1dc2 : add byte ptr [rax], al ; ret 2
0x00000000004b1fc2 : add byte ptr [rax], al ; ret 3
0x00000000004b21c2 : add byte ptr [rax], al ; ret 4
0x00000000004b23c2 : add byte ptr [rax], al ; ret 5
0x00000000004adec6 : add byte ptr [rax], al ; ret 6
0x00000000004b27c2 : add byte ptr [rax], al ; ret 7
0x00000000004b29c2 : add byte ptr [rax], al ; ret 8
0x00000000004b2bc2 : add byte ptr [rax], al ; ret 9
0x00000000004b21be : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004ae5c6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004bf2ee : add byte ptr [rax], al ; sal dh, 0xf4 ; call qword ptr [rbx]
0x00000000004bcb5e : add byte ptr [rax], al ; salc ; ret 0x4b
0x00000000004c1d8e : add byte ptr [rax], al ; sar byte ptr [rdi], 0xf6 ; call qword ptr [rsi]
0x00000000004c569e : add byte ptr [rax], al ; sar dl, 0xf9 ; call rsi
0x00000000004c421a : add byte ptr [rax], al ; sbb al, 0x59 ; add byte ptr [rax], al ; loopne 0x4c41f4 ; std ; call qword ptr [rbx]
0x00000000004c5d1a : add byte ptr [rax], al ; sbb al, 0x74 ; add byte ptr [rax], al ; push rax ; sbb al, 0xfa ; jmp rdi
0x00000000004c761a : add byte ptr [rax], al ; sbb al, 0x8d ; add byte ptr [rax], al ; rcl byte ptr [rdx], 0xfb ; call qword ptr [rax]
0x00000000004c5b46 : add byte ptr [rax], al ; sbb byte ptr [rbx], dl ; cli ; jmp qword ptr [rax]
0x00000000004c7056 : add byte ptr [rax], al ; sbb dh, bl ; cli ; jmp qword ptr [rdx]
0x00000000004c3406 : add byte ptr [rax], al ; sub al, dl ; std ; jmp qword ptr [rdx]
0x00000000004c34ae : add byte ptr [rax], al ; sub byte ptr [rbx], 0xf8 ; jmp rsp
0x00000000004bebe6 : add byte ptr [rax], al ; sub byte ptr [rbx], dh ; hlt ; call qword ptr [rdx]
0x000000000042f29c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000415c26 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000442805 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004671b3 : add byte ptr [rax], al ; syscall ; ret
0x00000000004c4276 : add byte ptr [rax], al ; test al, 0xb2 ; clc ; call qword ptr [rdi]
0x00000000004c4df6 : add byte ptr [rax], al ; test al, 0xde ; stc ; jmp rax
0x00000000004c0582 : add byte ptr [rax], al ; test byte ptr [rax + rax], bl ; add byte ptr [rax + 0x4f], ch ; cmc ; call qword ptr [rcx]
0x00000000004c1f82 : add byte ptr [rax], al ; test byte ptr [rsi], dh ; add byte ptr [rax], al ; pop rax ; mov esi, dr0 ; call qword ptr [rax]
0x00000000004426b9 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x00000000004c4abe : add byte ptr [rax], al ; xor byte ptr [rax - 7], bh ; call rdi
0x00000000004c1fce : add byte ptr [rax], al ; xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rsi]
0x00000000004c353e : add byte ptr [rax], al ; xor byte ptr [rsi], dh ; clc ; call qword ptr [rax]
0x0000000000451b87 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000040eb9b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a4a5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041ca96 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b6e : add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004133fe : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x413419 ; ret
0x00000000004c7b6f : add byte ptr [rax], al ; xor edi, ebx ; jmp qword ptr [rdx]
0x0000000000488121 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440ce6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440d0b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440d2f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440d4f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000425fed : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000400982 : add byte ptr [rax], bh ; leave ; ret
0x00000000004c7b27 : add byte ptr [rax], bh ; mov dh, bl ; jmp qword ptr [rsi]
0x00000000004c5b47 : add byte ptr [rax], bl ; adc edi, edx ; jmp qword ptr [rax]
0x00000000004c7057 : add byte ptr [rax], bl ; fdivp st(2) ; jmp qword ptr [rdx]
0x00000000004a3ee4 : add byte ptr [rax], bl ; stc ; call qword ptr [rax + 0x20fff917]
0x00000000004bcb27 : add byte ptr [rax], ch ; ret 0x4b
0x00000000004c3407 : add byte ptr [rax], ch ; sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004bebe7 : add byte ptr [rax], ch ; xor esi, esp ; call qword ptr [rdx]
0x00000000004c57d7 : add byte ptr [rax], cl ; add dl, bh ; jmp rdx
0x00000000004c03b7 : add byte ptr [rax], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000476885 : add byte ptr [rax], cl ; je 0x4768f2 ; pop rbx ; ret
0x000000000049aa8e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x231a69], 8 ; ret
0x000000000049aa95 : add byte ptr [rax], cl ; ret
0x00000000004bcb17 : add byte ptr [rax], cl ; ret 0x4b
0x00000000004c353f : add byte ptr [rax], dh ; clc ; call qword ptr [rax]
0x00000000004c4abf : add byte ptr [rax], dh ; js 0x4c4ac0 ; call rdi
0x00000000004c8b7f : add byte ptr [rax], dh ; mov ah, 0xfc ; call qword ptr [rax]
0x0000000000400fbf : add byte ptr [rax], dl ; jmp 0x400f23
0x00000000004bcb77 : add byte ptr [rax], dl ; ret
0x00000000004c3f5f : add byte ptr [rax], dl ; xchg eax, ebp ; clc ; jmp rbx
0x00000000004c2ff5 : add byte ptr [rax], r8b ; adc rdi, rax ; call qword ptr [rax]
0x0000000000470d3d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000047835d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x000000000047e1bd : add byte ptr [rax], r8b ; call rbx
0x00000000004748c5 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000043b2ed : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000042ca8d : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000043b32d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000400885 : add byte ptr [rax], r8b ; pop rbp ; ret
0x000000000047acc5 : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000412c1d : add byte ptr [rax], r8b ; ret
0x00000000004c353d : add byte ptr [rax], r8b ; xor byte ptr [rsi], dh ; clc ; call qword ptr [rax]
0x00000000004133dd : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000049d1b3 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004673d7 : add byte ptr [rbp + 0x39440750], cl ; ret 0x8d0f
0x000000000041b291 : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x000000000041b40e : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047877c : add byte ptr [rbp + 0x39], dh ; xor eax, eax ; add rsp, 0x68 ; ret
0x000000000045c3be : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000045c48e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000004006aa : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000474697 : add byte ptr [rbp + 0x6348ff59], cl ; ret
0x000000000045c24f : add byte ptr [rbp + 0xa], dh ; jmp 0x45c27e
0x0000000000478602 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x000000000041ddfe : add byte ptr [rbp + 0xb], dh ; jmp 0x41de2f
0x0000000000478f9f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000478e8f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004786a4 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000049c2e8 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x00000000004c6ebb : add byte ptr [rbp + rax*4 - 0x29600000], bh ; cli ; call rsi
0x00000000004c569b : add byte ptr [rbp + rbp*2 - 0x5400000], bl ; stc ; call rsi
0x000000000049c200 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004ae717 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000464f5e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000499f16 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x243
0x00000000004678e6 : add byte ptr [rbp + rcx*4 - 0x58], cl ; ret 0x6c
0x00000000004678d5 : add byte ptr [rbp + rcx*4 - 0x80], cl ; push rax ; ret 0x6c
0x000000000049f1f4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000004426ba : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004ae9c3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x000000000041da9f : add byte ptr [rbp - 0x42], dh ; ret
0x00000000004527c9 : add byte ptr [rbp - 0x75], cl ; jl 0x4527fa ; and byte ptr [rax + 1], cl ; ret
0x000000000045ca49 : add byte ptr [rbp - 0x75], cl ; jl 0x45ca7a ; and byte ptr [rax + 1], cl ; ret
0x000000000046202f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000447f54 : add byte ptr [rbp - 0x77], cl ; fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000043e0dc : add byte ptr [rbp - 0x7b], al ; fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000048062f : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x000000000049e5d7 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004a4e0f : add byte ptr [rbp*8 + 0x43], dl ; add byte ptr [rax], al ; ret 0x43ef
0x00000000004292a9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x00000000004748b8 : add byte ptr [rbx + 0x2562500d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000043e42b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000470200 : add byte ptr [rbx + 0x25c99115], cl ; add bh, dh ; ret 0x804
0x0000000000410c38 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000416897 : add byte ptr [rbx + 0x2b56a505], al ; add byte ptr [rcx], al ; ret
0x000000000047bb61 : add byte ptr [rbx + 0x3950245c], cl ; ret
0x000000000044294e : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000045a48d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000043b2ff : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043ae2f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x00000000004617ec : add byte ptr [rbx + 0x4b], al ; add bh, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000420257 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x0000000000434e7f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000470d36 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000041e787 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000412631 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004115b5 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004005a7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040046f : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004c0c8b : add byte ptr [rbx + 0x63a00000], cl ; cmc ; call qword ptr [rdx]
0x000000000049e62f : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000483ba5 : add byte ptr [rbx + 0xa880], cl ; add byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000044f4ea : add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000049c2a7 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x00000000004c34ab : add byte ptr [rbx + rcx*2 + 0x2b800000], ch ; clc ; jmp rsp
0x00000000004c3403 : add byte ptr [rbx + rcx*2], al ; add byte ptr [rax], al ; sub al, dl ; std ; jmp qword ptr [rdx]
0x00000000004750c2 : add byte ptr [rbx + rcx*4 + 0x45], al ; test byte ptr [rax - 0x77], cl ; ret
0x000000000047a467 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047ff77 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000443c65 : add byte ptr [rbx + rcx*4 + 5], al ; ret
0x00000000004c7413 : add byte ptr [rbx + rcx*4], dl ; add byte ptr [rax], al ; cwde ; adc bl, bh ; jmp qword ptr [rdx]
0x0000000000460558 : add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000047c887 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x47c8a1 ; ret
0x0000000000467aca : add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410bcf : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e4a6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x000000000043e49f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x000000000043e498 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x000000000043e491 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x000000000043e48a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x000000000043e483 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x000000000045dcfe : add byte ptr [rbx - 0x4db43], al ; call qword ptr [rax]
0x000000000043e1f5 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000043e1e0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000474921 : add byte ptr [rbx - 0x57fef1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x000000000047518e : add byte ptr [rbx - 0x57ffb1e], al ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x0000000000443b0f : add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x0000000000462e88 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000410434 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000043d2e6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406743 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000462ab4 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000040a3b8 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x000000000049e04f : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x00000000004429af : add byte ptr [rbx - 0xc8a0008], al ; xor eax, eax ; leave ; ret
0x000000000041662e : add byte ptr [rbx - 0xd], bl ; ret
0x00000000004a4280 : add byte ptr [rbx - 7], dh ; jmp qword ptr [rax]
0x00000000004c8623 : add byte ptr [rbx*4 + 0x3780000], ah ; cld ; call qword ptr [rdx]
0x00000000004c860b : add byte ptr [rbx*4 + 0x3800000], cl ; cld ; call qword ptr [rax]
0x00000000004c85b0 : add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x0000000000470c87 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004bcb1f : add byte ptr [rbx], bl ; ret 0x4b
0x00000000004c8c0b : add byte ptr [rbx], cl ; add byte ptr [rax], al ; and ch, ch ; cld ; call qword ptr [rax]
0x00000000004a4140 : add byte ptr [rbx], cl ; stc ; push qword ptr [rax + 0xa] ; stc ; jmp rax
0x00000000004c7b70 : add byte ptr [rbx], dh ; sti ; jmp qword ptr [rdx]
0x000000000044ee6f : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000046572f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000041b1cf : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x0000000000489a4d : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000426966 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000047e40e : add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x000000000040fc39 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000040f642 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x00000000004750ff : add byte ptr [rcx + 0x48b48d8], cl ; ret 0x8b48
0x00000000004154f6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000046496c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042fcce : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000049a146 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000042e54c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b178 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004c4abb : add byte ptr [rcx + 0x78300000], bh ; stc ; call rdi
0x0000000000440585 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000045d304 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d287 : add byte ptr [rcx + 0xf], al ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000041aec7 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000046f3ae : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000403c85 : add byte ptr [rcx + 0xf], cl ; ret
0x000000000043d9ef : add byte ptr [rcx + 1], cl ; ret
0x000000000049b395 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000042075a : add byte ptr [rcx + 9], al ; ret
0x0000000000412582 : add byte ptr [rcx + r9*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004c6a5b : add byte ptr [rcx + rax*4], bl ; add byte ptr [rax - 0x58], ah ; cli ; call rdx
0x00000000004c42bb : add byte ptr [rcx + rbx*2 - 0x4d400000], bh ; clc ; call qword ptr [rcx]
0x00000000004c42a3 : add byte ptr [rcx + rbx*2 - 0x4d480000], ah ; clc ; call qword ptr [rcx]
0x00000000004c428b : add byte ptr [rcx + rbx*2 - 0x4d500000], cl ; clc ; call qword ptr [rcx]
0x00000000004c421b : add byte ptr [rcx + rbx*2], bl ; add byte ptr [rax], al ; loopne 0x4c41f3 ; std ; call qword ptr [rbx]
0x000000000042ca8f : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x00000000004c72a3 : add byte ptr [rcx + rcx*4 + 0x5780000], ah ; sti ; jmp rsi
0x0000000000412583 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000440e33 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000473b5a : add byte ptr [rcx + rcx*4 - 0x16], al ; xor edi, edi ; call 0x43fde8
0x000000000047e30f : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000440f67 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000445322 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000049cd2f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x0000000000440d9c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000044527c : add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x0000000000440dab : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000048eeab : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000048bff3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x0000000000488df3 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x000000000045b004 : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x00000000004054c4 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000449cc3 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000449ce0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449cfd : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x0000000000482fc0 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000047fcab : add byte ptr [rcx - 0x75], al ; adc bh, byte ptr [rcx] ; ret 0x850f
0x000000000044089f : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000040e8af : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000442817 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000425903 : add byte ptr [rcx - 0x77], cl ; ret
0x000000000040fbd7 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004114a3 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004589ee : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000444007 : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000445d77 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x000000000046c97f : add byte ptr [rcx - 0x7d], cl ; ret 0x4b30
0x0000000000422aef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000041fda0 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004216bf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041827f : add byte ptr [rcx - 0xa], al ; ret
0x000000000041a189 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a193 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000047cd61 : add byte ptr [rcx - 0xb37b], cl ; inc dword ptr [rcx - 0x77] ; ret
0x000000000047c88a : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000004be214 : add byte ptr [rcx - 3], bh ; jmp rax
0x00000000004a4224 : add byte ptr [rcx - 7], dh ; call qword ptr [rax]
0x0000000000426112 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000426138 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004c761b : add byte ptr [rcx*4 + 0x12c00000], bl ; sti ; call qword ptr [rax]
0x000000000049a59a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000442f62 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x00000000004008fb : add byte ptr [rcx], al ; pop rbp ; ret
0x00000000004748be : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000041689d : add byte ptr [rcx], al ; ret
0x000000000044415c : add byte ptr [rcx], bh ; ret
0x00000000004bcb2f : add byte ptr [rcx], bh ; ret 0x4b
0x0000000000400bdc : add byte ptr [rcx], bh ; ret 0x860f
0x00000000004680e9 : add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x000000000045b78c : add byte ptr [rcx], ch ; ret 0xd089
0x000000000041388a : add byte ptr [rcx], cl ; ret 0x8948
0x000000000047b487 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040eb9c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046b0cf : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b0ca ; ret
0x000000000046ad4a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ad81 ; ret
0x0000000000488b17 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000004133ff : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413418 ; ret
0x000000000047a778 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000488122 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000447bae : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446da7 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000044722e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000044417b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000041ae1b : add byte ptr [rdi + 0x4a285c], bh ; call 0x417058
0x000000000041ae1a : add byte ptr [rdi + 0x4a285c], dil ; call 0x417059
0x000000000041ae02 : add byte ptr [rdi + 0x4a288b], bh ; call 0x417058
0x000000000041ae01 : add byte ptr [rdi + 0x4a288b], dil ; call 0x417059
0x000000000046547c : add byte ptr [rdi + 0x4b2dbc], bh ; call 0x401748
0x0000000000432c85 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000445730 : add byte ptr [rdi + 0x6cc070], bh ; call rax
0x000000000044572f : add byte ptr [rdi + 0x6cc070], r15b ; call rax
0x0000000000402ba7 : add byte ptr [rdi + 0x6cc0c0], bh ; call rbx
0x000000000047aab1 : add byte ptr [rdi + 0x6cc360], bh ; call rax
0x000000000047abdc : add byte ptr [rdi + 0x6cc364], bh ; call rdx
0x000000000049c015 : add byte ptr [rdi + 1], bh ; call r14
0x000000000049c03d : add byte ptr [rdi + 1], bh ; call rax
0x000000000049cd8c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004c303b : add byte ptr [rdi + rax*2], bh ; add byte ptr [rax], al ; and byte ptr [rax], bl ; clc ; call qword ptr [rax]
0x00000000004c7053 : add byte ptr [rdi + rax*4], dl ; add byte ptr [rax], bl ; fdivp st(2) ; jmp qword ptr [rdx]
0x000000000045b6e4 : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000045a6d0 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x00000000004c50bb : add byte ptr [rdi - 0x19200000], bh ; stc ; call qword ptr [rsi]
0x000000000043461a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000043e387 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043567f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000004356ef : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000448b4e : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000462aa7 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000042295f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000466820 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000411dff : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042e55f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004261bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042cdbf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042605f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042604f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042603f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000004671c7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000044d588 : add byte ptr [rdi], cl ; ret 0x4389
0x0000000000403223 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000004493fa : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000420754 : add byte ptr [rdi], cl ; test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x0000000000460b29 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x0000000000451cc9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047db58 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x000000000040ed19 : add byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042006a : add byte ptr [rdi], cl ; test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045df2b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000467c79 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000442f66 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc985
0x0000000000467bed : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046bb5a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000042667e : add byte ptr [rdx + 0x42fb80], bh ; cmove rax, rdx ; ret
0x000000000043adef : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000043963f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000049c217 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x00000000004c0ba3 : add byte ptr [rdx + 0x62780000], ah ; cmc ; call qword ptr [rsi]
0x00000000004c4bbb : add byte ptr [rdx + 0x7a600000], bh ; stc ; call rdx
0x000000000044499f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x00000000004c03b3 : add byte ptr [rdx + rbx + 0x49080000], dh ; cmc ; jmp qword ptr [rcx]
0x00000000004c8303 : add byte ptr [rdx + rbx*4], al ; add byte ptr [rax], al ; js 0x4c830d ; sti ; jmp qword ptr [rax]
0x00000000004ae317 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000004bf3a3 : add byte ptr [rdx + rcx - 0x7a80000], ah ; hlt ; call qword ptr [rax]
0x00000000004bf3bb : add byte ptr [rdx + rcx - 0x7b00000], bh ; hlt ; call qword ptr [rdx]
0x000000000040f9c6 : add byte ptr [rdx + rcx*2], ah ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004bfbbb : add byte ptr [rdx + rdx + 0x1ff00000], bh ; cmc ; jmp qword ptr [rsi]
0x00000000004c7b6b : add byte ptr [rdx + rdx*4], ch ; add byte ptr [rax], al ; xor edi, ebx ; jmp qword ptr [rdx]
0x00000000004c5b43 : add byte ptr [rdx + rsi*2], al ; add byte ptr [rax], bl ; adc edi, edx ; jmp qword ptr [rax]
0x00000000004c8bab : add byte ptr [rdx - 0x2c300000], ch ; cld ; call qword ptr [rax]
0x00000000004a39ec : add byte ptr [rdx - 0x48d90008], bh ; clc ; call rdx
0x0000000000469930 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469945
0x00000000004a38b8 : add byte ptr [rdx - 0x7c2f0008], 0xf8 ; jmp qword ptr [rax]
0x00000000004be1f4 : add byte ptr [rdx - 3], ch ; jmp rax
0x00000000004a4260 : add byte ptr [rdx - 7], dh ; jmp qword ptr [rax]
0x0000000000488ea5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000004678e2 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 - 0x58], cl ; ret 0x6c
0x000000000044f5ed : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x00000000004c8b7b : add byte ptr [rdx], bh ; add byte ptr [rax], dh ; mov ah, 0xfc ; call qword ptr [rax]
0x00000000004bcb87 : add byte ptr [rdx], dh ; ret
0x000000000042e854 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457dc3 : add byte ptr [rsi + 0xf], ah ; ror byte ptr cs:[rdi], 0x8a ; ret 8
0x0000000000425f54 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000440d75 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000440f62 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x0000000000440e2e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000440da6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000004411e0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000440f53 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x0000000000440e1f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000440d97 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000004c3f5b : add byte ptr [rsi + rdx*2], bl ; add byte ptr [rax], dl ; xchg eax, ebp ; clc ; jmp rbx
0x00000000004c1f53 : add byte ptr [rsi + rsi], dl ; add al, bl ; jo 0x4c1f59 ; call qword ptr [rax]
0x0000000000442d0d : add byte ptr [rsi - 0x70], ah ; ret
0x00000000004c6d3b : add byte ptr [rsp + rax*4], bh ; add byte ptr [rax], al ; and cl, dl ; cli ; jmp rsi
0x00000000004c957b : add byte ptr [rsp + rbp*4], bh ; add byte ptr [rax + 0x50], dh ; std ; call qword ptr [rdx]
0x00000000004c0583 : add byte ptr [rsp + rbx + 0x4f680000], al ; cmc ; call qword ptr [rcx]
0x00000000004c45bb : add byte ptr [rsp + rbx*2 - 0x2a300000], bh ; clc ; call qword ptr [rbx]
0x00000000004c85ab : add byte ptr [rsp + rbx*4 + 0x3800000], ch ; cld ; call qword ptr [rax]
0x00000000004c353b : add byte ptr [rsp + rcx*2], bh ; add byte ptr [rax], al ; xor byte ptr [rsi], dh ; clc ; call qword ptr [rax]
0x00000000004c255b : add byte ptr [rsp + rdi], bl ; add byte ptr [rax], ah ; ret
0x00000000004bfd5b : add byte ptr [rsp + rdx], bl ; add byte ptr [rax + 0x28], dl ; cmc ; call qword ptr [rax]
0x00000000004c5d1b : add byte ptr [rsp + rsi*2], bl ; add byte ptr [rax], al ; push rax ; sbb al, 0xfa ; jmp rdi
0x00000000004c1d0b : add byte ptr [rsp + rsi], cl ; add byte ptr [rax], al ; jo 0x4c1d55 ; idiv bh ; ret
0x000000000045c816 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004692b7 : add byte ptr es:[rax - 0x77], cl ; jmp 0xffffffffbf091c0f
0x0000000000467ea3 : add byte ptr es:[rax - 0x7d], cl ; ret
0x0000000000468813 : add byte ptr es:[rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x000000000045c24e : add byte ptr es:[rbp + 0xa], dh ; jmp 0x45c27f
0x0000000000467c78 : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000467bec : add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046992f : add byte ptr es:[rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469946
0x0000000000425d08 : add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004426b7 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004c4df5 : add byte ptr fs:[rax], al ; test al, 0xde ; stc ; jmp rax
0x000000000044572e : add byte ptr fs:[rdi + 0x6cc070], r15b ; call rax
0x00000000004133d0 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411b33 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004c1fb5 : add byte ptr ss:[rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rax]
0x00000000004c1f55 : add byte ptr ss:[rax], al ; fdiv dword ptr [rax - 0xa] ; call qword ptr [rax]
0x00000000004c1f85 : add byte ptr ss:[rax], al ; pop rax ; mov esi, dr0 ; call qword ptr [rax]
0x00000000004c1fcd : add byte ptr ss:[rax], al ; xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rsi]
0x00000000004586df : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004bb97c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004bb97d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000046737b : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000464c7a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000045d340 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000041addd : add ch, cl ; paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000472478 : add ch, cl ; ret 0xfffd
0x00000000004a4189 : add cl, bh ; call rax
0x000000000045a7a9 : add cl, bl ; in eax, -0x21 ; loopne 0x45a73e ; ret 0xe680
0x0000000000439667 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000045dc3e : add cl, byte ptr [rax + 0x29] ; ret
0x0000000000489544 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048956d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000449983 : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046f86b : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000410619 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000483e05 : add cl, byte ptr [rax + 1] ; ret
0x000000000044cff3 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000439668 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000004395d5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047beb1 : add cl, byte ptr [rax - 0x77] ; pop rsp ; and al, 0x78 ; call r12
0x00000000004164d2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000041afc2 : add cl, byte ptr [rax - 0x7d] ; enter 0x4801, -0x7d ; ret 0x4810
0x000000000046b199 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004798bc : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000004237a0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000448594 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000423803 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x00000000004642a1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000004c0158 : add cl, byte ptr [rbp + 0xa] ; ret
0x0000000000489f33 : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004354c2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000041c064 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x000000000043f57f : add cl, byte ptr [rdi] ; ret 0x8348
0x000000000043f4d7 : add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000041b408 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000462c85 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000046e2b9 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e15d : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000004c805f : add cl, byte ptr [rdx] ; ret
0x000000000047658d : add cl, ch ; mov esi, 0x89fffffe ; ret 0x758b
0x0000000000443d7f : add cl, ch ; ret
0x00000000004085b8 : add cl, ch ; ret 0xffe2
0x00000000004723a4 : add cl, ch ; ret 0xfffd
0x0000000000400987 : add cl, cl ; ret
0x00000000004c0060 : add dh, ah ; ret
0x00000000004654d2 : add dh, al ; and al, 0x14 ; add al, ch ; ret
0x00000000004b1817 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435673 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000043fd8b : add dh, bl ; ret
0x00000000004bff5e : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x000000000041750a : add dh, dh ; ret
0x0000000000446fb5 : add dh, dh ; ret 0x4801
0x0000000000426818 : add dh, dh ; ret 0x7404
0x0000000000400e1a : add dh, dh ; ret 0x7420
0x000000000043bd17 : add dh, dh ; ret 0x7501
0x000000000043bd24 : add dh, dh ; ret 0x7502
0x000000000043bd31 : add dh, dh ; ret 0x7504
0x000000000043bce9 : add dh, dh ; ret 0x7510
0x000000000043bcf6 : add dh, dh ; ret 0x7520
0x000000000043bd03 : add dh, dh ; ret 0x7540
0x000000000041b405 : add dh, dh ; ret 0xf02
0x000000000047087a : add dh, dh ; ret 0xf08
0x00000000004bcb5f : add dh, dl ; ret 0x4b
0x00000000004a3c90 : add dl, al ; clc ; call rax
0x00000000004c57d9 : add dl, bh ; jmp rdx
0x00000000004a3db8 : add dl, byte ptr [rsi] ; stc ; call qword ptr [rdx + 0x22fff915]
0x00000000004c97df : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x00000000004c1ffc : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000449cc6 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000004623be : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462b12 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000004708ec : add dword ptr [r9 - 0x5efa09fe], ecx ; ret 0x25
0x0000000000449330 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000000000043adf1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000415151 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000474709 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047471b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x0000000000479a50 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000045973d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000049d0a3 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000047bdfd : add dword ptr [rax + 1], ecx ; ret
0x000000000040db06 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004c536e : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000458226 : add dword ptr [rax - 0x39], ecx ; ret 0xfff0
0x00000000004027f3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000439641 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000004745ad : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000004395d2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000414f53 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004187ce : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004150ea : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000465401 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000471be7 : add dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000412e3f : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x000000000047450d : add dword ptr [rax - 0x7d], ecx ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004257c2 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004737c4 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004623bf : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000450589 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041afc6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000044457c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x0000000000452a63 : add dword ptr [rax - 0x7d], ecx ; ret 0x4910
0x0000000000446c8e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000489e24 : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000047d623 : add dword ptr [rax - 0x7d], ecx ; ret 0x8008
0x0000000000462b13 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000048126a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004c6a5d : add dword ptr [rax], 0xfaa86000 ; call rdx
0x0000000000411c76 : add dword ptr [rax], eax ; add al, al ; and dword ptr [rdx], ecx ; pop rbx ; ret
0x000000000040f916 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000044c1d6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000044b34e : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000004738d4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000047ec47 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x0000000000421069 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000041b17b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004114f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000049d96a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000044f0e5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049beb5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004648f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000041e596 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041e6c0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004059d7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041c747 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000040ed1d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042358d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000449784 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000042559e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042c00f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004234e1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044c532 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000463e80 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000444a01 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004b181a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004b09ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004b07f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b07ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004b0f82 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049c017 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x00000000004015e8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000440d77 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x000000000049cd89 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x49cd9a ; sbb eax, eax ; ret
0x0000000000469fa7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x469f74
0x000000000049ccdd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000049c620 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000047a4fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000440f64 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000440e30 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000440da8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004411ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000004627d4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x00000000004620e9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000045c48b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000415553 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e9dc : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000444127 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000041b40c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x0000000000499f14 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x243
0x000000000049be06 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004005a5 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444213 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000467ac8 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x38b7cf18], al ; ret
0x0000000000410432 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000462ab2 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000445dfc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000041fd9e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000004493fe : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041d10b : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000041a191 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000004680e7 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x0000000000413888 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000446da5 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000043bd15 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000000000043bd22 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043bd2f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000043bce7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000043bcf4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043bd01 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000004212d8 : add dword ptr [rax], eax ; ret
0x0000000000425bc1 : add dword ptr [rax], edi ; ret
0x000000000043e197 : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x000000000047e302 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x00000000004008fc : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000489f13 : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000485e37 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret 0x2941
0x0000000000442629 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000435532 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000040d53d : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000004c982a : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000004c9827 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000046a0b9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000446dca : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000447258 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00000000004708ed : add dword ptr [rcx - 0x5efa09fe], ecx ; ret 0x25
0x000000000041ba3a : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x0000000000439671 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000461ed0 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000445dad : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x000000000040422d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x00000000004255b7 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041bd45 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000047757b : add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004c727d : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004c71bd : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004c721d : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004c71ce : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004c722e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c728e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c2e6d : add dword ptr [rdi], 3 ; mov bh, 1 ; ret
0x00000000004c805b : add dword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004c7faa : add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x000000000043e1f8 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e1e3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000045bc71 : add dword ptr [rdi], ecx ; test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041832e : add dword ptr [rdi], ecx ; test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041a6ad : add dword ptr [rdi], ecx ; test esi, ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000041d111 : add dword ptr [rdi], ecx ; test esp, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000474927 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475194 : add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043e0bd : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x0000000000499ec0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x000000000043dc82 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043587d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048839b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004c005e : add dword ptr [rdx + rax], -0xc ; ret
0x000000000046d8c7 : add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x000000000046dbb7 : add dword ptr [rdx - 0x77], eax ; je 0x46db47 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046dbb6 : add dword ptr [rdx - 0x77], eax ; je 0x46db48 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x00000000004c12cd : add dword ptr [rdx], 0x43 ; ret
0x00000000004c6f8d : add dword ptr [rdx], 0x48 ; ret
0x00000000004c6a4c : add dword ptr [rdx], 0x55 ; ret
0x00000000004c6f84 : add dword ptr [rdx], 0x5b ; ret
0x00000000004c956c : add dword ptr [rdx], 0x76 ; ret
0x00000000004c54bc : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000004c5294 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000004c08cc : add dword ptr [rdx], 2 ; ret
0x00000000004c016a : add dword ptr [rdx], ecx ; ret
0x0000000000416898 : add dword ptr [rip + 0x2b56a5], 1 ; ret
0x00000000004bf5d6 : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf5ec ; ret
0x00000000004bf5e4 : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000439652 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004c046e : add dword ptr [rsi], 0xa ; ret
0x00000000004c04e0 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000004c1ffd : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000400c8d : add dword ptr [rsi], edx ; and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x00000000004c29c6 : add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004977d7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c8072 : add dword ptr es:[rdx], ecx ; ret
0x0000000000426c78 : add eax, 0x12ad3 ; ret
0x0000000000423748 : add eax, 0x14853 ; ret
0x00000000004260ea : add eax, 0x15e71 ; ret
0x00000000004266c4 : add eax, 0x17647 ; ret
0x00000000004212d5 : add eax, 0x1a966 ; ret
0x00000000004260ce : add eax, 0x1d ; ret
0x000000000044f5ec : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000049e6f1 : add eax, 0x22dfee ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000049e5e1 : add eax, 0x22e0fe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004c1b44 : add eax, 0x2300e4a ; ret
0x00000000004885a1 : add eax, 0x24465a ; ret
0x00000000004767b0 : add eax, 0x2563e2 ; jne 0x4767f9 ; ret
0x0000000000473fbc : add eax, 0x258747 ; mov qword ptr [rsi], rax ; ret
0x0000000000473f5b : add eax, 0x2587b0 ; ret
0x0000000000473e7a : add eax, 0x258891 ; add rsp, 8 ; ret
0x000000000044ca02 : add eax, 0x27f691 ; ret
0x0000000000445692 : add eax, 0x2875d1 ; ret
0x0000000000444141 : add eax, 0x288b0a ; test eax, eax ; je 0x444159 ; ret
0x000000000041dc29 : add eax, 0x2ae376 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416802 : add eax, 0x2b3259 ; ret
0x0000000000416906 : add eax, 0x2b5639 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004014cb : add eax, 0x2c8560 ; xor eax, eax ; ret
0x00000000004006a6 : add eax, 0x2ca3a5 ; pop rbp ; pop r12 ; ret
0x00000000004c1ffb : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x000000000043ae88 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00000000004396b8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000043b386 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000043af09 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004396f9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000047a906 : add eax, 0x5b000000 ; ret
0x00000000004b23bd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000418bc5 : add eax, 0x5c415d5b ; ret
0x0000000000426d94 : add eax, 0x67 ; ret
0x0000000000489f93 : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000043e0b7 : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000042317d : add eax, 0x83480000 ; ret 0x4910
0x000000000042a601 : add eax, 0x83480000 ; ret 0xe910
0x00000000004230d1 : add eax, 0x83480000 ; ret 0xeb10
0x00000000004565dd : add eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000043ae8b : add eax, 0x8428d48 ; ret
0x00000000004260e2 : add eax, 0x8449 ; ret
0x000000000048567a : add eax, 0x89000001 ; ret 0x348
0x000000000044997d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000449cde : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449cfb : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000042f58a : add eax, 0xc0310000 ; ret
0x000000000043af0d : add eax, 0xc428d48 ; ret
0x000000000043b9ed : add eax, 0xc478d48 ; ret
0x0000000000441212 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000441237 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000441380 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000441419 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000041a187 : add eax, 0xf6410000 ; ret 0xf01
0x000000000049c2ea : add eax, 0xf7148948 ; ret
0x0000000000435523 : add eax, 0xf7f0ff3 ; ret
0x000000000049e5fa : add eax, 0xffff50e9 ; push rbx ; ret
0x00000000004737bf : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004788ea : add eax, 0xfffffff8 ; ret
0x000000000043e195 : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466671 : add eax, 1 ; ret
0x00000000004449e5 : add eax, 2 ; push rax ; call rbx
0x0000000000466668 : add eax, 2 ; ret
0x0000000000421528 : add eax, 3 ; ret
0x0000000000426de7 : add eax, 4 ; ret
0x000000000044f549 : add eax, dword ptr [0] ; ret
0x0000000000470c88 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000418d63 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041782b : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004711de : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x000000000044dc08 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046fbc3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042331d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423341 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000445636 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043ff7c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000044175d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004417b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000441834 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000441934 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000421529 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000476883 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; je 0x4768f4 ; pop rbx ; ret
0x000000000043e1f3 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x72e9
0x000000000047e40c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3c8b48d8], cl ; ret 0x87f6
0x0000000000442815 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000418332 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000470878 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000400981 : add eax, dword ptr [rax] ; mov eax, 0 ; leave ; ret
0x0000000000445321 : add eax, dword ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x000000000044527b : add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x0000000000444c2a : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043e410 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e430 : add eax, dword ptr [rax] ; ret
0x00000000004c6423 : add eax, dword ptr [rbx + 0xaf10204] ; ret
0x00000000004c0152 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000047ea31 : add eax, dword ptr [rbx] ; call rax
0x00000000004c71d1 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004112a4 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047ccbd : add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x00000000004c812b : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0x1890304], al ; ret
0x00000000004bfb7a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000046aeba : add eax, dword ptr [rcx + rdx] ; ret
0x0000000000471a95 : add eax, dword ptr [rdi] ; call rax
0x0000000000478694 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475de9 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004c7231 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004c7291 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004bf8ca : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000004c4a42 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004c005a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000004c29c2 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000004715fb : add eax, dword ptr [rsp] ; call rax
0x000000000043e4d8 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000499f26 : add eax, eax ; jmp rax
0x000000000045a3d8 : add eax, eax ; ret
0x0000000000441fd9 : add eax, eax ; std ; dec dword ptr [rcx - 0x75] ; jge 0x441fe9 ; call rbx
0x0000000000425d06 : add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000405536 : add eax, ebp ; jrcxz 0x405544 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000049b6d6 : add eax, ecx ; jmp rax
0x0000000000416573 : add eax, ecx ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000425e0a : add eax, ecx ; ret
0x0000000000425e07 : add eax, edi ; add rax, rcx ; ret
0x000000000049a14c : add eax, edi ; jmp rax
0x0000000000426044 : add eax, edi ; ret
0x0000000000423a16 : add eax, edx ; sub rax, rdi ; ret
0x000000000049ba9e : add eax, esi ; jmp rax
0x00000000004671e7 : add eax, esi ; ret
0x000000000049b19d : add eax, esp ; jmp rax
0x000000000045a3d7 : add eax, r8d ; ret
0x0000000000457918 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047b6fd : add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004008f8 : add ebp, dword ptr [rsp + rbp - 0x3ca2ff00] ; nop ; ret
0x00000000004c97e2 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000047bcad : add ebp, eax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004c97e4 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000004715f7 : add ebx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x00000000004885da : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004c7222 : add ebx, dword ptr [rbx + 3] ; ret
0x0000000000471293 : add ebx, dword ptr [rbx - 0xd] ; ret
0x00000000004c0168 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x0000000000478981 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004853fa : add ebx, ebp ; ret 0x8d48
0x00000000004356e3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004267a4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x426799 ; ret
0x00000000004396a5 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000418199 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000044999f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000004642a7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000046daf9 : add ecx, dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x00000000004396a9 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047dc78 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000041d43e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418c88 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000004471c5 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000040df7d : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040e057 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000049eff6 : add ecx, dword ptr [rax - 0x7f] ; call qword ptr [rax]
0x0000000000411a27 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x0000000000489f53 : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000435452 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004c71c2 : add ecx, dword ptr [rbx + 3] ; ret
0x000000000043b324 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000047e2cf : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004396a6 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000046db2b : add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x00000000004c23b2 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000004c58a0 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000046b6fd : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x0000000000451fac : add ecx, ebp ; ret
0x000000000042fbae : add ecx, ebx ; jmp r9
0x000000000042e552 : add ecx, ebx ; jmp rcx
0x00000000004a418d : add ecx, edi ; call qword ptr [rax]
0x000000000049d1ae : add edi, dword ptr [rax + 4] ; jne 0x49d1d9 ; ret
0x000000000049f25f : add edi, dword ptr [rbp + 0x10] ; call r12
0x000000000042fbab : add edi, edx ; add r9, r11 ; jmp r9
0x00000000004bed89 : add edi, esi ; call rdi
0x00000000004be859 : add edi, esi ; inc eax ; add edi, esi ; jmp qword ptr [rax]
0x00000000004be83d : add edi, esi ; jmp qword ptr [rax]
0x00000000004be841 : add edi, esi ; jmp qword ptr [rbx]
0x00000000004c85b1 : add edi, esp ; call qword ptr [rax]
0x00000000004c85c9 : add edi, esp ; call qword ptr [rdx]
0x00000000004725dc : add edx, dword ptr [rax] ; mov rax, rdx ; call rax
0x00000000004762a5 : add edx, eax ; jmp 0x4762ba
0x0000000000479512 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000452973 : add edx, ebp ; call qword ptr [r10 + rax*8]
0x0000000000444230 : add edx, ebx ; loopne 0x444294 ; pop rbp ; ret
0x00000000004bfa3a : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x00000000004c2aba : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000044d3f7 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x00000000004c982b : add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000435603 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000043f2cc : add esi, ebx ; ret
0x000000000043e4c0 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042fba8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004631d8 : add esi, esi ; ret 0x7420
0x0000000000487b37 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000040fd11 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e619 : add esp, 0x10 ; pop rbx ; ret
0x0000000000420477 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e601 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000473502 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x00000000004734e4 : add esp, 0x140 ; pop rbx ; ret
0x0000000000476a6d : add esp, 0x18 ; jmp r11
0x000000000043fdcd : add esp, 0x18 ; mov eax, edx ; ret
0x0000000000416cf1 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410b97 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f2a0 : add esp, 0x18 ; ret
0x0000000000444210 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x00000000004521f3 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487f0c : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445751 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414fff : add esp, 0x20 ; pop rbx ; ret
0x000000000047af99 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040dad8 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041485e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487e61 : add esp, 0x28 ; ret
0x0000000000476ddc : add esp, 0x30 ; jmp r11
0x000000000046ad02 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478579 : add esp, 0x30 ; pop rbx ; ret
0x0000000000476eee : add esp, 0x30 ; ret
0x000000000043ec60 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478606 : add esp, 0x38 ; ret
0x000000000047848c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000046ac72 : add esp, 0x48 ; movzx eax, al ; ret
0x0000000000478698 : add esp, 0x48 ; ret
0x000000000047841a : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000487fb4 : add esp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046682c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f550 : add esp, 0x60 ; pop rbx ; ret
0x000000000040046a : add esp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478782 : add esp, 0x68 ; ret
0x000000000044262d : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000040f871 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000046a98b : add esp, 0x80 ; pop rbx ; ret
0x0000000000414417 : add esp, 0x80 ; ret
0x000000000041ff36 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000046aa89 : add esp, 0x90 ; pop rbx ; ret
0x000000000046aaa7 : add esp, 0x90 ; xor eax, eax ; pop rbx ; ret
0x0000000000412f5d : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004010cf : add esp, 0x98 ; ret
0x000000000044f8a9 : add esp, 0xd0 ; ret
0x000000000040f357 : add esp, 0xd8 ; ret
0x0000000000478355 : add esp, 8 ; jmp rax
0x0000000000410f43 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041ee38 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fd2a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417898 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eb00 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f413 : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487e97 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dd9e : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000405921 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004017a3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ba8 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x000000000040027e : add esp, 8 ; ret
0x0000000000423869 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000473dd1 : add esp, 8 ; xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004c6df2 : add esp, dword ptr [rdx + 0x380e0a01] ; ret
0x00000000004c8071 : add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x0000000000446c8d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x000000000042374a : add qword ptr [rax], rax ; ret
0x000000000041bd44 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c805a : add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000042668c : add r11b, sil ; ret
0x00000000004356e2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435672 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435602 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f75d : add r15b, al ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x0000000000495c00 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046d4bf : add r8b, bpl ; cmp al, byte ptr [rdx - 7] ; inc dword ptr [rcx - 0x47] ; ret
0x0000000000474ea6 : add r8b, bpl ; ret
0x000000000042fbad : add r9, r11 ; jmp r9
0x0000000000449ce3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000449d00 : add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000004973b2 : add rax, -0x7cb80000 ; ret 0xe910
0x00000000004788e9 : add rax, -8 ; ret
0x000000000043e194 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000466670 : add rax, 1 ; ret
0x0000000000466667 : add rax, 2 ; ret
0x0000000000466680 : add rax, 3 ; ret
0x000000000044f548 : add rax, qword ptr [0] ; ret
0x00000000004715fa : add rax, qword ptr [r12] ; call rax
0x0000000000471a94 : add rax, qword ptr [r15] ; call rax
0x000000000047ea30 : add rax, qword ptr [rbx] ; call rax
0x0000000000478693 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000475de8 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000044f547 : add rax, qword ptr fs:[0] ; ret
0x000000000049b19c : add rax, r12 ; jmp rax
0x000000000049ba9d : add rax, r14 ; jmp rax
0x000000000049a14b : add rax, r15 ; jmp rax
0x0000000000499f25 : add rax, r8 ; jmp rax
0x000000000049b6d5 : add rax, r9 ; jmp rax
0x0000000000425e09 : add rax, rcx ; ret
0x0000000000425e06 : add rax, rdi ; add rax, rcx ; ret
0x0000000000426043 : add rax, rdi ; ret
0x0000000000423a15 : add rax, rdx ; sub rax, rdi ; ret
0x000000000047bcac : add rbp, rax ; mov qword ptr [rsp + 0x78], rbp ; call r12
0x00000000004715f6 : add rbx, 0x18 ; add rax, qword ptr [r12] ; call rax
0x000000000042e551 : add rcx, r11 ; jmp rcx
0x000000000049f25e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000042fbaa : add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004725db : add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x0000000000452972 : add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000479511 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004762a4 : add rdx, rax ; jmp 0x4762bb
0x0000000000487b36 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040fd10 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e618 : add rsp, 0x10 ; pop rbx ; ret
0x000000000043e600 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000004734e3 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000476a6c : add rsp, 0x18 ; jmp r11
0x000000000043fdcc : add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000410b96 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f29f : add rsp, 0x18 ; ret
0x000000000044420f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x00000000004521f2 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x0000000000487f0b : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000445750 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414ffe : add rsp, 0x20 ; pop rbx ; ret
0x000000000047af98 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000041485d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000487e60 : add rsp, 0x28 ; ret
0x0000000000476ddb : add rsp, 0x30 ; jmp r11
0x000000000046ad01 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000478578 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000476eed : add rsp, 0x30 ; ret
0x000000000043ec5f : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000478605 : add rsp, 0x38 ; ret
0x000000000047848b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000046ac71 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000478697 : add rsp, 0x48 ; ret
0x0000000000478419 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000487fb3 : add rsp, 0x50 ; mov rax, rbx ; pop rbx ; ret
0x000000000046682b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f54f : add rsp, 0x60 ; pop rbx ; ret
0x0000000000400469 : add rsp, 0x608 ; pop rbx ; pop rbp ; ret
0x0000000000478781 : add rsp, 0x68 ; ret
0x000000000044262c : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000046a98a : add rsp, 0x80 ; pop rbx ; ret
0x0000000000414416 : add rsp, 0x80 ; ret
0x000000000046aa88 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000412f5c : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004010ce : add rsp, 0x98 ; ret
0x000000000044f8a8 : add rsp, 0xd0 ; ret
0x000000000040f356 : add rsp, 0xd8 ; ret
0x0000000000478354 : add rsp, 8 ; jmp rax
0x0000000000410f42 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000041ee37 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043fd29 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000417897 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000040eaff : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000041f412 : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000487e96 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000041dd9d : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000004017a2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412ba7 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x000000000040027d : add rsp, 8 ; ret
0x0000000000423868 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000042c27e : add sil, sil ; ret 0x7404
0x000000000048839a : add word ptr [rdx + rax*2], 1 ; ret
0x00000000004a3b64 : and ah, ah ; clc ; jmp qword ptr [rax]
0x00000000004c1580 : and ah, cl ; cmc ; call rdx
0x0000000000488398 : and al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000004885a4 : and al, 0 ; ret
0x000000000043f57d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x000000000049c388 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000447033 : and al, 0x10 ; call r12
0x000000000049df41 : and al, 0x10 ; call r14
0x000000000041b5bd : and al, 0x10 ; call rax
0x0000000000464e89 : and al, 0x10 ; call rbx
0x0000000000400b75 : and al, 0x10 ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000440511 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447327 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447c8a : and al, 0x10 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000487e5b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x00000000004504a6 : and al, 0x10 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000049dd28 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004654d5 : and al, 0x14 ; add al, ch ; ret
0x0000000000418bf6 : and al, 0x14 ; pop r12 ; ret
0x000000000041dd9b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000044b87c : and al, 0x18 ; call r14
0x0000000000400bd2 : and al, 0x18 ; call rax
0x0000000000464e84 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x000000000041b5b8 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x0000000000444958 : and al, 0x18 ; mov r9, r14 ; call rbx
0x0000000000448070 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000047b060 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000044702e : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000464f62 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000418bc2 : and al, 0x1c ; je 0x418bd3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000418bc1 : and al, 0x1c ; je 0x418bd4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044732c : and al, 0x20 ; call rax
0x00000000004669e7 : and al, 0x20 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000450ac3 : and al, 0x20 ; mov rdi, r12 ; call r15
0x0000000000469e70 : and al, 0x26 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b9ac4 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000478600 : and al, 0x28 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x38 ; ret
0x0000000000489a4b : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004477a7 : and al, 0x28 ; call r12
0x00000000004484d2 : and al, 0x28 ; call r14
0x0000000000446e34 : and al, 0x28 ; call r15
0x0000000000447c8f : and al, 0x28 ; call rax
0x000000000044785b : and al, 0x28 ; call rbx
0x0000000000466d02 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466a8f : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000041eab3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x000000000048fadf : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000044b0bc : and al, 0x30 ; call r14
0x00000000004734af : and al, 0x30 ; call r9
0x00000000004496da : and al, 0x30 ; call rbx
0x0000000000487f7f : and al, 0x30 ; je 0x487f93 ; mov edi, 0x6caae0 ; call rax
0x000000000040e019 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000004668cd : and al, 0x30 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000449b1a : and al, 0x30 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000446ed1 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447856 : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x00000000004820ef : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000048cc82 : and al, 0x38 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x00000000004787ae : and al, 0x38 ; add rsp, 0x68 ; ret
0x00000000004734aa : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x00000000004496d5 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000478489 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478417 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000448a5a : and al, 0x40 ; call r15
0x00000000004669ec : and al, 0x40 ; call rbx
0x0000000000448e01 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000476a6b : and al, 0x48 ; add esp, 0x18 ; jmp r11
0x000000000043fdcb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x000000000043f29e : and al, 0x48 ; add esp, 0x18 ; ret
0x0000000000476dda : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x0000000000476eec : and al, 0x48 ; add esp, 0x30 ; ret
0x000000000041e0c3 : and al, 0x48 ; call rax
0x000000000046f914 : and al, 0x48 ; lea edi, dword ptr [rax + 0x6cab80] ; call rdx
0x000000000049ce2e : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x00000000004477a2 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446e2f : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000448a55 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x00000000004670f2 : and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000040f9c7 : and al, 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000049cddf : and al, 0x4c ; lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000044b877 : and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041c8dd : and al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000418bf1 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000466c00 : and al, 0x60 ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e3cb : and al, 0x68 ; call rax
0x000000000041f6ab : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004115ce : and al, 0x74 ; ret 0x8b4c
0x0000000000472b4a : and al, 0x75 ; ret
0x000000000047b81e : and al, 0x78 ; call r12
0x000000000047bced : and al, 0x78 ; lea rdi, qword ptr [rsp + 0x78] ; call r12
0x00000000004484cd : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b0b7 : and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000048b63f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047c4c4 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x0000000000446fb1 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000041bdc6 : and al, 0x89 ; ret 0xb48b
0x000000000041bd42 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000004c8624 : and al, 0x9d ; add byte ptr [rax], al ; js 0x4c8634 ; cld ; call qword ptr [rdx]
0x000000000043f4d5 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000049bf6b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000047862f : and al, 0xc ; add rsp, 0x38 ; ret
0x0000000000400b79 : and al, 0xc ; call r12
0x0000000000400bcd : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000047ba9a : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004087cb : and al, 0xe8 ; call rbx
0x0000000000409924 : and al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x000000000040993a : and al, 0xe8 ; nop ; ret 0xffff
0x00000000004098db : and al, 0xe8 ; out dx, eax ; ret 0xffff
0x000000000040995c : and al, 0xe8 ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000000000409972 : and al, 0xe8 ; pop rax ; ret 0xffff
0x000000000040987c : and al, 0xe8 ; ret
0x0000000000409983 : and al, 0xe8 ; ret 0xffff
0x0000000000409833 : and al, 0xe8 ; xchg eax, edi ; ret
0x00000000004918c8 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000041c267 : and al, 0xf ; xchg eax, ebp ; ret 0x8348
0x000000000042c386 : and al, 0xf8 ; jne 0x42c262 ; ret
0x0000000000491881 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000491887 : and al, 0xf8 ; ret
0x000000000049183b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000491841 : and al, 0xfc ; ret
0x000000000044f617 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044f61b : and al, 0xfe ; ret
0x0000000000441daa : and al, 0xff ; ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41dfe8
0x0000000000469fa6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000044fa2c : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000043e616 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000047ab12 : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000440428 : and al, 8 ; call rbx
0x0000000000487ed9 : and al, 8 ; je 0x487eed ; mov edi, 0x6caae0 ; call rax
0x000000000043f5e1 : and al, 8 ; jmp 0x43f558
0x000000000049da2c : and al, 8 ; jmp 0x49da46
0x00000000004781c0 : and al, 8 ; mov edi, 0x6caae0 ; call rax
0x000000000041b674 : and al, 8 ; mov qword ptr [rsp], rcx ; call rdx
0x000000000040e1d6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x00000000004c0ba5 : and al, byte ptr [rax] ; add byte ptr [rax + 0x62], bh ; cmc ; call qword ptr [rsi]
0x00000000004a0e88 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410c36 : and al, byte ptr [rax] ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000049e5e4 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000049f1f3 : and al, byte ptr [rax] ; jne 0x49f1dd ; pop rbx ; ret
0x000000000049e5d6 : and al, byte ptr [rax] ; test eax, eax ; je 0x49e5e7 ; ret
0x000000000049e6e6 : and al, byte ptr [rax] ; test eax, eax ; je 0x49e6f7 ; ret
0x000000000042381a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000466ce7 : and al, ch ; ret
0x00000000004a3bcc : and bh, 0xf8 ; call qword ptr [rax]
0x000000000045d33e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000049bbbd : and bh, dh ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004bcb80 : and bl, al ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; ret
0x0000000000474703 : and bl, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000040db7f : and bl, dh ; ret
0x000000000046741e : and byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000414c24 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000419ec9 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x00000000004527ce : and byte ptr [rax + 1], cl ; ret
0x00000000004669e8 : and byte ptr [rax - 0x73], cl ; je 0x466a17 ; call rbx
0x0000000000476e06 : and byte ptr [rax - 0x75], cl ; jg 0x476e3a ; call r11
0x00000000004773f6 : and byte ptr [rax - 0x75], cl ; jg 0x47742a ; call r11
0x0000000000477792 : and byte ptr [rax - 0x75], cl ; jg 0x4777c6 ; call r11
0x000000000041bad3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000040ec83 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000469934 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x0000000000445d84 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000044ef24 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x44ef38 ; call rax
0x0000000000445c1e : and byte ptr [rax - 0x7d], cl ; ret
0x000000000049c466 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000412422 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000004be1f0 : and byte ptr [rax - 3], ch ; inc dword ptr [rax] ; push 0xfd ; jmp rax
0x000000000049c439 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043e4a3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004c3040 : and byte ptr [rax], bl ; clc ; call qword ptr [rax]
0x00000000004a40d8 : and byte ptr [rax], dl ; stc ; call qword ptr [rax + 0x10fff90f]
0x0000000000466be2 : and byte ptr [rbp - 0x73], cl ; jl 0x466b75 ; add al, 0xe8 ; ret
0x00000000004c812e : and byte ptr [rbx + 0x1890304], al ; ret
0x0000000000405b28 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046741f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000445753 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bfb7d : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000004c0155 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x000000000046049e : and byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x0000000000455500 : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x0000000000462e29 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004a41d8 : and byte ptr [rbx], ah ; stc ; jmp qword ptr [rax]
0x00000000004a41e8 : and byte ptr [rbx], ch ; stc ; jmp qword ptr [rax]
0x00000000004a41f8 : and byte ptr [rbx], dh ; stc ; jmp qword ptr [rax]
0x0000000000414c25 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000004c4976 : and byte ptr [rcx + 0xa], al ; ret
0x0000000000450ac4 : and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000004521f5 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000004918c5 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000445d0c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x00000000004a41d4 : and byte ptr [rcx], ah ; stc ; jmp qword ptr [rax]
0x00000000004a4204 : and byte ptr [rcx], bh ; stc ; jmp qword ptr [rax]
0x00000000004a41e4 : and byte ptr [rcx], ch ; stc ; jmp qword ptr [rax]
0x00000000004a41f4 : and byte ptr [rcx], dh ; stc ; jmp qword ptr [rax]
0x00000000004be210 : and byte ptr [rdi - 3], dh ; inc dword ptr [rax] ; jns 0x4be21b ; jmp rax
0x00000000004a41e0 : and byte ptr [rdi], ah ; stc ; jmp qword ptr [rax]
0x00000000004a41d0 : and byte ptr [rdi], bl ; stc ; jmp qword ptr [rax]
0x00000000004a41f0 : and byte ptr [rdi], ch ; stc ; jmp qword ptr [rax]
0x0000000000445cf9 : and byte ptr [rdi], cl ; test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043bcf0 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004a4200 : and byte ptr [rdi], dh ; stc ; jmp qword ptr [rax]
0x00000000004a39dc : and byte ptr [rdx - 0x48ae0008], bh ; clc ; jmp qword ptr [rax]
0x0000000000412724 : and byte ptr [rdx], 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000412478 : and byte ptr [rdx], 0x4a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004a41dc : and byte ptr [rip + 0x2720fff9], ah ; stc ; jmp qword ptr [rax]
0x00000000004a41ec : and byte ptr [rip + 0x2f20fff9], ch ; stc ; jmp qword ptr [rax]
0x00000000004a41fc : and byte ptr [rip + 0x3720fff9], dh ; stc ; jmp qword ptr [rax]
0x000000000042e5ea : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c4a45 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000044572d : and byte ptr [rsp + rax*2], ah ; mov edi, 0x6cc070 ; call rax
0x0000000000466662 : and ch, 0xf ; je 0x466689 ; add rax, 2 ; ret
0x00000000004c8c10 : and ch, ch ; cld ; call qword ptr [rax]
0x000000000046664d : and cl, 0xf ; je 0x466675 ; ret
0x000000000041c5be : and cl, bpl ; ret 0xfff9
0x000000000047e973 : and cl, byte ptr [rax + 0x29] ; fmul dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004261cd : and cl, byte ptr [rcx - 0x77] ; ret
0x00000000004a3fc8 : and cl, byte ptr [rdx] ; stc ; call qword ptr [rdx + 0x22fff909]
0x000000000041c5bf : and cl, ch ; ret 0xfff9
0x00000000004c6d40 : and cl, dl ; cli ; jmp rsi
0x00000000004a3b68 : and dh, ah ; clc ; jmp qword ptr [rax]
0x00000000004a3b98 : and dh, bl ; clc ; inc dword ptr [rax] ; loopne 0x4a3b9e ; jmp rax
0x00000000004267b7 : and dh, dh ; ret 0x7504
0x000000000045d33d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000457779 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004bb5e2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000415b8c : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040fbd9 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x000000000048ec8c : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000411c7a : and dword ptr [rdx], ecx ; pop rbx ; ret
0x00000000004b8699 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004bb5e1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000044f54b : and eax, 0 ; ret
0x00000000004a41dd : and eax, 0x2720fff9 ; stc ; jmp qword ptr [rax]
0x000000000047c8b6 : and eax, 0x2d0 ; ret
0x000000000040e991 : and eax, 0x30 ; call rax
0x000000000040e949 : and eax, 0x30 ; call rdx
0x00000000004767b3 : and eax, 0x38754000 ; ret
0x000000000043e40d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e42d : and eax, 0x3fc00 ; ret
0x000000000043e3ec : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000471130 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000043f45b : and eax, 0x4e ; add byte ptr [rax], al ; ret
0x0000000000473fbf : and eax, 0x6894800 ; ret
0x000000000043e460 : and eax, 0x7ff80000 ; ret
0x00000000004748a3 : and eax, 0x89485300 ; ret
0x000000000041aec6 : and eax, 0x950f4100 ; ret
0x0000000000442897 : and eax, 0xc ; cmp eax, 4 ; je 0x4428a8 ; ret
0x0000000000400c8f : and eax, 0xf ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000444346 : and eax, 0xffffffd0 ; or rax, 0xffffffffffffffff ; ret
0x000000000047897c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004be850 : and eax, dword ptr [rsi + rdi*8] ; call rax
0x00000000004be844 : and eax, dword ptr [rsi + rdi*8] ; jmp qword ptr [rbx]
0x0000000000415b8d : and ebp, edi ; pop rbx ; ret
0x0000000000442832 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x442845 ; ret
0x000000000042fb65 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042f298 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000419f4b : and ecx, dword ptr [rax + 0x39] ; ret
0x000000000041fd6c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041de02 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, esi ; ret
0x000000000041693c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x00000000004a41d5 : and ecx, edi ; jmp qword ptr [rax]
0x00000000004a41d9 : and edi, ecx ; jmp qword ptr [rax]
0x000000000049189e : and esi, 0xe0837fff ; jg 0x4918b7 ; ret 0x5488
0x000000000042cc5a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000426040 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000426050 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426060 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000426030 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x0000000000425f7f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce53 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000004238b6 : bsf eax, edx ; ret
0x0000000000423a12 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x000000000042cf70 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000423902 : bsf rax, rdx ; ret
0x0000000000465837 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000465abb : bsr eax, esi ; add rax, rdi ; ret
0x00000000004659c9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004658c5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000465836 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000465aba : bsr rax, rsi ; add rax, rdi ; ret
0x00000000004659c8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004658c4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047bba7 : call 0x1009f3ce
0x000000000047c50a : call 0x1009fd31
0x000000000044b1a8 : call 0x20734f8
0x000000000042c594 : call 0x24b750ed
0x000000000046d4c1 : call 0x401707
0x0000000000465482 : call 0x401742
0x00000000004098dc : call 0x405bd2
0x000000000044b24e : call 0x40753e
0x000000000041ae08 : call 0x417052
0x000000000041be11 : call 0x418062
0x000000000041de2b : call 0x418069
0x00000000004208d6 : call 0x418af8
0x00000000004204b1 : call 0x41c742
0x0000000000461a20 : call 0x41dc42
0x0000000000441d01 : call 0x41dfe2
0x00000000004085b4 : call 0x41dfe6
0x000000000045c888 : call 0x4267f7
0x000000000040ffdf : call 0x42c252
0x00000000004006c1 : call 0x43e376
0x0000000000473b60 : call 0x43fde2
0x0000000000456572 : call 0x442782
0x00000000004585f6 : call 0x4636d6
0x000000000048cd3c : call 0x479002
0x0000000000434c6a : call 0x4fc25c68
0x0000000000434c69 : call 0x4fc25c69
0x000000000047b70b : call 0xffffffff8a09e032
0x000000000047b872 : call 0xffffffff8a09e199
0x000000000047ba5f : call 0xffffffff8a09e386
0x000000000047c08b : call 0xffffffff8a09e9b2
0x000000000047c1e8 : call 0xffffffff8a09eb0f
0x000000000047c3b6 : call 0xffffffff8a09ecdd
0x00000000004b9103 : call 0xffffffffaf0e2f79
0x000000000047b38a : call 0xffffffffc270fbd2
0x000000000041bee8 : call 0xffffffffc27b06f9
0x000000000045973c : call 0xffffffffc27edf46
0x000000000041c7a8 : call 0xffffffffc2cb0fc1
0x000000000046919d : call 0xffffffffc37fdaaa
0x0000000000485d5a : call 0xffffffffc381a964
0x0000000000466acc : call 0xffffffffc3a2ac32
0x000000000044fa25 : call 0xffffffffc3f40976
0x0000000000467acc : call 0xffffffffc40dc305
0x0000000000426d57 : call 0xffffffffc412f6a8
0x0000000000423827 : call 0xffffffffc43ac178
0x000000000048cd38 : call 0xffffffffe84918c6
0x0000000000452975 : call qword ptr [r10 + rax*8]
0x00000000004a40fb : call qword ptr [rax + 0x10fff90b]
0x00000000004a40f3 : call qword ptr [rax + 0x10fff90c]
0x00000000004a40eb : call qword ptr [rax + 0x10fff90d]
0x00000000004a40e3 : call qword ptr [rax + 0x10fff90e]
0x00000000004a40db : call qword ptr [rax + 0x10fff90f]
0x00000000004a4113 : call qword ptr [rax + 0x10fff910]
0x0000000000477b6e : call qword ptr [rax + 0x1ba]
0x00000000004a3ee7 : call qword ptr [rax + 0x20fff917]
0x00000000004a3c0f : call qword ptr [rax + 0x50fff8d9]
0x0000000000410477 : call qword ptr [rax + 0x80]
0x00000000004a3cc3 : call qword ptr [rax - 0x1f00072c]
0x00000000004a3c6f : call qword ptr [rax - 0x1f000733]
0x00000000004a38ab : call qword ptr [rax - 0x1f000782]
0x00000000004a37bb : call qword ptr [rax - 0x2f000814]
0x00000000004a37ab : call qword ptr [rax - 0x2f000819]
0x00000000004a379b : call qword ptr [rax - 0x2f00081e]
0x0000000000402efb : call qword ptr [rax]
0x0000000000400a98 : call qword ptr [rbx + 0x10]
0x00000000004be34f : call qword ptr [rbx + rax*8]
0x0000000000401528 : call qword ptr [rbx*8 + 0x6c9890]
0x000000000047e318 : call qword ptr [rbx]
0x00000000004a3a1f : call qword ptr [rcx + 0x11fff8ba]
0x00000000004a3a27 : call qword ptr [rcx + 0x11fff8bb]
0x00000000004a3a2f : call qword ptr [rcx + 0x11fff8bc]
0x00000000004a3a1b : call qword ptr [rcx - 0x6e000747]
0x000000000049b35d : call qword ptr [rcx]
0x00000000004be7fb : call qword ptr [rdi - 3]
0x00000000004c2c63 : call qword ptr [rdi]
0x00000000004a3fcb : call qword ptr [rdx + 0x22fff909]
0x00000000004a3dbb : call qword ptr [rdx + 0x22fff915]
0x0000000000452976 : call qword ptr [rdx + rax*8]
0x00000000004a3d9b : call qword ptr [rdx]
0x00000000004a3d17 : call qword ptr [rsi + 0x26fff919]
0x0000000000492842 : call qword ptr [rsi]
0x0000000000476e0c : call r11
0x0000000000400b7b : call r12
0x000000000040dfa0 : call r14
0x0000000000403501 : call r15
0x00000000004627db : call r8
0x00000000004734b1 : call r9
0x00000000004a3c93 : call rax
0x0000000000402bad : call rbx
0x00000000004054ca : call rcx
0x0000000000403502 : call rdi
0x000000000040e94e : call rdx
0x000000000040dfa1 : call rsi
0x0000000000400b7c : call rsp
0x000000000044f0e4 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000049b6d4 : cdq ; add rax, r9 ; jmp rax
0x000000000047112f : cdq ; and eax, 0x48c03100 ; add esp, 8 ; ret
0x00000000004bae40 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004c7531 : cdq ; std ; call rcx
0x0000000000485bfe : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000041bdc3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x0000000000458e6a : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045dc3d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000040d53c : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000043e0bc : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000047ccbc : clc ; add eax, dword ptr [rcx + 0x5d] ; pop r14 ; pop r15 ; ret
0x000000000046db2a : clc ; add ecx, dword ptr [rcx - 0x7bf0cf8d] ; ret 2
0x0000000000425e08 : clc ; add rax, rcx ; ret
0x00000000004a3c0e : clc ; call qword ptr [rax + 0x50fff8d9]
0x00000000004a3cc2 : clc ; call qword ptr [rax - 0x1f00072c]
0x00000000004a3c6e : clc ; call qword ptr [rax - 0x1f000733]
0x00000000004a38aa : clc ; call qword ptr [rax - 0x1f000782]
0x00000000004a3852 : clc ; call qword ptr [rax]
0x00000000004c45c2 : clc ; call qword ptr [rbx]
0x00000000004a3a1e : clc ; call qword ptr [rcx + 0x11fff8ba]
0x00000000004a3a26 : clc ; call qword ptr [rcx + 0x11fff8bb]
0x00000000004a3a2e : clc ; call qword ptr [rcx + 0x11fff8bc]
0x00000000004a3a1a : clc ; call qword ptr [rcx - 0x6e000747]
0x00000000004a3a22 : clc ; call qword ptr [rcx]
0x00000000004c41e2 : clc ; call qword ptr [rdi]
0x00000000004c3ed2 : clc ; call qword ptr [rdx]
0x00000000004a3a7a : clc ; call qword ptr [rsi]
0x00000000004a3c92 : clc ; call rax
0x00000000004a39f2 : clc ; call rdx
0x00000000004a3a86 : clc ; call rsi
0x000000000042fb09 : clc ; cmp rcx, rax ; jne 0x42fb3b ; xor eax, eax ; ret
0x000000000042fb08 : clc ; cmp rcx, rax ; jne 0x42fb3c ; xor eax, eax ; ret
0x0000000000474510 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004212b0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000412556 : clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000040169b : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000454fbb : clc ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004565e2 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047a77d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000004bf3a9 : clc ; hlt ; call qword ptr [rax]
0x00000000004bf3c1 : clc ; hlt ; call qword ptr [rdx]
0x00000000004a3b8e : clc ; inc dword ptr [rax + 0x40fff8da] ; fdiv st(0), st(0) ; jmp qword ptr [rax]
0x00000000004a38a6 : clc ; inc dword ptr [rax + 0x7d] ; clc ; call qword ptr [rax - 0x1f000782]
0x00000000004a3b4a : clc ; inc dword ptr [rax - 0x18] ; clc ; call rax
0x00000000004a3bea : clc ; inc dword ptr [rax - 0x19] ; clc ; call rax
0x00000000004a3b46 : clc ; inc dword ptr [rax - 0x1a] ; clc ; inc dword ptr [rax - 0x18] ; clc ; call rax
0x00000000004a3be6 : clc ; inc dword ptr [rax - 0x1b] ; clc ; inc dword ptr [rax - 0x19] ; clc ; call rax
0x00000000004a3b92 : clc ; inc dword ptr [rax - 0x24] ; clc ; jmp qword ptr [rax]
0x00000000004a3cbe : clc ; inc dword ptr [rax - 0x2d] ; clc ; call qword ptr [rax - 0x1f00072c]
0x00000000004a3c7a : clc ; inc dword ptr [rax - 0x2f00072f] ; sar al, cl ; jmp qword ptr [rax]
0x00000000004a3c6a : clc ; inc dword ptr [rax - 0x34] ; clc ; call qword ptr [rax - 0x1f000733]
0x00000000004a39fe : clc ; inc dword ptr [rax - 0x49] ; clc ; push rax ; mov bh, 0xf8 ; jmp rax
0x00000000004a3bc6 : clc ; inc dword ptr [rax - 0x7f00071b] ; out -8, eax ; call qword ptr [rax]
0x00000000004a38de : clc ; inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a3b9a : clc ; inc dword ptr [rax] ; loopne 0x4a3b9c ; jmp rax
0x00000000004a39ea : clc ; inc dword ptr [rax] ; mov edx, 0xb726fff8 ; clc ; call rdx
0x00000000004a3c8e : clc ; inc dword ptr [rax] ; ret 0xfff8
0x000000000044e389 : clc ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004a3af2 : clc ; inc eax ; mov esp, 0xbd50fff8 ; clc ; jmp rax
0x00000000004a3c8a : clc ; inc eax ; salc ; clc ; inc dword ptr [rax] ; ret 0xfff8
0x0000000000449b6e : clc ; jg 0x449afd ; ret 0x5c77
0x00000000004a39aa : clc ; jmp qword ptr [rax - 0x3f000761]
0x00000000004a38be : clc ; jmp qword ptr [rax]
0x00000000004a3a7e : clc ; jmp qword ptr [rsi + 0x36fff8be]
0x000000000047e268 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004a39ee : clc ; jmp qword ptr [rsi]
0x00000000004a39b2 : clc ; jmp rax
0x00000000004c3f62 : clc ; jmp rbx
0x00000000004c34b2 : clc ; jmp rsp
0x000000000042c387 : clc ; jne 0x42c261 ; ret
0x00000000004a3aca : clc ; lcall ptr [rbx - 0x40] ; clc ; jmp rax
0x000000000049c663 : clc ; leave ; ret
0x00000000004b9aa2 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004315e7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431f57 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349f7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432157 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434967 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000432357 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348d7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431603 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043584c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000049c7e1 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000491882 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000004a386e : clc ; push qword ptr [rax + 0x67] ; clc ; call qword ptr [rax]
0x00000000004a3c4a : clc ; push qword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a3c46 : clc ; push qword ptr [rax - 0x1c] ; clc ; push qword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a3866 : clc ; push qword ptr [rax] ; clc ; call rax
0x00000000004a38b2 : clc ; push qword ptr [rax] ; cmp eax, 0xf88280ff ; call rax
0x00000000004a3b5e : clc ; push qword ptr [rax] ; loop 0x4a3b60 ; jmp qword ptr [rax]
0x00000000004a3b7a : clc ; push qword ptr [rax] ; loopne 0x4a3b7c ; call qword ptr [rax]
0x00000000004a39d2 : clc ; push qword ptr [rax] ; mov edx, 0xb91efff8 ; clc ; jmp qword ptr [rax]
0x0000000000410c3a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000415be0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004429b1 : clc ; push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415b88 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000415065 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000046aa6c : clc ; push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x00000000004a38da : clc ; push rax ; cmp eax, 0x4000fff8 ; clc ; call qword ptr [rax]
0x00000000004a3a02 : clc ; push rax ; mov bh, 0xf8 ; jmp rax
0x00000000004a3a72 : clc ; push rsi ; mov esp, 0xbd86fff8 ; clc ; call qword ptr [rsi]
0x0000000000416832 : clc ; ret
0x0000000000478eda : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047814d : clc ; std ; jbe 0x47815c ; ret
0x000000000046e2b8 : cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000043e40f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000043e42f : cld ; add eax, dword ptr [rax] ; ret
0x00000000004c85b2 : cld ; call qword ptr [rax]
0x00000000004c85ca : cld ; call qword ptr [rdx]
0x00000000004a41bd : cld ; clc ; call rax
0x0000000000480b6f : cld ; cmove rsi, r9 ; jmp 0x480b3e
0x000000000045c88b : cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x000000000047128e : cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x000000000043e4be : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3ee : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000431d72 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f75 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432175 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432375 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043585e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004328a8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004319a6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b86 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b86 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b06 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431d66 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a86 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004317c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c06 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000049183c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004267d8 : cld ; ret
0x00000000004bcb70 : cld ; ret 0x4b
0x00000000004b8f56 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c70fc : cld ; xchg dword ptr [rax], eax ; add byte ptr [rax - 0x17], dl ; cli ; jmp qword ptr [rdx]
0x000000000041fd69 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041ff49 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x000000000047c889 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x000000000046737a : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000489543 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000048956c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000410618 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e15c : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x000000000044932f : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000474926 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0x8348
0x0000000000475193 : cli ; add dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xb60f
0x000000000043dc81 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043587c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000047b6fc : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004c664a : cli ; call rax
0x00000000004c6a62 : cli ; call rdx
0x00000000004c67ea : cli ; call rsi
0x00000000004a4179 : cli ; clc ; call rax
0x000000000043286b : cli ; jg 0x43287e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000435837 : cli ; jg 0x43584a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000043dc41 : cli ; jg 0x43dc53 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043ddc6 : cli ; jg 0x43ddd8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004c5b4a : cli ; jmp qword ptr [rax]
0x00000000004c705a : cli ; jmp qword ptr [rdx]
0x00000000004c5d22 : cli ; jmp rdi
0x00000000004c57da : cli ; jmp rdx
0x00000000004c6d42 : cli ; jmp rsi
0x00000000004c63fa : cli ; jmp rsp
0x0000000000432178 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004261e8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004a40d0 : cli ; or cl, bh ; jmp qword ptr [rax + 0x20fff910]
0x000000000047b1e6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000489ef8 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004bb3c1 : cli ; push 0x6e ; ja 0x4bb34e ; ret 0x48f
0x00000000004b9e65 : cli ; ret 0xac65
0x00000000004427bb : cli ; setae al ; ret
0x00000000004c56a1 : cli ; stc ; call rsi
0x0000000000423959 : cli ; test rdx, rdx ; je 0x423979 ; bsf rax, rdx ; ret
0x00000000004656c8 : cli ; test rdx, rdx ; je 0x4656f9 ; bsf rax, rdx ; ret
0x00000000004b8aaa : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004c97e5 : cmc ; add al, byte ptr [rax] ; ret
0x0000000000495e58 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000443b0c : cmc ; add byte ptr [rax], al ; add byte ptr [rbx - 0x76bef020], al ; ret 0xb8
0x000000000041dde0 : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004bfd62 : cmc ; call qword ptr [rax]
0x00000000004c058a : cmc ; call qword ptr [rcx]
0x00000000004c0c92 : cmc ; call qword ptr [rdx]
0x00000000004c0baa : cmc ; call qword ptr [rsi]
0x00000000004c1582 : cmc ; call rdx
0x00000000004c0a5a : cmc ; jmp qword ptr [rax]
0x00000000004c03ba : cmc ; jmp qword ptr [rcx]
0x00000000004bfbc2 : cmc ; jmp qword ptr [rsi]
0x00000000004bb7e9 : cmc ; mov ch, 0xab ; ret
0x0000000000434b0a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319fe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000441fe7 : cmc ; mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x000000000043d1d3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004b8697 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000047aa2d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000441be7 : cmc ; ret
0x000000000043d1d7 : cmc ; sub eax, edx ; ret
0x00000000004bae25 : cmc ; xlatb ; ret 0x4e27
0x00000000004671e1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000417039 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000417038 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f29b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000464df1 : cmove eax, ecx ; ret
0x000000000043f580 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000004212b3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000425d62 : cmove eax, edx ; ret
0x0000000000480b71 : cmove esi, ecx ; jmp 0x480b3c
0x0000000000464df0 : cmove r8, rcx ; ret
0x000000000043f29a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x000000000046b140 : cmove rax, r9 ; ret
0x00000000004212b2 : cmove rax, rdx ; add rsp, 8 ; ret
0x0000000000425d61 : cmove rax, rdx ; ret
0x0000000000480b70 : cmove rsi, r9 ; jmp 0x480b3d
0x0000000000414b7b : cmovg eax, ecx ; test rdx, rdx ; jne 0x414b79 ; ret
0x00000000004639eb : cmovg eax, ecx ; test rdx, rdx ; jne 0x4639e9 ; ret
0x0000000000413613 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000421333 : cmovne eax, edx ; ret
0x0000000000421332 : cmovne rax, rdx ; ret
0x0000000000443ab3 : cmovno eax, dword ptr [rbx - 0x76bef907] ; ret 0x840f
0x00000000004565ad : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000446b7c : cmovs eax, edx ; ret
0x0000000000419d70 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000049ccd8 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000480b6e : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x480b3f
0x00000000004687cc : cmp ah, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000468812 : cmp ah, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x00000000004c255d : cmp al, 0 ; add byte ptr [rax], ah ; ret
0x0000000000440471 : cmp al, 0x24 ; call rbx
0x000000000049ce2d : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000049c2fc : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000049c28d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x000000000040e01d : cmp al, 0x33 ; call rax
0x00000000004b9aa0 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004c303c : cmp al, 0x47 ; add byte ptr [rax], al ; and byte ptr [rax], bl ; clc ; call qword ptr [rax]
0x00000000004c353c : cmp al, 0x4c ; add byte ptr [rax], al ; xor byte ptr [rsi], dh ; clc ; call qword ptr [rax]
0x00000000004c6d3c : cmp al, 0x84 ; add byte ptr [rax], al ; and cl, dl ; cli ; jmp rsi
0x00000000004c21e1 : cmp al, 0xf7 ; call qword ptr [rax]
0x000000000046d4c2 : cmp al, byte ptr [rdx - 7] ; inc dword ptr [rcx - 0x47] ; ret
0x000000000043d696 : cmp al, byte ptr [rsi - 1] ; jne 0x43d6bc ; xor eax, eax ; ret
0x000000000043f768 : cmp al, ch ; ret 0x2b3
0x0000000000426036 : cmp al, dh ; ret
0x0000000000426035 : cmp al, r14b ; ret
0x000000000049a076 : cmp bh, 0x10 ; jne 0x49a09f ; xor eax, eax ; ret
0x000000000049d216 : cmp bh, 0x10 ; jne 0x49d235 ; xor eax, eax ; ret
0x000000000049e076 : cmp bh, 0x10 ; jne 0x49e095 ; xor eax, eax ; ret
0x000000000049eae6 : cmp bh, 0x10 ; jne 0x49eb0f ; xor eax, eax ; ret
0x000000000049d1fc : cmp bh, 0x30 ; jne 0x49d231 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049e05c : cmp bh, 0x30 ; jne 0x49e091 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000426680 : cmp bl, 0x42 ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000004530b3 : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000446aa9 : cmp bl, byte ptr [rdi + 0x4a] ; add byte ptr [rax - 0x7f], cl ; ret 0x5f20
0x00000000004870d9 : cmp bl, ch ; ret 0x8148
0x000000000042ca93 : cmp bl, dh ; ret
0x00000000004102bb : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000040fb97 : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401293 : cmp byte ptr [rax + 0x39], cl ; ret 0x2773
0x0000000000426b9f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000426077 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000440424 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000004102bc : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000004830e7 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000426066 : cmp byte ptr [rax], ah ; ret
0x0000000000415033 : cmp byte ptr [rax], al ; je 0x415044 ; ret
0x000000000049c1ff : cmp byte ptr [rax], al ; je 0x49c228 ; add rsp, 0x18 ; ret
0x0000000000421330 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000426056 : cmp byte ptr [rax], dl ; ret
0x0000000000426055 : cmp byte ptr [rax], r10b ; ret
0x0000000000426065 : cmp byte ptr [rax], r12b ; ret
0x000000000042132f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004c2e6c : cmp byte ptr [rbx + 0x1b70307], al ; ret
0x00000000004c722d : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004c728d : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004c71cd : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000043ec62 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000004734ab : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x00000000004648c7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000049c2fb : cmp byte ptr [rcx + rsi], 8 ; jne 0x49c30e ; mov qword ptr [rax], rdx ; ret
0x0000000000476de6 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000414ff8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042efdd : cmp byte ptr [rdi], dl ; ret
0x000000000042faf0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fad9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fac2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e57e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c28c : cmp byte ptr [rdx + rsi], 8 ; jne 0x49c2b5 ; mov rax, qword ptr [rax] ; ret
0x00000000004c1fb8 : cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rax]
0x000000000046b13c : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x00000000004be268 : cmp byte ptr [rsi], 0xfd ; call rax
0x00000000004499e3 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000041a870 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000481dcb : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x000000000046b13f : cmp cl, byte ptr [rcx + 0xf] ; rol ebx, 0x4c ; mov eax, ecx ; ret
0x0000000000489606 : cmp cl, ch ; ret
0x000000000046b10e : cmp dh, byte ptr [rbp + 4] ; test ecx, ecx ; jne 0x46b0ca ; xor eax, eax ; ret
0x000000000046e2b3 : cmp dh, byte ptr [rcx] ; rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x000000000049a075 : cmp dil, 0x10 ; jne 0x49a0a0 ; xor eax, eax ; ret
0x000000000049d215 : cmp dil, 0x10 ; jne 0x49d236 ; xor eax, eax ; ret
0x000000000049e075 : cmp dil, 0x10 ; jne 0x49e096 ; xor eax, eax ; ret
0x000000000049eae5 : cmp dil, 0x10 ; jne 0x49eb10 ; xor eax, eax ; ret
0x000000000043587b : cmp dl, 1 ; jb 0x43588d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dc80 : cmp dl, 1 ; jb 0x43dc8e ; mov byte ptr [rdi], cl ; ret
0x000000000043ddfa : cmp dl, 1 ; jb 0x43de08 ; mov byte ptr [rdi], cl ; ret
0x0000000000464898 : cmp dword ptr [rax + 0x30], 0 ; je 0x4648a6 ; ret
0x000000000043461c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000045092e : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000415031 : cmp dword ptr [rdi + 0x38], 0 ; je 0x415046 ; ret
0x00000000004429a0 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x000000000043f4d3 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000047adf9 : cmp eax, 0x251566 ; call rax
0x000000000047acbc : cmp eax, 0x2516a3 ; jmp rax
0x00000000004a38dd : cmp eax, 0x4000fff8 ; clc ; call qword ptr [rax]
0x00000000004a38b5 : cmp eax, 0xf88280ff ; call rax
0x000000000047814c : cmp eax, 0xfd ; jbe 0x47815d ; ret
0x000000000047450f : cmp eax, 0xff ; cmove rax, rdx ; ret
0x0000000000415064 : cmp eax, 0xff ; je 0x415079 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b87 : cmp eax, 0xff ; je 0x415b98 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464aaa : cmp eax, 0xff ; je 0x464abb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464aee : cmp eax, 0xff ; je 0x464aff ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410c39 : cmp eax, 0xff ; jne 0x410c46 ; pop rbx ; ret
0x0000000000415bdf : cmp eax, 0xff ; jne 0x415bd0 ; pop rbx ; ret
0x00000000004429b0 : cmp eax, 0xff ; jne 0x4429b0 ; xor eax, eax ; leave ; ret
0x000000000040db79 : cmp eax, 0xfffff000 ; ja 0x40dba8 ; ret
0x000000000043f2c6 : cmp eax, 0xfffff000 ; ja 0x43f2d8 ; ret
0x000000000043f315 : cmp eax, 0xfffff000 ; ja 0x43f328 ; ret
0x000000000043f4a4 : cmp eax, 0xfffff000 ; ja 0x43f4e8 ; ret
0x000000000044f941 : cmp eax, 0xfffff000 ; ja 0x44f958 ; ret
0x000000000046a7b8 : cmp eax, 0xfffff000 ; ja 0x46a7d0 ; pop rbx ; ret
0x000000000046ab46 : cmp eax, 0xfffff000 ; ja 0x46ab58 ; ret
0x000000000046ab9b : cmp eax, 0xfffff000 ; ja 0x46abb0 ; ret
0x000000000043e50b : cmp eax, 2 ; je 0x43e51f ; xor eax, eax ; ret
0x000000000044289a : cmp eax, 4 ; je 0x4428a5 ; ret
0x0000000000413065 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x413078 ; movzx eax, byte ptr [rax] ; ret
0x0000000000441211 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x0000000000474558 : cmp eax, dword ptr [rsi + rdx] ; jae 0x474508 ; xor eax, eax ; ret
0x0000000000416939 : cmp eax, ecx ; jae 0x416967 ; movzx eax, byte ptr [rax] ; ret
0x000000000043d6b3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004a38d5 : cmp eax, edi ; jmp rax
0x0000000000478324 : cmp eax, esi ; je 0x478334 ; ret
0x0000000000442836 : cmp ebx, 0xa ; je 0x442841 ; ret
0x000000000044417e : cmp ebx, eax ; setne dl ; jmp 0x44416a
0x00000000004715f1 : cmp ecx, dword ptr [rax - 0x75] ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004a0614 : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; ret 0xf7d9
0x000000000046d5ce : cmp ecx, dword ptr [rax - 0x7b] ; sal byte ptr [rsp + 0x48], 0x83 ; ret
0x0000000000447c29 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004671e0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000464dee : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fb0b : cmp ecx, eax ; jne 0x42fb39 ; xor eax, eax ; ret
0x00000000004a4205 : cmp ecx, edi ; jmp qword ptr [rax]
0x0000000000473e36 : cmp ecx, edx ; jne 0x473e15 ; ret
0x00000000004c91e1 : cmp edi, ebp ; call qword ptr [rbx]
0x000000000045a3c5 : cmp edi, ecx ; ja 0x45a3b0 ; mov eax, r8d ; ret
0x000000000046ad4e : cmp edi, edx ; ja 0x46ad7d ; ret
0x000000000047c888 : cmp edx, 0 ; mov eax, edx ; jle 0x47c8a0 ; ret
0x000000000041da9a : cmp edx, 0x6ca1a0 ; jne 0x41da69 ; ret
0x0000000000473e48 : cmp edx, eax ; jne 0x473df2 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000441da3 : cmp edx, eax ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000004267a8 : cmp edx, ecx ; jne 0x426795 ; ret
0x00000000004427ba : cmp edx, edi ; setae al ; ret
0x0000000000466e76 : cmp edx, esi ; je 0x466e87 ; test edx, edx ; jne 0x466e79 ; ret
0x0000000000416979 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x000000000044d3f5 : cmp esi, 3 ; je 0x44d406 ; pop rbx ; ret
0x00000000004bae24 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000464b4a : cmp esi, ecx ; jb 0x464b47 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415c1a : cmp esi, ecx ; jne 0x415c17 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000464897 : cmp qword ptr [rax + 0x30], 0 ; je 0x4648a7 ; ret
0x0000000000415030 : cmp qword ptr [rdi + 0x38], 0 ; je 0x415047 ; ret
0x000000000042ca92 : cmp r11b, r14b ; ret
0x0000000000442835 : cmp r11d, 0xa ; je 0x442842 ; ret
0x0000000000480b6d : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x480b40
0x0000000000474557 : cmp r8, qword ptr [rsi + rdx] ; jae 0x474509 ; xor eax, eax ; ret
0x000000000040db78 : cmp rax, -0x1000 ; ja 0x40dba9 ; ret
0x000000000043f2c5 : cmp rax, -0x1000 ; ja 0x43f2d9 ; ret
0x000000000043f314 : cmp rax, -0x1000 ; ja 0x43f329 ; ret
0x000000000043f4a3 : cmp rax, -0x1000 ; ja 0x43f4e9 ; ret
0x000000000044f940 : cmp rax, -0x1000 ; ja 0x44f959 ; ret
0x000000000046a7b7 : cmp rax, -0x1000 ; ja 0x46a7d1 ; pop rbx ; ret
0x000000000046ab45 : cmp rax, -0x1000 ; ja 0x46ab59 ; ret
0x000000000046ab9a : cmp rax, -0x1000 ; ja 0x46abb1 ; ret
0x000000000047814b : cmp rax, 0xfd ; jbe 0x47815e ; ret
0x000000000047450e : cmp rax, 0xff ; cmove rax, rdx ; ret
0x0000000000413064 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x413079 ; movzx eax, byte ptr [rax] ; ret
0x0000000000416938 : cmp rax, rcx ; jae 0x416968 ; movzx eax, byte ptr [rax] ; ret
0x0000000000478323 : cmp rax, rsi ; je 0x478335 ; ret
0x0000000000464ded : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042fb0a : cmp rcx, rax ; jne 0x42fb3a ; xor eax, eax ; ret
0x0000000000473e35 : cmp rcx, rdx ; jne 0x473e16 ; ret
0x000000000046ad4d : cmp rdi, rdx ; ja 0x46ad7e ; ret
0x0000000000473e47 : cmp rdx, r8 ; jne 0x473df3 ; mov eax, dword ptr [rsi + 4] ; ret
0x00000000004267a7 : cmp rdx, rcx ; jne 0x426796 ; ret
0x00000000004267a6 : cmp rdx, rcx ; jne 0x426797 ; ret
0x00000000004427b9 : cmp rdx, rdi ; setae al ; ret
0x0000000000464b49 : cmp rsi, rcx ; jb 0x464b48 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000415c19 : cmp rsi, rcx ; jne 0x415c18 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000496457 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496757 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497657 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c746 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000425b15 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000497357 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000042f589 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000040057a : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400581 ; ret
0x00000000004a3a80 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov esi, 0xbf36fff8 ; clc ; call rsi
0x000000000042a0b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497057 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496d57 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000409926 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x00000000004a39c9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; clc ; jmp qword ptr [rax]
0x000000000047aa21 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000004c7418 : cwde ; adc bl, bh ; jmp qword ptr [rdx]
0x000000000049a0f0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000049a185 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x0000000000412f5f : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040152c : cwde ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c6648 : cwde ; js 0x4c6648 ; call rax
0x0000000000414d8c : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004c0a58 : cwde ; pop rsi ; cmc ; jmp qword ptr [rax]
0x00000000004393b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000041b7c6 : dec byte ptr [r8 - 0x75] ; ret
0x00000000004393b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000479f16 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x000000000041b844 : dec byte ptr [rax - 0x73] ; ret
0x000000000045cf9c : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffffb60 ; call rax
0x000000000041b7c7 : dec byte ptr [rax - 0x75] ; ret
0x0000000000440ad8 : dec byte ptr [rax - 0x77] ; fucompi st(0) ; call rsp
0x000000000046557d : dec byte ptr [rax - 0x77] ; ret
0x000000000040e1da : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000047e46d : dec dword ptr [r13 + r9*4 + 0x7c] ; ret
0x0000000000482fc3 : dec dword ptr [r8 + 0x39] ; ret
0x0000000000478149 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x478160 ; ret
0x000000000041affc : dec dword ptr [r9 - 0x7b] ; ret 0x840f
0x00000000004105d9 : dec dword ptr [rax + 0x29] ; ret
0x00000000004394f2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473a41 : dec dword ptr [rax + 0x29] ; ret 0x48e9
0x000000000045e606 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000041915d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000041d7dd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x0000000000418815 : dec dword ptr [rax + 0x39] ; ret
0x0000000000480c94 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000485a8d : dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000470735 : dec dword ptr [rax + 0x39] ; ret 0xed75
0x000000000047469a : dec dword ptr [rax + 0x63] ; ret
0x00000000004623bb : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000462b0f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x0000000000465ab9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000474511 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000004212b1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000004594ce : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000412557 : dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000041063c : dec dword ptr [rax + 1] ; ret
0x000000000047d9d7 : dec dword ptr [rax + 1] ; ret 0x3948
0x00000000004be603 : dec dword ptr [rax + rdx*8 - 3] ; call rsp
0x00000000004be5ff : dec dword ptr [rax + rdx*8 - 3] ; dec dword ptr [rax + rdx*8 - 3] ; call rsp
0x000000000045d556 : dec dword ptr [rax - 0x39] ; ret
0x000000000045c88c : dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004117c7 : dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000480bfe : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000000000043eccc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000046960e : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474705 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000049b392 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x00000000004102b8 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x0000000000481dc8 : dec dword ptr [rax - 0x75] ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d4a
0x00000000004a0611 : dec dword ptr [rax - 0x75] ; cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; ret 0xf7d9
0x00000000004401ad : dec dword ptr [rax - 0x75] ; jge 0x4401b7 ; call rbx
0x0000000000440460 : dec dword ptr [rax - 0x75] ; jge 0x44046a ; call rbx
0x0000000000441ff8 : dec dword ptr [rax - 0x75] ; jge 0x442002 ; call rbx
0x0000000000479207 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041babf : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x000000000049bbbf : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000414041 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004785ac : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000483e02 : dec dword ptr [rax - 0x77] ; add cl, byte ptr [rax + 1] ; ret
0x00000000004885d7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000426918 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000049e7e8 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000049f014 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000004a0a15 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xf7d5
0x000000000049f25a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000040169c : dec dword ptr [rax - 0x77] ; ret
0x000000000046ad3e : dec dword ptr [rax - 0x77] ; ret 0x1477
0x0000000000483e4f : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000041dd81 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000044f7c2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000045e5ca : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000004663f6 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000004836d9 : dec dword ptr [rax - 0x77] ; ret 0x89e9
0x00000000004551f7 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000045fd96 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000048270d : dec dword ptr [rax - 0x77] ; ret 0xc6e9
0x000000000042122e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000046b303 : dec dword ptr [rax - 0x77] ; ret 0xf0eb
0x0000000000402ac8 : dec dword ptr [rax - 0x77] ; ret 0xf4e9
0x0000000000478511 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000487948 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485bfb : dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000049db77 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000047814a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x47815f ; ret
0x0000000000453c71 : dec dword ptr [rax - 0x7d] ; jge 0x453cae ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000040408c : dec dword ptr [rax - 0x7d] ; ret
0x000000000041910f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000448b52 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000470b3f : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000470b2d : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000456fd4 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x000000000046a116 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000470bcb : dec dword ptr [rax - 0x7d] ; ret 0x8908
0x00000000004855f2 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x000000000049d187 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x00000000004530b6 : dec dword ptr [rax - 0x7d] ; ret 0xe920
0x0000000000434620 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000046c960 : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000049db84 : dec dword ptr [rax - 9] ; ret
0x000000000047e46e : dec dword ptr [rbp + rcx*4 + 0x7c] ; ret
0x000000000044066e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000041b3ff : dec dword ptr [rbx + 0x2aed9e15] ; add dh, dh ; ret 0xf02
0x000000000047862c : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x0000000000468cd6 : dec dword ptr [rbx + 0x70bf1443] ; ret 0x6c
0x0000000000484496 : dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x00000000004554b4 : dec dword ptr [rcx + 0x29] ; ret
0x000000000046db63 : dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004550c3 : dec dword ptr [rcx + 0x39] ; ret
0x000000000046c992 : dec dword ptr [rcx + 0x39] ; ret 0x830f
0x0000000000455041 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047226a : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x00000000004695e6 : dec dword ptr [rcx + 0x6b] ; ret
0x000000000045abcc : dec dword ptr [rcx + 0xf40244c] ; ret 0x548b
0x0000000000452d19 : dec dword ptr [rcx + rcx*4 - 2] ; mov rdi, rbx ; call rax
0x0000000000480d0f : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x000000000043ffe5 : dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044046e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440078 : dec dword ptr [rcx - 0x75] ; jge 0x440082 ; call rbx
0x000000000044019f : dec dword ptr [rcx - 0x75] ; jge 0x4401a9 ; call rbx
0x00000000004402e2 : dec dword ptr [rcx - 0x75] ; jge 0x4402ec ; call rbx
0x0000000000440452 : dec dword ptr [rcx - 0x75] ; jge 0x44045c ; call rbx
0x0000000000441c70 : dec dword ptr [rcx - 0x75] ; jge 0x441c7a ; call rbx
0x0000000000441d98 : dec dword ptr [rcx - 0x75] ; jge 0x441da2 ; call rbx
0x0000000000441edb : dec dword ptr [rcx - 0x75] ; jge 0x441ee5 ; call rbx
0x0000000000441fdc : dec dword ptr [rcx - 0x75] ; jge 0x441fe6 ; call rbx
0x000000000047cc7c : dec dword ptr [rcx - 0x77] ; imul ecx ; ret
0x0000000000453cb3 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000445ff8 : dec dword ptr [rcx - 0x77] ; ret 0x11e9
0x000000000044e857 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000004562e3 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000041affd : dec dword ptr [rcx - 0x7b] ; ret 0x840f
0x0000000000485d57 : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc381a967
0x000000000043f365 : dec dword ptr [rdi] ; adc esp, 0x4f ; add byte ptr [rax], al ; ret
0x000000000043f459 : dec dword ptr [rdi] ; and eax, 0x4e ; add byte ptr [rax], al ; ret
0x0000000000484176 : dec dword ptr [rdi] ; lahf ; ret 0xb60f
0x0000000000486a2f : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x0000000000413612 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000044276c : dec dword ptr [rdi] ; or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043f26c : dec dword ptr [rdi] ; or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000446b7b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000044274f : dec dword ptr [rdi] ; sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x00000000004106f1 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000043d540 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004707cc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x000000000041697b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x000000000048594f : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000000000047a77e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000459b16 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x000000000043ebbd : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000043f3c5 : dec dword ptr [rdi] ; xor dword ptr [rdi + rcx*2], 0 ; ret
0x000000000047a29d : dec ecx ; ret
0x00000000004394f1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000462546 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000448b51 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046db62 : dec qword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004bf2f1 : div ah ; call qword ptr [rbx]
0x00000000004655c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047aa2c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045a3d5 : div ecx ; add eax, r8d ; ret
0x000000000043e4c1 : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004a3765 : div edi ; jmp qword ptr [rax]
0x0000000000463026 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047aa2b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004004ec : enter -0x1401, -0x3b ; ret
0x00000000004004dc : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000043d6b4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004393ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000004394ee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000047920b : enter -0x74b8, 0x14 ; ret
0x000000000046d744 : enter -0x76b4, -7 ; mov r15, rax ; jmp 0x46d718
0x000000000046be84 : enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x00000000004400c4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000041693a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000047a59e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042294d : enter 0x31c3, -0x40 ; ret
0x00000000004c238b : enter 0x380e, 0x41 ; ret
0x00000000004187cd : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000041afc5 : enter 0x4801, -0x7d ; ret 0x4810
0x000000000046b0c6 : enter 0x4f75, -0xd ; ret
0x00000000004bb5dc : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000042f636 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000421381 : enter 0xf66, -0x15 ; ret
0x000000000049c2a3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x0000000000414cd7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000004151d3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000040f359 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004429a6 : fadd dword ptr [rax] ; leave ; ret
0x000000000041ca6f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000411b30 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000444212 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004c9829 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000004112a7 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000047b709 : fadd st(1) ; call 0xffffffff8a09e034
0x000000000047b870 : fadd st(1) ; call 0xffffffff8a09e19b
0x000000000047c089 : fadd st(1) ; call 0xffffffff8a09e9b4
0x000000000047c1e6 : fadd st(1) ; call 0xffffffff8a09eb11
0x00000000004be34c : fadd st(2), st(0) ; std ; call qword ptr [rbx + rax*8]
0x00000000004778f5 : fadd st(3) ; mov eax, 0xffffffff ; ret
0x000000000042f181 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049f084 : fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000441d02 : fcmovb st(0), st(2) ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004bac18 : fcmovb st(0), st(3) ; ret
0x000000000044f05e : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000004c45d8 : fcom st(5) ; clc ; call qword ptr [rax]
0x000000000049c2a9 : fcomi st(3) ; ret
0x0000000000468b87 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f9aa : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000040fa8f : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fd2f : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041dfd6 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004bb999 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004c85dc : fcomp qword ptr [rax + rax - 0x3fc8000] ; call qword ptr [rax]
0x00000000004b9c00 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000041dd7f : fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004c1f58 : fdiv dword ptr [rax - 0xa] ; call qword ptr [rax]
0x00000000004a3b95 : fdiv st(0), st(0) ; jmp qword ptr [rax]
0x0000000000485bf9 : fdiv st(1), st(0) ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x0000000000440374 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004402e0 : fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4402ee ; call rbx
0x00000000004a3b99 : fdivp st(0) ; inc dword ptr [rax] ; loopne 0x4a3b9d ; jmp rax
0x00000000004a3b79 : fdivp st(0) ; push qword ptr [rax] ; loopne 0x4a3b7d ; call qword ptr [rax]
0x00000000004c4df9 : fdivp st(1) ; jmp rax
0x00000000004c7059 : fdivp st(2) ; jmp qword ptr [rdx]
0x00000000004401ab : fdivp st(5) ; dec dword ptr [rax - 0x75] ; jge 0x4401b9 ; call rbx
0x000000000044010a : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044019d : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4401ab ; call rbx
0x000000000044019c : fdivp st(5) ; dec dword ptr [rcx - 0x75] ; jge 0x4401ac ; call rbx
0x00000000004b8f55 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000043d6b8 : fdivr st(7) ; ret
0x00000000004a3791 : fdivrp st(7) ; call qword ptr [rax]
0x00000000004a37cd : fdivrp st(7) ; call rax
0x000000000043f4d2 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000004642a4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x0000000000440829 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004bb7e6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000444125 : fidivr dword ptr [rax + 1] ; ret
0x000000000043e0df : fild dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x000000000045a3c8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000048a505 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000004106e0 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000404d88 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000426942 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000048ad22 : fimul word ptr [rax + 0x29] ; ret
0x00000000004118be : fimul word ptr [rax - 0x77] ; ret
0x000000000047309a : fimul word ptr [rax - 0x7d] ; ret
0x000000000047a3ce : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47a428
0x000000000047fede : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47ff38
0x000000000044fa90 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x0000000000414d45 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414eb5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004175f8 : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000468002 : fisttp dword ptr [rax + 0xf] ; fucompp ; ret 0xfffe
0x000000000049f081 : fisttp dword ptr [rax - 0x77] ; fbstp dword ptr [rbp - 0x17] ; pop rbx ; ret
0x0000000000474069 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000479471 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000049b6d0 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x000000000047948b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000440d09 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000041e3fe : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x0000000000447f57 : fisttp qword ptr [rax + 0xf] ; ret 0x8949
0x000000000041c809 : fisttp word ptr [rax + 9] ; ret 0x8948
0x000000000049bacc : fisttp word ptr [rax - 0x7d] ; ret
0x000000000047950f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000042b3ed : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042f551 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f251 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043293c : fisubr word ptr [rcx] ; ret 0xfec5
0x000000000047d642 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000400bda : fld qword ptr [rax] ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000004b9c41 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004918ca : fld xword ptr [rsp - 0x18] ; ret
0x000000000044f619 : fldcw word ptr [rsp - 2] ; ret
0x0000000000425f69 : fldenv dword ptr [rsi + 0xf] ; je 0x425fc6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042cd97 : fldenv dword ptr [rsi + 0xf] ; je 0x42cdf4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042f5d1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425e61 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047a474 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000418d9f : fmul dword ptr [rax + 0x39] ; ret
0x000000000047e651 : fmul dword ptr [rax + 0x39] ; ret 0x4976
0x000000000047e976 : fmul dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048ef57 : fmul dword ptr [rax - 0x39] ; ret
0x00000000004586e1 : fmul dword ptr [rax - 0x39] ; ret 0xfff0
0x00000000004113a1 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000484499 : fmul dword ptr [rax - 0x77] ; ret 0x348
0x000000000047d093 : fmul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x00000000004697ec : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000411a2a : fmul dword ptr [rcx + 0x21] ; ret
0x000000000045adde : fmul dword ptr [rcx + 0xf] ; ret
0x000000000045ce3b : fmul dword ptr [rdi] ; ret
0x000000000048ac27 : fmul qword ptr [rcx + 0x19] ; ret 0x8545
0x000000000048a2ac : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000421709 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004271bf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000048ee52 : fmul st(0) ; ret
0x000000000048edd0 : fmulp st(1) ; ret
0x000000000040db25 : fpatan ; ret
0x000000000040faff : frstor dword ptr [rbp - 0x76b7ffd5] ; ret
0x000000000042f351 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b9927 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004b9ca0 : fstp st(0) ; ret 0xde5d
0x000000000040dba8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042f651 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000438224 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000047c8b2 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000004c8bdc : fsub qword ptr [rdx - 0x72800000] ; cld ; call qword ptr [rax]
0x000000000043dacb : fsub qword ptr [rsi + 0xf] ; jmp 0x43da97
0x000000000042f451 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042149c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004400c2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000441bcb : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x0000000000441fca : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000441638 : fsubp st(0) ; ret 0xffe8
0x0000000000441538 : fsubp st(0) ; ret 0xffe9
0x00000000004c91dc : fsubr qword ptr [rax + 0x3ba00000] ; std ; call qword ptr [rbx]
0x00000000004bb978 : fucom st(5) ; loop 0x4bb9d1 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047edf5 : fucomi st(1) ; ret
0x000000000043f6bf : fucomp st(2) ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000440adb : fucompi st(0) ; call rsp
0x000000000049f017 : fucompi st(0) ; ret
0x00000000004a0a18 : fucompi st(0) ; ret 0xf7d5
0x000000000041be10 : fucompi st(0) ; ret 0xffff
0x000000000049a5a1 : fucompi st(1) ; ret
0x00000000004457f2 : fucompi st(3) ; ret
0x0000000000468006 : fucompp ; ret 0xfffe
0x000000000043ebc0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004c2ff4 : hlt ; add byte ptr [rax], r8b ; adc rdi, rax ; call qword ptr [rax]
0x00000000004c4df4 : hlt ; add byte ptr fs:[rax], al ; test al, 0xde ; stc ; jmp rax
0x000000000044262b : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004bedca : hlt ; call qword ptr [rax]
0x00000000004bf2f2 : hlt ; call qword ptr [rbx]
0x00000000004bebea : hlt ; call qword ptr [rdx]
0x00000000004a4169 : hlt ; clc ; call rax
0x00000000004b9d28 : hlt ; jmp 0x4b9cfd
0x00000000004c63f4 : hlt ; jp 0x4c63fe ; add byte ptr [rax + 0x4c], bh ; cli ; jmp rsp
0x0000000000434a8a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043d1c3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004c85f4 : hlt ; pushfq ; add byte ptr [rax], al ; js 0x4c8604 ; cld ; call qword ptr [rdx]
0x00000000004c0061 : hlt ; ret
0x00000000004be40c : hlt ; sar ebp, 1 ; call rsp
0x00000000004b9e63 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x000000000043d1c7 : hlt ; sub eax, edx ; ret
0x00000000004a41ad : idiv al ; call rax
0x00000000004c1d12 : idiv bh ; ret
0x00000000004a3a74 : idiv byte ptr [rax + rdi*8 - 0x7427901] ; call qword ptr [rsi]
0x00000000004015e6 : idiv byte ptr [rdi + 1] ; call rax
0x0000000000446b76 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004a4171 : idiv eax ; call rax
0x00000000004a379a : idiv edi ; nop ; loop 0x4a379b ; call rax
0x00000000004a37aa : idiv edi ; nop ; out -9, eax ; call rax
0x00000000004a048b : idiv edi ; nop dword ptr [rax] ; ret
0x00000000004a0448 : idiv edi ; nop word ptr [rax + rax] ; ret
0x00000000004a3762 : idiv edi ; push rax ; div edi ; jmp qword ptr [rax]
0x00000000004a3796 : idiv edi ; push rax ; loope 0x4a379b ; call qword ptr [rax - 0x2f00081e]
0x00000000004a37a6 : idiv edi ; push rax ; out 0xf7, al ; call qword ptr [rax - 0x2f000819]
0x00000000004a0e48 : idiv edi ; ret
0x00000000004a378a : idiv edi ; sal dl, 0xf7 ; call rax
0x000000000041b28f : imul dword ptr [rdx] ; add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x0000000000441be5 : imul eax ; cmc ; ret
0x0000000000441c6b : imul eax ; outsd dx, dword ptr [rsi] ; ret
0x000000000046b338 : imul eax ; ret 0xfff8
0x0000000000441d93 : imul eax ; ret 0xfffd
0x000000000044b34d : imul eax, dword ptr [rcx], 0 ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000043bd21 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x000000000044722b : imul eax, dword ptr [rdx], 0 ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x0000000000444179 : imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004a0617 : imul ebx, dword ptr [rax], -0x18 ; ret 0xf7d9
0x0000000000440373 : imul ebx, esp, 0x8b49fffd ; call rbx
0x000000000047cc7f : imul ecx ; ret
0x00000000004671e4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000043b19c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000434a6a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004267ab : in al, -0xd ; ret
0x00000000004a3b65 : in al, -8 ; jmp qword ptr [rax]
0x00000000004a3c49 : in al, -8 ; push qword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x000000000042381c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000043e158 : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000485e3a : in al, 0xf ; lahf ; ret 0x2941
0x0000000000457a58 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00000000004053b5 : in al, 1 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004bebe4 : in al, 2 ; add byte ptr [rax], al ; sub byte ptr [rbx], dh ; hlt ; call qword ptr [rdx]
0x00000000004230d0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x000000000047128d : in al, dx ; cld ; inc dword ptr [rbp + 0x5b0378c0] ; ret
0x00000000004918c9 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000431bea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e6a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004653f7 : in al, dx ; or al, ch ; ret 1
0x000000000041caa7 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004bf2ec : in al, dx ; or dword ptr [rax], eax ; add al, al ; div ah ; call qword ptr [rbx]
0x00000000004c45ec : in al, dx ; pop rsp ; add byte ptr [rax], al ; rcl ch, 1 ; clc ; call qword ptr [rdx]
0x0000000000444168 : in al, dx ; push rdi ; sub byte ptr [rax], al ; pop rbx ; ret
0x000000000049ce89 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004bb3be : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bb351 ; ret 0x48f
0x00000000004bb3bd : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bb352 ; ret 0x48f
0x00000000004c19ec : in al, dx ; xor byte ptr [rax], al ; add byte ptr [rax - 0x12], ah ; cmc ; call qword ptr [rdx]
0x00000000004bb979 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000045a7ab : in eax, -0x21 ; loopne 0x45a73c ; ret 0xe680
0x000000000049b3ca : in eax, -0x7d ; call qword ptr [rcx]
0x0000000000434aea : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042c2ca : in eax, -0xd ; ret
0x0000000000468cd4 : in eax, -1 ; dec dword ptr [rbx + 0x70bf1443] ; ret 0x6c
0x00000000004bae41 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a3be9 : in eax, -8 ; inc dword ptr [rax - 0x19] ; clc ; call rax
0x00000000004b9ac3 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042686a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000004520e2 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b8d59 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000466663 : in eax, 0xf ; je 0x466688 ; add rax, 2 ; ret
0x00000000004a4195 : in eax, dx ; clc ; call rax
0x00000000004c8c11 : in eax, dx ; cld ; call qword ptr [rax]
0x000000000049f0cf : in eax, dx ; jne 0x49f0b1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041dbcb : in eax, dx ; jrcxz 0x41dc01 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000043d9e2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000044f4e7 : in eax, dx ; mov esi, 0x3740027 ; ret
0x00000000004319fa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eea : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000495660 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478c1b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e322 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414b82 : in eax, dx ; ret
0x000000000043db32 : in eax, dx ; sub rax, 1 ; ret
0x000000000043ddf8 : inc bl ; cmp dl, 1 ; jb 0x43de0a ; mov byte ptr [rdi], cl ; ret
0x00000000004328c6 : inc bl ; jb 0x4328d6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004267d1 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000414ff2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044d3f6 : inc byte ptr [rbx] ; je 0x44d405 ; pop rbx ; ret
0x00000000004a3ef3 : inc dword ptr [rax + 0x16] ; stc ; call rax
0x00000000004a3cdb : inc dword ptr [rax + 0x19] ; stc ; call rax
0x00000000004a3b8f : inc dword ptr [rax + 0x40fff8da] ; fdiv st(0), st(0) ; jmp qword ptr [rax]
0x00000000004a375f : inc dword ptr [rax + 0x50fff7f6] ; div edi ; jmp qword ptr [rax]
0x00000000004be1eb : inc dword ptr [rax + 0x66] ; std ; jmp qword ptr [rax]
0x00000000004be20b : inc dword ptr [rax + 0x75] ; std ; jmp qword ptr [rax]
0x00000000004a38a7 : inc dword ptr [rax + 0x7d] ; clc ; call qword ptr [rax - 0x1f000782]
0x00000000004a3b4b : inc dword ptr [rax - 0x18] ; clc ; call rax
0x00000000004a3beb : inc dword ptr [rax - 0x19] ; clc ; call rax
0x00000000004a3b47 : inc dword ptr [rax - 0x1a] ; clc ; inc dword ptr [rax - 0x18] ; clc ; call rax
0x00000000004a3be7 : inc dword ptr [rax - 0x1b] ; clc ; inc dword ptr [rax - 0x19] ; clc ; call rax
0x00000000004a3b93 : inc dword ptr [rax - 0x24] ; clc ; jmp qword ptr [rax]
0x00000000004a3cbf : inc dword ptr [rax - 0x2d] ; clc ; call qword ptr [rax - 0x1f00072c]
0x00000000004be267 : inc dword ptr [rax - 0x2f0002c2] ; std ; jmp qword ptr [rax]
0x00000000004a3c7b : inc dword ptr [rax - 0x2f00072f] ; sar al, cl ; jmp qword ptr [rax]
0x00000000004a3c6b : inc dword ptr [rax - 0x34] ; clc ; call qword ptr [rax - 0x1f000733]
0x00000000004a39ff : inc dword ptr [rax - 0x49] ; clc ; push rax ; mov bh, 0xf8 ; jmp rax
0x000000000045338a : inc dword ptr [rax - 0x4d343] ; jmp qword ptr [rax]
0x000000000045553c : inc dword ptr [rax - 0x50f43] ; jmp qword ptr [rax]
0x00000000004a3bc7 : inc dword ptr [rax - 0x7f00071b] ; out -8, eax ; call qword ptr [rax]
0x00000000004600e3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000042fb67 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004a38df : inc dword ptr [rax] ; clc ; call qword ptr [rax]
0x00000000004a427f : inc dword ptr [rax] ; jae 0x4a4280 ; jmp qword ptr [rax]
0x00000000004a425f : inc dword ptr [rax] ; jb 0x4a4260 ; jmp qword ptr [rax]
0x00000000004a4223 : inc dword ptr [rax] ; jno 0x4a4224 ; call qword ptr [rax]
0x00000000004be213 : inc dword ptr [rax] ; jns 0x4be218 ; jmp rax
0x00000000004a3b9b : inc dword ptr [rax] ; loopne 0x4a3b9b ; jmp rax
0x00000000004a39eb : inc dword ptr [rax] ; mov edx, 0xb726fff8 ; clc ; call rdx
0x00000000004a413f : inc dword ptr [rax] ; or edi, ecx ; push qword ptr [rax + 0xa] ; stc ; jmp rax
0x00000000004be1f3 : inc dword ptr [rax] ; push 0xfd ; jmp rax
0x00000000004a3c8f : inc dword ptr [rax] ; ret 0xfff8
0x00000000004a3ee3 : inc dword ptr [rax] ; sbb cl, bh ; call qword ptr [rax + 0x20fff917]
0x000000000047128f : inc dword ptr [rbp + 0x5b0378c0] ; ret
0x00000000004734a0 : inc dword ptr [rbp - 0x76b48a40] ; ret
0x000000000045b2b0 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x45b335 ; ret
0x00000000004604d7 : inc dword ptr [rbx - 0x10ab43] ; jmp qword ptr [rax]
0x000000000040d53a : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049d3f9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x000000000044e387 : inc dword ptr [rbx - 0x76be0008] ; ret
0x000000000049b5f3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000046864c : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x00000000004075f2 : inc dword ptr [rbx - 0x7bf0fe08] ; ret
0x000000000043e4bf : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000043e3ef : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000045e1a9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x00000000004778c0 : inc dword ptr [rcx + rcx*4 - 0x40] ; sub eax, ecx ; ret
0x000000000046b7de : inc dword ptr [rcx - 0x47] ; ret
0x000000000044e38a : inc dword ptr [rcx - 0x77] ; ret
0x00000000004c9826 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000047fd60 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a3dc7 : inc dword ptr [rdx + 0x14] ; stc ; call rdx
0x00000000004be407 : inc dword ptr [rdx + rdx*8 - 3] ; push rsp ; sar ebp, 1 ; call rsp
0x000000000042bbcd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004a3d23 : inc dword ptr [rsi + 0x18] ; stc ; call rsi
0x00000000004be3f7 : inc dword ptr [rsi + rcx*8 - 3] ; push qword ptr [rsi + rcx*8] ; std ; call rsp
0x000000000049d1d2 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x00000000004a3d13 : inc dword ptr [rsi] ; sbb bh, cl ; call qword ptr [rsi + 0x26fff919]
0x00000000004a3cfb : inc eax ; adc eax, 0x1550fff9 ; stc ; jmp rax
0x00000000004be85b : inc eax ; add edi, esi ; jmp qword ptr [rax]
0x00000000004a42cf : inc eax ; ja 0x4a42d0 ; call rax
0x00000000004a4277 : inc eax ; jb 0x4a4278 ; jmp rax
0x00000000004a42a7 : inc eax ; jbe 0x4a42a8 ; call rax
0x00000000004a4253 : inc eax ; jno 0x4a4254 ; jmp rax
0x00000000004a4213 : inc eax ; jo 0x4a4214 ; call rax
0x00000000004a3af3 : inc eax ; mov esp, 0xbd50fff8 ; clc ; jmp rax
0x00000000004a3c8b : inc eax ; salc ; clc ; inc dword ptr [rax] ; ret 0xfff8
0x00000000004be277 : inc eax ; std ; call qword ptr [rax]
0x0000000000464dfc : inc ebx ; nop ; xor eax, eax ; ret
0x000000000043d6b9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000412c18 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000004778fb : inc ebx ; sub eax, edx ; ret
0x0000000000460292 : inc edi ; test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x00000000004a3f9b : inc edx ; psubw mm7, mm7 ; psubw mm7, mm7 ; ret 0xf90e
0x0000000000481266 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004be357 : inc esp ; ret
0x0000000000402bab : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6cb980], cl ; call rbx
0x0000000000467713 : insb byte ptr [rdi], dx ; add byte ptr [rax + 0x3d], cl ; ret 0x6c
0x00000000004678cd : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x73], cl ; nop ; ret 0x6c
0x000000000040152d : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004678d4 : insb byte ptr [rdi], dx ; add byte ptr [rbp + rcx*4 - 0x80], cl ; push rax ; ret 0x6c
0x000000000041da9e : insb byte ptr [rdi], dx ; add byte ptr [rbp - 0x42], dh ; ret
0x0000000000470d35 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000047ae36 : insb byte ptr [rdi], dx ; add cl, ch ; ret
0x000000000047bcb1 : insb byte ptr [rdi], dx ; and al, 0x78 ; call r12
0x00000000004918cb : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044f61a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x000000000049da2b : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x49da47
0x00000000004bb97e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000040ffe0 : insb byte ptr [rdi], dx ; ret 1
0x00000000004c7b6c : insb byte ptr [rdi], dx ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sti ; jmp qword ptr [rdx]
0x0000000000494ee0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004c569d : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sar dl, 0xf9 ; call rsi
0x000000000043fccf : insd dword ptr [rdi], dx ; add byte ptr [rax], r8b ; ret
0x0000000000495de0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000462ab1 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x00000000004bb97f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004b9d2d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004bac3f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478ac3 : int 0x48
0x00000000004bae07 : int 0x80
0x00000000004c2309 : int 0xa
0x000000000048890f : int 0xfc
0x000000000045c217 : int 0xff
0x000000000045a3d6 : int1 ; add eax, r8d ; ret
0x000000000044495c : int1 ; call rbx
0x00000000004a4161 : int1 ; clc ; call rax
0x0000000000473e34 : int1 ; cmp rcx, rdx ; jne 0x473e17 ; ret
0x000000000043dd7b : int1 ; jl 0x43ddcc ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd9c : int1 ; jl 0x43dded ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043ddaf : int1 ; jl 0x43de00 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de84 : int1 ; jl 0x43ded5 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dedc : int1 ; jl 0x43df2d ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043df79 : int1 ; jl 0x43dfca ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000480b73 : int1 ; jmp 0x480b3a
0x0000000000480b72 : int1 ; jmp 0x480b3b
0x00000000004348db : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004321bf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043d193 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043e4c2 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004bb356 : int1 ; ret 0x5803
0x000000000043d197 : int1 ; sub eax, edx ; ret
0x000000000041eff2 : iretd ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41f004 ; call rax
0x000000000040db7e : ja 0x40dba3 ; ret
0x0000000000426732 : ja 0x426743 ; ret
0x000000000042c258 : ja 0x42c252 ; ret 0x7401
0x0000000000435ca3 : ja 0x435ca7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043b2e7 : ja 0x43b2ed ; ret
0x000000000043b303 : ja 0x43b30d ; mov dword ptr [rdi], ecx ; ret
0x000000000043b344 : ja 0x43b353 ; mov qword ptr [rdi], rcx ; ret
0x000000000043b3c9 : ja 0x43b3dd ; ret
0x000000000043b41f : ja 0x43b437 ; ret
0x000000000043b4a1 : ja 0x43b4bd ; ret
0x000000000043b907 : ja 0x43b911 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b923 : ja 0x43b931 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b974 : ja 0x43b987 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043ba59 : ja 0x43ba71 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043bacf : ja 0x43baeb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043bb51 : ja 0x43bb71 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043f2cb : ja 0x43f2d3 ; ret
0x000000000043f31a : ja 0x43f323 ; ret
0x000000000043f4a9 : ja 0x43f4e3 ; ret
0x000000000043f54d : ja 0x43f597 ; add rsp, 0x60 ; pop rbx ; ret
0x000000000044f946 : ja 0x44f953 ; ret
0x000000000045a3c7 : ja 0x45a3ae ; mov eax, r8d ; ret
0x000000000046a7bd : ja 0x46a7cb ; pop rbx ; ret
0x000000000046ab4b : ja 0x46ab53 ; ret
0x000000000046aba0 : ja 0x46abab ; ret
0x000000000046ad50 : ja 0x46ad7b ; ret
0x0000000000476e05 : ja 0x476e2f ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x00000000004773f5 : ja 0x47741f ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000477791 : ja 0x4777bb ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000478f3e : ja 0x478f90 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000484b34 : ja 0x484ac1 ; ret 0x348
0x00000000004874ab : ja 0x487438 ; ret 0x348
0x000000000049cd8d : ja 0x49cd96 ; sbb eax, eax ; ret
0x00000000004a42d1 : ja 0x4a42ce ; call rax
0x00000000004a42cd : ja 0x4a42ce ; inc eax ; ja 0x4a42d2 ; call rax
0x00000000004a42d9 : ja 0x4a42d6 ; call qword ptr [rax]
0x00000000004a42d5 : ja 0x4a42d6 ; push rax ; ja 0x4a42da ; call qword ptr [rax]
0x00000000004bb3c4 : ja 0x4bb34b ; ret 0x48f
0x00000000004be211 : ja 0x4be216 ; inc dword ptr [rax] ; jns 0x4be21a ; jmp rax
0x0000000000413068 : jae 0x413075 ; movzx eax, byte ptr [rax] ; ret
0x000000000041693b : jae 0x416965 ; movzx eax, byte ptr [rax] ; ret
0x0000000000444124 : jae 0x444107 ; mov eax, 1 ; ret
0x000000000043f26d : jae 0x444346 ; ret
0x000000000047455b : jae 0x474505 ; xor eax, eax ; ret
0x000000000049dd16 : jae 0x49dd29 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x00000000004a4281 : jae 0x4a427e ; jmp qword ptr [rax]
0x00000000004b9982 : jae 0x4b9964 ; jo 0x4b9a00 ; mov ebp, 0xfb67d10d ; ret
0x00000000004ba81e : jae 0x4ba7f9 ; push rsi ; pop rdx ; je 0x4ba7ee ; ret 0xacfc
0x00000000004be209 : jae 0x4be20e ; inc dword ptr [rax + 0x75] ; std ; jmp qword ptr [rax]
0x00000000004bf5e1 : jae 0x4bf5f9 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000004c52a7 : jae 0x4c52b5 ; ret
0x00000000004301ca : jb 0x4301da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043031a : jb 0x43032a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043046a : jb 0x43047a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004305ba : jb 0x4305ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043070a : jb 0x43071a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043085a : jb 0x43086a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004309aa : jb 0x4309ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430afa : jb 0x430b0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c4a : jb 0x430c5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d9a : jb 0x430daa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eea : jb 0x430efa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043103a : jb 0x43104a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043118a : jb 0x43119a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312da : jb 0x4312ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043142a : jb 0x43143a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004327c1 : jb 0x4327aa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432824 : jb 0x43280d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000004328c8 : jb 0x4328d4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043587e : jb 0x43588a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000043dc67 : jb 0x43dc77 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043dc73 : jb 0x43dc89 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043dc83 : jb 0x43dc8b ; mov byte ptr [rdi], cl ; ret
0x000000000043dde5 : jb 0x43ddf4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043ddf0 : jb 0x43de03 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043ddfd : jb 0x43de05 ; mov byte ptr [rdi], cl ; ret
0x0000000000464b4c : jb 0x464b45 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004a4261 : jb 0x4a425e ; jmp qword ptr [rax]
0x00000000004a4275 : jb 0x4a4276 ; inc eax ; jb 0x4a427a ; jmp rax
0x00000000004a4279 : jb 0x4a4276 ; jmp rax
0x00000000004a427d : jb 0x4a427e ; inc dword ptr [rax] ; jae 0x4a4282 ; jmp qword ptr [rax]
0x00000000004c3ae1 : jb 0x4c3add ; call qword ptr [rcx]
0x00000000004c5b45 : jb 0x4c5b4d ; add byte ptr [rax], bl ; adc edi, edx ; jmp qword ptr [rax]
0x00000000004c5b44 : jb 0x4c5b4e ; add byte ptr [rax], bl ; adc edi, edx ; jmp qword ptr [rax]
0x0000000000414d8b : jbe 0x414d2b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000041dc2a : jbe 0x41dc17 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000426076 : jbe 0x4260b5 ; add rax, rdi ; ret
0x0000000000426086 : jbe 0x4260b7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426096 : jbe 0x4260b7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004260a6 : jbe 0x4260b7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042c2c3 : jbe 0x42c2de ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c2b9 ; ret
0x000000000045ab92 : jbe 0x45ab1f ; ret 0x8166
0x000000000046407a : jbe 0x463ff0 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047814f : jbe 0x47815a ; ret
0x00000000004a42a9 : jbe 0x4a42a6 ; call rax
0x00000000004a42a5 : jbe 0x4a42a6 ; inc eax ; jbe 0x4a42aa ; call rax
0x00000000004a42ad : jbe 0x4a42aa ; jmp rax
0x00000000004a42b5 : jbe 0x4a42b2 ; call qword ptr [rax]
0x00000000004a42b1 : jbe 0x4a42b2 ; push rax ; jbe 0x4a42b6 ; call qword ptr [rax]
0x0000000000400879 : je 0x400890 ; pop rbp ; mov edi, 0x6cb4f0 ; jmp rax
0x00000000004008bb : je 0x4008d0 ; pop rbp ; mov edi, 0x6cb4f0 ; jmp rax
0x0000000000400b74 : je 0x400ba2 ; adc byte ptr [rbx + 0x410c247c], cl ; call rsp
0x00000000004015e3 : je 0x4015f7 ; xor esi, esi ; mov edi, 1 ; call rax
0x0000000000402129 : je 0x40213d ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402375 : je 0x402389 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402c54 : je 0x402c64 ; mov edi, 0x6cba00 ; call rax
0x0000000000402ea3 : je 0x402ebd ; mov edi, 0x6cb980 ; call rax
0x0000000000403097 : je 0x4030b1 ; mov edi, 0x6cb980 ; call rax
0x00000000004034b2 : je 0x4034c2 ; mov edi, 0x6cba40 ; call rax
0x00000000004034fa : je 0x40350c ; mov edi, 0x6cba40 ; call r15
0x00000000004035fa : je 0x40360a ; mov edi, 0x6cba40 ; call rax
0x000000000040f82e : je 0x40f83d ; mov eax, edx ; pop rbx ; ret
0x000000000040fbd8 : je 0x40fc03 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041417b : je 0x414121 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414d53 : je 0x414d0d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000414ec3 : je 0x414e7d ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000415035 : je 0x415042 ; ret
0x0000000000415067 : je 0x415076 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415b8a : je 0x415b95 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000041772d : je 0x41794e ; mov rdx, rax ; jmp 0x417758
0x0000000000417cfa : je 0x417d01 ; pop rbx ; ret
0x0000000000417dd7 : je 0x417ddd ; call rax
0x0000000000418bc4 : je 0x418bd1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041e0c2 : je 0x41e0eb ; call rax
0x000000000041eab2 : je 0x41eade ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000041eff8 : je 0x41effe ; call rax
0x0000000000420ff9 : je 0x421002 ; ret
0x0000000000421282 : je 0x421297 ; mov eax, 0x16 ; ret
0x00000000004212d1 : je 0x4212e3 ; lea rax, qword ptr [rip + 0x1a966] ; ret
0x0000000000422a03 : je 0x4229cd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004236d5 : je 0x4236dd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000423744 : je 0x423756 ; lea rax, qword ptr [rip + 0x14853] ; ret
0x00000000004238b4 : je 0x4238be ; bsf eax, edx ; ret
0x00000000004238b4 : je 0x4238bf ; bsf eax, edx ; ret
0x000000000042395d : je 0x423975 ; bsf rax, rdx ; ret
0x000000000042395d : je 0x423976 ; bsf rax, rdx ; ret
0x00000000004238fc : je 0x423989 ; bsf rax, rdx ; ret
0x0000000000425f6c : je 0x425fc3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004260de : je 0x4260f1 ; lea rax, qword ptr [rip + 0x8449] ; ret
0x00000000004266c0 : je 0x4266d2 ; lea rax, qword ptr [rip + 0x17647] ; ret
0x0000000000426c74 : je 0x426c86 ; lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000429143 : je 0x42910d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042acd3 : je 0x42ac9d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042cd9a : je 0x42cdf1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042ce51 : je 0x42ce69 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000042f8c7 : je 0x42f8d1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043e3fd : je 0x43e3c6 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e3d5 : je 0x43e3c8 ; movzx eax, cl ; pop rbx ; ret
0x000000000043e3fd : je 0x43e3c8 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e50e : je 0x43e51c ; xor eax, eax ; ret
0x000000000043e509 : je 0x43e529 ; cmp eax, 2 ; je 0x43e521 ; xor eax, eax ; ret
0x000000000043e55d : je 0x43e543 ; ret
0x000000000043e648 : je 0x43e658 ; mov edi, 0x6cc0c0 ; call rax
0x000000000043e660 : je 0x43e670 ; mov edi, 0x6cc0c0 ; call rax
0x000000000043e9c0 : je 0x43e9a1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043f3c8 : je 0x43f41d ; add byte ptr [rax], al ; ret
0x000000000043fd8a : je 0x43fd91 ; ret
0x0000000000440068 : je 0x440050 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004410d0 : je 0x4410e2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000442839 : je 0x44283e ; ret
0x000000000044289d : je 0x4428a2 ; ret
0x0000000000443e33 : je 0x443e43 ; mov edi, 0x6caae0 ; call rax
0x0000000000443fc1 : je 0x443fd1 ; mov edi, 0x6caae0 ; call rax
0x0000000000444148 : je 0x444152 ; ret
0x0000000000444164 : je 0x444179 ; mov dword ptr [rip + 0x2857ec], edx ; pop rbx ; ret
0x0000000000444957 : je 0x444983 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000448a54 : je 0x448a83 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000044d3f8 : je 0x44d403 ; pop rbx ; ret
0x000000000044d3f3 : je 0x44d408 ; cmp esi, 3 ; je 0x44d408 ; pop rbx ; ret
0x000000000044d980 : je 0x44d990 ; mov edi, 0x6cc0c0 ; call rax
0x000000000044d9af : je 0x44d9c7 ; mov edi, 0x6cc0c0 ; call rax
0x000000000044dab0 : je 0x44dab6 ; call rax
0x000000000044db0f : je 0x44db1f ; mov edi, 0x6cc0c0 ; call rax
0x000000000044dc88 : je 0x44dc9f ; mov edi, 0x6cc0c0 ; call rax
0x000000000044df68 : je 0x44df78 ; mov edi, 0x6cc0c0 ; call rax
0x000000000044e06c : je 0x44e072 ; call rax
0x000000000044ef2b : je 0x44ef31 ; call rax
0x000000000044f4eb : je 0x44f4f3 ; ret
0x0000000000450ac2 : je 0x450aef ; and byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000462e28 : je 0x462e52 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000463ab6 : je 0x463b06 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000463ab5 : je 0x463b07 ; add esp, 0x20 ; pop rbx ; ret
0x000000000046489c : je 0x4648a2 ; ret
0x00000000004648ca : je 0x46492c ; pop rbp ; pop r12 ; ret
0x000000000046496f : je 0x4649d1 ; pop rbp ; pop r12 ; ret
0x0000000000464aad : je 0x464ab8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000464af1 : je 0x464afc ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004656cc : je 0x4656f5 ; bsf rax, rdx ; ret
0x00000000004656cc : je 0x4656f6 ; bsf rax, rdx ; ret
0x000000000046565c : je 0x465709 ; bsf rax, rdx ; ret
0x0000000000466649 : je 0x466669 ; mov cl, dl ; and cl, 0xf ; je 0x466679 ; ret
0x0000000000466650 : je 0x466672 ; ret
0x0000000000466665 : je 0x466686 ; add rax, 2 ; ret
0x00000000004669eb : je 0x466a14 ; call rbx
0x0000000000466a93 : je 0x466abc ; call rbx
0x0000000000466be0 : je 0x466c0f ; and byte ptr [rbp - 0x73], cl ; jl 0x466b77 ; add al, 0xe8 ; ret
0x0000000000466e78 : je 0x466e85 ; test edx, edx ; jne 0x466e77 ; ret
0x0000000000466e77 : je 0x466e86 ; test edx, edx ; jne 0x466e78 ; ret
0x000000000046b0d5 : je 0x46b0c4 ; ret
0x000000000046dbba : je 0x46db44 ; sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x0000000000470cc4 : je 0x470cd4 ; mov edi, 0x6caaa0 ; call rax
0x0000000000474cb8 : je 0x474cc8 ; mov edi, 0x6caae0 ; call rax
0x0000000000474ce0 : je 0x474cf0 ; mov edi, 0x6caae0 ; call rax
0x0000000000474d56 : je 0x474d66 ; mov edi, 0x6caae0 ; call rax
0x000000000047627b : je 0x47628f ; mov rdi, qword ptr [rbp - 0x88] ; call rax
0x000000000047629e : je 0x4762ea ; shl rdx, 5 ; add rdx, rax ; jmp 0x4762c1
0x000000000047686c : je 0x476891 ; pop rbx ; mov edi, 0x6caae0 ; jmp rax
0x0000000000476823 : je 0x476897 ; mov edi, 0x6caae0 ; call rax
0x0000000000476887 : je 0x4768f0 ; pop rbx ; ret
0x00000000004769c4 : je 0x4769cb ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000476bbf : je 0x476bc6 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004781de : je 0x4781a9 ; mov edi, 0x6caae0 ; call rax
0x00000000004781bf : je 0x4781ed ; or byte ptr [rdi + 0x6caae0], bh ; call rax
0x0000000000478326 : je 0x478332 ; ret
0x000000000047833c : je 0x47834c ; mov edi, 0x6caae0 ; call rax
0x000000000047a78a : je 0x47a795 ; mov eax, edx ; pop rbx ; ret
0x000000000047b082 : je 0x47b096 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047bcec : je 0x47bd1b ; js 0x47bd41 ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047e758 : je 0x47e768 ; mov edi, 0x6caae0 ; call rax
0x000000000047e784 : je 0x47e794 ; mov edi, 0x6caae0 ; call rax
0x000000000047ea2a : je 0x47ea3e ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000048775b : je 0x4876e8 ; ret 0x348
0x0000000000487edb : je 0x487eeb ; mov edi, 0x6caae0 ; call rax
0x0000000000487f02 : je 0x487f12 ; mov edi, 0x6caae0 ; call rax
0x0000000000487f81 : je 0x487f91 ; mov edi, 0x6caae0 ; call rax
0x0000000000487faa : je 0x487fba ; mov edi, 0x6caae0 ; call rax
0x00000000004940e3 : je 0x4940ad ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496093 : je 0x49605d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000499ec5 : je 0x499ea3 ; ret
0x000000000049c218 : je 0x49c202 ; add rsp, 0x18 ; ret
0x000000000049c201 : je 0x49c226 ; add rsp, 0x18 ; ret
0x000000000049c2a8 : je 0x49c288 ; ret
0x000000000049c2e9 : je 0x49c2f6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000049e5da : je 0x49e5e3 ; ret
0x000000000049e613 : je 0x49e624 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e629 ; ret
0x000000000049e6ea : je 0x49e6f3 ; ret
0x000000000049eefa : je 0x49ef0a ; mov edi, 0x6caaa0 ; call rax
0x000000000049efbb : je 0x49efcb ; mov edi, 0x6caaa0 ; call rax
0x00000000004a0c5e : je 0x4a0c69 ; call rax
0x00000000004b9ae8 : je 0x4b9ab3 ; xor al, 0xd8 ; ret
0x00000000004b9d27 : je 0x4b9d24 ; jmp 0x4b9cfe
0x00000000004ba822 : je 0x4ba7ea ; ret 0xacfc
0x00000000004bf5da : je 0x4bf5e8 ; ret
0x00000000004c4274 : je 0x4c42d6 ; add byte ptr [rax], al ; test al, 0xb2 ; clc ; call qword ptr [rdi]
0x00000000004c5d1d : je 0x4c5d25 ; add byte ptr [rax + 0x1c], dl ; cli ; jmp rdi
0x0000000000426742 : jg 0x426794 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000426867 : jg 0x426880 ; jne 0x426857 ; mov rax, rdi ; ret
0x000000000042c2c7 : jg 0x42c2de ; jne 0x42c2b5 ; ret
0x0000000000431da9 : jg 0x431dfc ; ret
0x0000000000431e2f : jg 0x431e7a ; ret
0x0000000000431fa9 : jg 0x431ffc ; ret 0x894c
0x000000000043202f : jg 0x43207a ; ret 0x894c
0x00000000004327c0 : jg 0x43283c ; loopne 0x432791 ; jp 0x43284d ; jp 0x4327c0 ; ret
0x000000000043286c : jg 0x43287d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000004348b8 : jg 0x434909 ; loope 0x4348b7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043492f : jg 0x43497a ; ret 0xff2
0x0000000000434948 : jg 0x434999 ; loop 0x434947 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349bf : jg 0x434a0a ; ret
0x00000000004349d8 : jg 0x434a29 ; jrcxz 0x4349d7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434a68 : jg 0x434ab9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ae8 : jg 0x434b39 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b68 : jg 0x434bb9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434be8 : jg 0x434c39 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c68 : jg 0x434cb9 ; call 0x4fc25c6a
0x0000000000434ce8 : jg 0x434d39 ; jmp 0x4fc25cea
0x0000000000434e68 : jg 0x434eb9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ee8 : jg 0x434f39 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f78 : jg 0x434fc9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ff8 : jg 0x435049 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043506c : jg 0x435077 ; ret
0x00000000004350c6 : jg 0x4350d9 ; ret
0x00000000004350c1 : jg 0x435111 ; psllq mm1, qword ptr [rdi] ; jg 0x4350de ; ret
0x0000000000435136 : jg 0x435149 ; ret
0x00000000004351a6 : jg 0x4351b9 ; ret
0x00000000004351a1 : jg 0x4351f1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000435216 : jg 0x435229 ; ret
0x0000000000435211 : jg 0x435261 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435286 : jg 0x435299 ; ret
0x0000000000435281 : jg 0x4352d1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352f6 : jg 0x435309 ; ret
0x00000000004352f1 : jg 0x435341 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435366 : jg 0x435379 ; ret
0x0000000000435361 : jg 0x4353b1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004353d6 : jg 0x4353e9 ; ret
0x00000000004353d1 : jg 0x435421 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435446 : jg 0x435459 ; ret
0x00000000004354b6 : jg 0x4354c9 ; ret
0x0000000000435526 : jg 0x435539 ; ret
0x0000000000435521 : jg 0x435571 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435596 : jg 0x4355a9 ; ret
0x0000000000435591 : jg 0x4355e1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435606 : jg 0x435619 ; ret
0x0000000000435601 : jg 0x435651 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435676 : jg 0x435689 ; ret
0x0000000000435671 : jg 0x4356c1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004356e6 : jg 0x4356f9 ; ret
0x00000000004356e1 : jg 0x435731 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435824 : jg 0x435835 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000435838 : jg 0x435849 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000435caa : jg 0x435ca6 ; ret
0x000000000043b3b6 : jg 0x43b3c1 ; ret
0x000000000043b3c6 : jg 0x43b3d4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b3da : jg 0x43b3e9 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b3f9 : jg 0x43b407 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b409 : jg 0x43b417 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b419 : jg 0x43b42a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b43a : jg 0x43b449 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b45a : jg 0x43b469 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b47a : jg 0x43b489 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b49a : jg 0x43b4ac ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b4dd : jg 0x43b4ef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4fd : jg 0x43b50f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b51b : jg 0x43b52b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b53b : jg 0x43b54b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b55b : jg 0x43b56b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043b57b : jg 0x43b58b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043ba46 : jg 0x43ba55 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043ba56 : jg 0x43ba68 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043ba89 : jg 0x43ba9b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043baa9 : jg 0x43babb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bbcf : jg 0x43bc2f ; or eax, 0x1c478d48 ; ret
0x000000000043dc42 : jg 0x43dc52 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043dce3 : jg 0x43dd34 ; loopne 0x43dd38 ; sub eax, edx ; vzeroupper ; ret
0x000000000043ddc7 : jg 0x43ddd7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043ddbd : jg 0x43dddd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043e390 : jg 0x43e3cd ; ret 0x2b77
0x000000000044045d : jg 0x440442 ; std ; dec dword ptr [rax - 0x75] ; jge 0x44046d ; call rbx
0x0000000000449b6f : jg 0x449afc ; ret 0x5c77
0x000000000047349d : jg 0x473469 ; std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x0000000000476e09 : jg 0x476e37 ; call r11
0x00000000004773f9 : jg 0x477427 ; call r11
0x0000000000477795 : jg 0x4777c3 ; call r11
0x000000000047f191 : jg 0x47f197 ; add byte ptr [rcx], bh ; ret
0x00000000004918a4 : jg 0x4918b1 ; ret 0x5488
0x000000000040df9e : jge 0x40dfa3 ; call r14
0x000000000044007b : jge 0x44007f ; call rbx
0x00000000004401a2 : jge 0x4401a6 ; call rbx
0x00000000004401b0 : jge 0x4401b4 ; call rbx
0x00000000004402e5 : jge 0x4402e9 ; call rbx
0x0000000000440455 : jge 0x440459 ; call rbx
0x0000000000440463 : jge 0x440467 ; call rbx
0x00000000004408b6 : jge 0x440881 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000441c73 : jge 0x441c77 ; call rbx
0x0000000000441d9b : jge 0x441d9f ; call rbx
0x0000000000441ede : jge 0x441ee2 ; call rbx
0x0000000000441fdf : jge 0x441fe3 ; call rbx
0x0000000000441ffb : jge 0x441fff ; call rbx
0x0000000000453c74 : jge 0x453cab ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004663f4 : jge 0x4663f6 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000466826 : jge 0x46682b ; call r12
0x0000000000469e6f : jge 0x469e9b ; add byte ptr es:[rax - 0x7d], cl ; ret
0x000000000049c662 : jge 0x49c65f ; leave ; ret
0x000000000049c7e0 : jge 0x49c7e3 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049c92c : jge 0x49c929 ; leave ; ret
0x000000000049c978 : jge 0x49c97b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049cb07 : jge 0x49cb0a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049cc67 : jge 0x49cc64 ; leave ; ret
0x000000000049ccb8 : jge 0x49ccbb ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049f260 : jge 0x49f275 ; call r12
0x00000000004a38a9 : jge 0x4a38a9 ; call qword ptr [rax - 0x1f000782]
0x00000000004a38a8 : jge 0x4a38aa ; call qword ptr [rax - 0x1f000782]
0x0000000000400b78 : jl 0x400ba2 ; or al, 0x41 ; call rsp
0x0000000000400bcc : jl 0x400bfa ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000413f2b : jl 0x413f76 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041b215 : jl 0x41b240 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x000000000041b34c : jl 0x41b377 ; or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004357a4 : jl 0x4357f3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004357e0 : jl 0x43582f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004359de : jl 0x435a2d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435b45 : jl 0x435b94 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000435ca7 : jl 0x435cf6 ; adc dword ptr [rdi - 8], edi ; ret
0x000000000043dd7c : jl 0x43ddcb ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dd9d : jl 0x43ddec ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043ddb0 : jl 0x43ddff ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043de85 : jl 0x43ded4 ; adc dword ptr [rsi - 1], edx ; ret
0x000000000043dedd : jl 0x43df2c ; adc dword ptr [rsi + 3], edx ; ret
0x000000000043df7a : jl 0x43dfc9 ; adc dword ptr [rsi + 7], edx ; ret
0x000000000043f4d4 : jl 0x43f500 ; test al, 2 ; cmove eax, edx ; ret
0x000000000043f4d4 : jl 0x43f501 ; test al, 2 ; cmove eax, edx ; ret
0x0000000000440510 : jl 0x44053e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000441c60 : jl 0x441c2c ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000447326 : jl 0x447354 ; adc byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x0000000000447c89 : jl 0x447cb7 ; adc byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044806f : jl 0x44809d ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000448a59 : jl 0x448a83 ; call r15
0x0000000000448e00 : jl 0x448e2e ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000449b19 : jl 0x449b47 ; xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x000000000044aa25 : jl 0x44aa53 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000044cfd8 : jl 0x44d003 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x000000000044fac2 : jl 0x44faed ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000004527cc : jl 0x4527f7 ; and byte ptr [rax + 1], cl ; ret
0x0000000000458e68 : jl 0x458e32 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000045ca4c : jl 0x45ca77 ; and byte ptr [rax + 1], cl ; ret
0x0000000000464815 : jl 0x4647b1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000466be5 : jl 0x466b72 ; add al, 0xe8 ; ret
0x00000000004734a9 : jl 0x4734d8 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047b81d : jl 0x47b847 ; js 0x47b866 ; call rsp
0x000000000047bb32 : jl 0x47bb5c ; js 0x47bb7b ; call rsp
0x000000000047bcf1 : jl 0x47bd1b ; js 0x47bd3a ; call rsp
0x000000000047bef9 : jl 0x47bf23 ; js 0x47bf42 ; call rsp
0x00000000004c157c : jl 0x4c15b1 ; add byte ptr [rax], al ; and ah, cl ; cmc ; call rdx
0x00000000004c957c : jl 0x4c9531 ; add byte ptr [rax], al ; jo 0x4c95d9 ; std ; call qword ptr [rdx]
0x00000000004238fe : jle 0x423907 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004238fe : jle 0x423908 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000044d442 : jle 0x44d455 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000047c88d : jle 0x47c89b ; ret
0x00000000004a38ad : jle 0x4a38a9 ; jmp rax
0x00000000004be25d : jle 0x4be25e ; jmp rax
0x000000000040075d : jmp 0x400722
0x0000000000400fc1 : jmp 0x400f21
0x0000000000402052 : jmp 0x402068
0x00000000004117c3 : jmp 0x4116cb
0x000000000041adcd : jmp 0x41a2dc
0x000000000041adde : jmp 0x41abf9
0x000000000041de01 : jmp 0x41de2c
0x0000000000421384 : jmp 0x42134a
0x00000000004214d8 : jmp 0x42149d
0x000000000042ceac : jmp 0x42ce72
0x000000000042cff8 : jmp 0x42cfbd
0x000000000043d98e : jmp 0x43d954
0x000000000043da5f : jmp 0x43da25
0x000000000043dace : jmp 0x43da94
0x000000000043f5e3 : jmp 0x43f556
0x000000000043fe83 : jmp 0x43fe26
0x0000000000443c7c : jmp 0x44375f
0x00000000004457f3 : jmp 0x4457b9
0x0000000000445c6e : jmp 0x445c33
0x000000000044f42f : jmp 0x44f051
0x00000000004502c1 : jmp 0x4502cb
0x0000000000456ab3 : jmp 0x456a8f
0x000000000045c252 : jmp 0x45c27b
0x0000000000462644 : jmp 0x462609
0x0000000000462643 : jmp 0x46260a
0x0000000000464ddb : jmp 0x464da1
0x0000000000464dda : jmp 0x464da2
0x0000000000465eeb : jmp 0x465d41
0x0000000000469fab : jmp 0x469f70
0x000000000046a8a0 : jmp 0x46a866
0x000000000046d74b : jmp 0x46d711
0x000000000046e7f0 : jmp 0x46e4c1
0x000000000047a3d2 : jmp 0x47a424
0x000000000047ae2e : jmp 0x47ad97
0x000000000047d53c : jmp 0x47d54e
0x000000000047c8a5 : jmp 0x47f06b
0x000000000047fee2 : jmp 0x47ff34
0x0000000000480b74 : jmp 0x480b39
0x00000000004838d5 : jmp 0x48389a
0x00000000004853fb : jmp 0x4853c0
0x00000000004870da : jmp 0x48709f
0x000000000049da2e : jmp 0x49da44
0x000000000049fd14 : jmp 0x49fd63
0x00000000004b8fea : jmp 0x4b9029
0x00000000004b9d29 : jmp 0x4b9cfc
0x00000000004bad20 : jmp 0x4bacb4
0x00000000004bad1f : jmp 0x4bacb5
0x00000000004bcb68 : jmp 0x4bcb2d
0x0000000000434cea : jmp 0x4fc25ce8
0x0000000000434ce9 : jmp 0x4fc25ce9
0x00000000004692bb : jmp 0xffffffffbf091c0b
0x0000000000478f41 : jmp 0xffffffffc3571896
0x00000000004a40d3 : jmp qword ptr [rax + 0x20fff910]
0x00000000004a39ab : jmp qword ptr [rax - 0x3f000761]
0x000000000041cc19 : jmp qword ptr [rax]
0x00000000004834fe : jmp qword ptr [rbx + rcx*4 + 1]
0x00000000004be843 : jmp qword ptr [rbx]
0x00000000004c03bb : jmp qword ptr [rcx]
0x00000000004bb5e4 : jmp qword ptr [rdi]
0x00000000004a3dbf : jmp qword ptr [rdx]
0x00000000004a3a7f : jmp qword ptr [rsi + 0x36fff8be]
0x000000000047e269 : jmp qword ptr [rsi + 0xf]
0x000000000045c1f6 : jmp qword ptr [rsi]
0x00000000004215b9 : jmp r10
0x0000000000476a71 : jmp r11
0x000000000042fbb0 : jmp r9
0x00000000004a39b3 : jmp rax
0x0000000000476a72 : jmp rbx
0x000000000042053e : jmp rcx
0x00000000004c5d23 : jmp rdi
0x00000000004215ba : jmp rdx
0x00000000004a3d4b : jmp rsi
0x00000000004a3e77 : jmp rsp
0x000000000040057b : jne 0x400580 ; ret
0x000000000040db24 : jne 0x40db02 ; ret
0x000000000040fa8b : jne 0x40faa1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410c3c : jne 0x410c43 ; pop rbx ; ret
0x0000000000413405 : jne 0x413412 ; ret
0x0000000000414b81 : jne 0x414b73 ; ret
0x0000000000415891 : jne 0x4158a8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000415be2 : jne 0x415bcd ; pop rbx ; ret
0x0000000000415c1c : jne 0x415c15 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004164d6 : jne 0x4164cb ; ret
0x000000000041daa0 : jne 0x41da63 ; ret
0x000000000041ddff : jne 0x41de14 ; jmp 0x41de2e
0x0000000000421524 : jne 0x421536 ; lea rax, qword ptr [rip + 3] ; ret
0x0000000000426029 : jne 0x426085 ; xor rax, rax ; ret
0x0000000000425fe9 : jne 0x4260a9 ; xor rax, rax ; ret
0x00000000004260ca : jne 0x4260dd ; lea rax, qword ptr [rip + 0x1d] ; ret
0x00000000004267aa : jne 0x426793 ; ret
0x0000000000426913 : jne 0x4267ff ; mov rax, rdi ; ret
0x0000000000426869 : jne 0x426855 ; mov rax, rdi ; ret
0x0000000000426d90 : jne 0x426da2 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000426de3 : jne 0x426df5 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000042c388 : jne 0x42c260 ; ret
0x000000000042c2c9 : jne 0x42c2b3 ; ret
0x000000000042e51c : jne 0x42e506 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042fb0d : jne 0x42fb37 ; xor eax, eax ; ret
0x000000000042f101 : jne 0x42fb3b ; xor eax, eax ; ret
0x000000000042f129 : jne 0x42fb47 ; xor eax, eax ; ret
0x000000000043bd35 : jne 0x43bcc6 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bd07 : jne 0x43bcc6 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bd06 : jne 0x43bcc7 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043d494 : jne 0x43d6a8 ; xor eax, eax ; ret
0x000000000043d699 : jne 0x43d6b9 ; xor eax, eax ; ret
0x000000000043d541 : jne 0x43d6bd ; xor eax, eax ; ret
0x000000000043d6b1 : jne 0x43d6be ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000043d7c1 : jne 0x43d7b2 ; ret
0x000000000043d871 : jne 0x43d862 ; ret
0x000000000043d9e1 : jne 0x43d9d6 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000043db31 : jne 0x43db26 ; sub rax, 1 ; ret
0x0000000000440828 : jne 0x440810 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044262a : jne 0x442628 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000044269a : jne 0x442698 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x00000000004427e2 : jne 0x4427d9 ; pop rdx ; pop r10 ; ret
0x00000000004429b3 : jne 0x4429ad ; xor eax, eax ; leave ; ret
0x0000000000445c6c : jne 0x445c43 ; jmp 0x445c35
0x000000000044e385 : jne 0x44e38a ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004520e1 : jne 0x4520cd ; mov rax, rsi ; ret
0x0000000000452165 : jne 0x452145 ; mov rax, rsi ; ret
0x000000000045c250 : jne 0x45c263 ; jmp 0x45c27d
0x00000000004639f1 : jne 0x4639e3 ; ret
0x00000000004655c3 : jne 0x4655ce ; xor rax, rax ; ret
0x0000000000466795 : jne 0x4667a2 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466e3b : jne 0x466df6 ; mov rax, rdx ; ret
0x0000000000466e7c : jne 0x466e73 ; ret
0x000000000046b113 : jne 0x46b0c5 ; xor eax, eax ; ret
0x000000000046b0c7 : jne 0x46b11b ; ret
0x000000000046b10f : jne 0x46b11d ; test ecx, ecx ; jne 0x46b0c9 ; xor eax, eax ; ret
0x0000000000473e4a : jne 0x473df0 ; mov eax, dword ptr [rsi + 4] ; ret
0x0000000000473e38 : jne 0x473e13 ; ret
0x0000000000473f57 : jne 0x473f6a ; mov rax, qword ptr [rip + 0x2587b0] ; ret
0x0000000000473fa0 : jne 0x473f73 ; ret
0x00000000004767b6 : jne 0x4767f3 ; ret
0x00000000004767b5 : jne 0x4767f4 ; ret
0x0000000000478603 : jne 0x478616 ; add rsp, 0x38 ; ret
0x00000000004786a5 : jne 0x4786b8 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047877d : jne 0x4787c0 ; xor eax, eax ; add rsp, 0x68 ; ret
0x0000000000478835 : jne 0x478848 ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047aa00 : jne 0x47aa16 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e1b8 : jne 0x47e175 ; nop word ptr [rax + rax] ; call rbx
0x0000000000491900 : jne 0x491912 ; lea rax, qword ptr [rip + 0x67] ; ret
0x0000000000491953 : jne 0x491965 ; lea rax, qword ptr [rip + 4] ; ret
0x000000000049a079 : jne 0x49a09c ; xor eax, eax ; ret
0x000000000049a061 : jne 0x49a0a1 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000049c290 : jne 0x49c2b1 ; mov rax, qword ptr [rax] ; ret
0x000000000049c2ff : jne 0x49c30a ; mov qword ptr [rax], rdx ; ret
0x000000000049c65e : jne 0x49c657 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c928 : jne 0x49c921 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049cc63 : jne 0x49cc5c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049d1b4 : jne 0x49d1d3 ; ret
0x000000000049d1d4 : jne 0x49d1ec ; mov eax, 8 ; ret
0x000000000049d1ff : jne 0x49d22e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049d219 : jne 0x49d232 ; xor eax, eax ; ret
0x000000000049e05f : jne 0x49e08e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049e079 : jne 0x49e092 ; xor eax, eax ; ret
0x000000000049e619 : jne 0x49e623 ; ret
0x000000000049e634 : jne 0x49e643 ; ret
0x000000000049e864 : jne 0x49e873 ; ret
0x000000000049eae9 : jne 0x49eb0c ; xor eax, eax ; ret
0x000000000049f085 : jne 0x49f073 ; pop rbx ; ret
0x000000000049f0d0 : jne 0x49f0b0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000049f1f5 : jne 0x49f1db ; pop rbx ; ret
0x00000000004be20d : jne 0x4be20e ; jmp qword ptr [rax]
0x00000000004be20c : jne 0x4be20f ; jmp qword ptr [rax]
0x00000000004260eb : jno 0x42614f ; add dword ptr [rax], eax ; ret
0x000000000042f3be : jno 0x42f3cd ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004357a0 : jno 0x4357a9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004359da : jno 0x4359e3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000435b41 : jno 0x435b52 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000435ca6 : jno 0x435d2a ; adc qword ptr [rdi - 8], rdi ; ret
0x000000000044046b : jno 0x440450 ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000466793 : jno 0x4667a2 ; jne 0x4667a4 ; mov dword ptr [r9 + 8], esi ; ret
0x0000000000466799 : jno 0x4667a6 ; ret
0x0000000000478e34 : jno 0x478e86 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a4225 : jno 0x4a4222 ; call qword ptr [rax]
0x00000000004a4229 : jno 0x4a4226 ; jmp qword ptr [rax]
0x00000000004a4251 : jno 0x4a4252 ; inc eax ; jno 0x4a4256 ; jmp rax
0x00000000004a4255 : jno 0x4a4252 ; jmp rax
0x00000000004a425d : jno 0x4a425e ; inc dword ptr [rax] ; jb 0x4a4262 ; jmp qword ptr [rax]
0x00000000004b9805 : jnp 0x4b97c2 ; ret
0x0000000000400757 : jns 0x40064b ; jmp 0x400728
0x00000000004357a7 : jns 0x4357aa ; ret
0x00000000004359e1 : jns 0x4359e4 ; ret
0x0000000000435b48 : jns 0x435b53 ; ret
0x000000000046f3ac : jns 0x46f3ba ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8545
0x0000000000499f4e : jns 0x499f5b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000049c1fe : jns 0x49c241 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049cf6e : jns 0x49cf7b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000049eb6e : jns 0x49eb7b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004b890e : jns 0x4b88a4 ; ret 0xf869
0x00000000004b890d : jns 0x4b88a5 ; ret 0xf869
0x00000000004bad1e : jns 0x4bad75 ; jmp 0x4bacb6
0x00000000004be215 : jns 0x4be216 ; jmp rax
0x0000000000413284 : jo 0x4132d5 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463a6a : jo 0x463a82 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000466f8c : jo 0x466fa0 ; xchg eax, ebp ; ret 0x8b4c
0x000000000047a6da : jo 0x47a667 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047a6d9 : jo 0x47a668 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000004a3850 : jo 0x4a38af ; clc ; call qword ptr [rax]
0x00000000004a3870 : jo 0x4a38dc ; clc ; call qword ptr [rax]
0x00000000004a3c48 : jo 0x4a3c35 ; clc ; push qword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a3c4c : jo 0x4a3c37 ; clc ; jmp qword ptr [rax]
0x00000000004a3c88 : jo 0x4a3c68 ; clc ; inc eax ; salc ; clc ; inc dword ptr [rax] ; ret 0xfff8
0x00000000004a3f40 : jo 0x4a3f50 ; stc ; jmp rax
0x00000000004a4144 : jo 0x4a4153 ; stc ; jmp rax
0x00000000004a4215 : jo 0x4a4212 ; call rax
0x00000000004a4211 : jo 0x4a4212 ; inc eax ; jo 0x4a4216 ; call rax
0x00000000004a4219 : jo 0x4a4216 ; jmp rax
0x00000000004a4221 : jo 0x4a4222 ; inc dword ptr [rax] ; jno 0x4a4226 ; call qword ptr [rax]
0x00000000004b9984 : jo 0x4b99fe ; mov ebp, 0xfb67d10d ; ret
0x00000000004be1e8 : jo 0x4be255 ; std ; inc dword ptr [rax + 0x66] ; std ; jmp qword ptr [rax]
0x00000000004be274 : jo 0x4be2c2 ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004c1d10 : jo 0x4c1d50 ; idiv bh ; ret
0x00000000004c1f59 : jo 0x4c1f53 ; call qword ptr [rax]
0x00000000004c9580 : jo 0x4c95d5 ; std ; call qword ptr [rdx]
0x00000000004267f5 : jp 0x4267ef ; ret 0x7401
0x00000000004327c6 : jp 0x4327ba ; ret
0x0000000000432829 : jp 0x43281d ; ret
0x00000000004327bf : jp 0x432849 ; jb 0x4327ac ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x00000000004327c4 : jp 0x432849 ; jp 0x4327bc ; ret
0x0000000000464dd9 : jp 0x464e1e ; jmp 0x464da3
0x000000000047b55e : jp 0x47b573 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004885d5 : jp 0x4885de ; dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000004be219 : jp 0x4be21a ; call qword ptr [rax]
0x00000000004c4bc1 : jp 0x4c4bbe ; call rdx
0x00000000004c63f5 : jp 0x4c63fd ; add byte ptr [rax + 0x4c], bh ; cli ; jmp rsp
0x00000000004054a9 : jrcxz 0x4054b1 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405539 : jrcxz 0x405541 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405538 : jrcxz 0x405542 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041dbcc : jrcxz 0x41dc00 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004349da : jrcxz 0x4349d5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004349d9 : jrcxz 0x4349d6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000442833 : jrcxz 0x4427f8 ; cmp r11d, 0xa ; je 0x442844 ; ret
0x000000000045b2b6 : jrcxz 0x45b32f ; ret
0x000000000045d2c8 : jrcxz 0x45d2c2 ; ret 0xf40
0x00000000004a37a1 : jrcxz 0x4a379c ; call qword ptr [rax]
0x00000000004b8765 : jrcxz 0x4b87bf ; ret
0x00000000004098d6 : js 0x4098f0 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x00000000004098e7 : js 0x4098f9 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x00000000004098fd : js 0x40991f ; mov qword ptr [rsp], rax ; call 0x405bd8
0x000000000040990e : js 0x409928 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x000000000040991f : js 0x409931 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x0000000000409935 : js 0x409957 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x0000000000409946 : js 0x409960 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x0000000000409957 : js 0x409969 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x000000000040996d : js 0x40998f ; mov qword ptr [rsp], rax ; call 0x405bd8
0x000000000040997e : js 0x409998 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x000000000040998f : js 0x4099a1 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x00000000004099a5 : js 0x4099c7 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x00000000004099b6 : js 0x4099d0 ; mov qword ptr [rsp], rax ; call 0x405bd8
0x000000000044262f : js 0x44268f ; pop rbp ; ret
0x000000000044269f : js 0x4426ff ; pop rbp ; ret
0x00000000004484ce : js 0x44851f ; mov edi, dword ptr [rsp + 0x28] ; call r14
0x000000000044b0b8 : js 0x44b109 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x000000000044bf18 : js 0x44bf69 ; mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000471292 : js 0x47129b ; pop rbx ; ret
0x000000000047a6dd : js 0x47a6eb ; ret
0x000000000047b81f : js 0x47b864 ; call rsp
0x000000000047bb34 : js 0x47bb79 ; call rsp
0x000000000047bcb3 : js 0x47bcf8 ; call rsp
0x000000000047bcf3 : js 0x47bd38 ; call rsp
0x000000000047bcee : js 0x47bd3f ; lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047beb6 : js 0x47befb ; call rsp
0x000000000047befb : js 0x47bf40 ; call rsp
0x000000000049c4b6 : js 0x49c4c3 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000049c4c3 : js 0x49c4cf ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004a42f1 : js 0x4a42ee ; call rax
0x00000000004a42f9 : js 0x4a42f6 ; call qword ptr [rax]
0x00000000004a42f5 : js 0x4a42f6 ; push rax ; js 0x4a42fa ; call qword ptr [rax]
0x00000000004c0ba8 : js 0x4c0c0f ; cmc ; call qword ptr [rsi]
0x00000000004c4ac1 : js 0x4c4abe ; call rdi
0x00000000004c63f8 : js 0x4c6449 ; cli ; jmp rsp
0x00000000004c6649 : js 0x4c6647 ; call rax
0x00000000004c72a8 : js 0x4c72b2 ; sti ; jmp rsi
0x00000000004c8308 : js 0x4c8308 ; sti ; jmp qword ptr [rax]
0x00000000004c85c8 : js 0x4c85d0 ; cld ; call qword ptr [rdx]
0x00000000004c85f8 : js 0x4c8600 ; cld ; call qword ptr [rdx]
0x00000000004c8628 : js 0x4c8630 ; cld ; call qword ptr [rdx]
0x000000000041fd9d : lahf ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000045c88a : lahf ; cld ; dec dword ptr [rax - 0x39] ; ret 0xffb0
0x00000000004bae43 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000473e4b : lahf ; mov eax, dword ptr [rsi + 4] ; ret
0x000000000042b92d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000440588 : lahf ; ret
0x0000000000485e3c : lahf ; ret 0x2941
0x000000000040fcde : lahf ; ret 0x3841
0x000000000044058e : lahf ; ret 0x3845
0x00000000004b869d : lahf ; ret 0x871e
0x0000000000484011 : lahf ; ret 0xb60f
0x0000000000486aa8 : lahf ; ret 0xd129
0x0000000000486b1f : lahf ; ret 0xd629
0x0000000000486a31 : lahf ; ret 0xd729
0x000000000043e389 : lahf ; ret 0xea81
0x000000000049b871 : lahf ; ret 0xf45
0x00000000004113fd : lahf ; sub eax, 0x29480005 ; ret
0x000000000042bfbd : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004110e3 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000048829a : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044cb73 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000451992 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000410f2d : lcall ptr [rbx + 0x5d] ; ret
0x00000000004748d6 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x0000000000420013 : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004a3acb : lcall ptr [rbx - 0x40] ; clc ; jmp rax
0x00000000004a3f8b : lcall ptr [rcx + rcx + 0x92cfff9] ; stc ; call rdx
0x0000000000435066 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000413614 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000415c2b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000046b13b : lea eax, dword ptr [rax + 0x493afe7e] ; cmove eax, ecx ; ret
0x0000000000499f6c : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000043feaf : lea eax, dword ptr [rax + rax] ; ret
0x0000000000426054 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x0000000000426064 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000426034 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000415c2c : lea eax, dword ptr [rax - 1] ; ret
0x00000000004c761d : lea eax, dword ptr [rax] ; add al, al ; adc bh, bl ; call qword ptr [rax]
0x00000000004659cd : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000043d9e4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043ba5c : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000043ba71 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043ba8f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043baaf : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000043bad2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000043baf1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000043bb11 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000043bb31 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000043bb54 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000043bb79 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000043bb97 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000043bbb7 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000043bbd3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000043bbf3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000043bc13 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000043bc33 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043b9ad : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000043b9cd : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000043b9ef : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000043ba0f : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043ba2f : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000043ba49 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000043b8f7 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000043b90a : lea eax, dword ptr [rdi + 2] ; ret
0x000000000043b915 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000043b928 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043b93d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043b95b : lea eax, dword ptr [rdi + 6] ; ret
0x000000000043b967 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043b97a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043b98f : lea eax, dword ptr [rdi + 9] ; ret
0x0000000000426089 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x0000000000426099 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x0000000000425f83 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce57 : lea eax, dword ptr [rdi + rax] ; ret
0x00000000004658c9 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000478148 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x478161 ; ret
0x000000000043b8e3 : lea eax, dword ptr [rdi] ; ret
0x000000000043aecd : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000043aeed : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000043af0f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000043af2f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000043af4f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000043addf : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000043ae07 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000043ae1d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000043ae35 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043ae4b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043ae5d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043ae7b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000043ad87 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043ae8d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043aead : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000415c1e : lea eax, dword ptr [rdx + rdi] ; ret
0x000000000043e45c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000043adf5 : lea eax, dword ptr [rdx] ; ret
0x0000000000426c77 : lea eax, dword ptr [rip + 0x12ad3] ; ret
0x0000000000423747 : lea eax, dword ptr [rip + 0x14853] ; ret
0x00000000004260e9 : lea eax, dword ptr [rip + 0x15e71] ; ret
0x00000000004266c3 : lea eax, dword ptr [rip + 0x17647] ; ret
0x00000000004212d4 : lea eax, dword ptr [rip + 0x1a966] ; ret
0x00000000004260cd : lea eax, dword ptr [rip + 0x1d] ; ret
0x0000000000426d93 : lea eax, dword ptr [rip + 0x67] ; ret
0x00000000004260e1 : lea eax, dword ptr [rip + 0x8449] ; ret
0x0000000000421527 : lea eax, dword ptr [rip + 3] ; ret
0x0000000000426de6 : lea eax, dword ptr [rip + 4] ; ret
0x00000000004c589d : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x000000000044c7b0 : lea eax, dword ptr [rsp + 0x88] ; call r15
0x000000000047beaf : lea ebx, dword ptr [rdx + rax] ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004b8f51 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004668d0 : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000469932 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0x469943
0x000000000042fc07 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000043b17e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000045296f : lea ecx, dword ptr [rbx + rdx] ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000463f51 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047a3d0 : lea ecx, dword ptr [rdx] ; jmp 0x47a426
0x000000000047fee0 : lea ecx, dword ptr [rdx] ; jmp 0x47ff36
0x000000000046aeb7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000464e87 : lea ecx, dword ptr [rsp + 0x10] ; call rbx
0x0000000000464f60 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004669e5 : lea ecx, dword ptr [rsp + 0x20] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000466d00 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000466bfe : lea ecx, dword ptr [rsp + 0x60] ; lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x000000000046f916 : lea edi, dword ptr [rax + 0x6cab80] ; call rdx
0x000000000040212c : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000040e01c : lea edi, dword ptr [rbx + rsi] ; call rax
0x0000000000426866 : lea edi, dword ptr [rdi + 0x10] ; jne 0x426858 ; mov rax, rdi ; ret
0x000000000042c2c6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x42c2b6 ; ret
0x000000000047b81c : lea edi, dword ptr [rsp + 0x78] ; call r12
0x000000000047bbc2 : lea edi, dword ptr [rsp + 0x80] ; call r12
0x000000000047b9cf : lea edi, dword ptr [rsp + 0x88] ; call r14
0x00000000004164db : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000465130 : lea edx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x000000000042fcd4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000464cdd : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004215b6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000004300c8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000463e91 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000464e82 : lea edx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466a8d : lea edx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004670f0 : lea edx, dword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c6d6 : lea edx, dword ptr [rsp + 0x80] ; call r12
0x0000000000485efc : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048cd35 : lea esi, dword ptr [rax*8 + 0x4b83e8] ; call 0x479009
0x000000000049cde1 : lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000466c03 : lea esi, dword ptr [rsp + 0x30] ; call rbx
0x00000000004668cb : lea esi, dword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004669ea : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x000000000046b25d : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000040f4f1 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004215b5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000049cde0 : lea r14, qword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000040e01b : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000044c7af : lea r8, qword ptr [rsp + 0x88] ; call r15
0x000000000042fc06 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000047a3cf : lea r9, qword ptr [rdx] ; jmp 0x47a427
0x000000000047fedf : lea r9, qword ptr [rdx] ; jmp 0x47ff37
0x0000000000464e86 : lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000464f5f : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000499f6b : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000426053 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000426063 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000426033 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004659cc : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000043d9e3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043ba5b : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043ba70 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043ba8e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043baae : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bad1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043baf0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043bb10 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043bb30 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043bb53 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043bb78 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bb96 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043bbb6 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043bbd2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043bbf2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043bc12 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043bc32 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b9ac : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b9cc : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b9ee : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000043ba0e : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043ba2e : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043ba48 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b8f6 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b909 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b914 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b927 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b93c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b95a : lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b966 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000043b979 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b98e : lea rax, qword ptr [rdi + 9] ; ret
0x0000000000426088 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426098 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000425f82 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042ce56 : lea rax, qword ptr [rdi + rax] ; ret
0x00000000004658c8 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000043b8e2 : lea rax, qword ptr [rdi] ; ret
0x000000000043aecc : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043aeec : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043af0e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043af2e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043af4e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043adde : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043ae06 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000043ae1c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000043ae34 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ae4a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043ae5c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043ae7a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000043ad86 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043ae8c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043aeac : lea rax, qword ptr [rdx + 9] ; ret
0x000000000043adf4 : lea rax, qword ptr [rdx] ; ret
0x0000000000426c76 : lea rax, qword ptr [rip + 0x12ad3] ; ret
0x0000000000423746 : lea rax, qword ptr [rip + 0x14853] ; ret
0x00000000004260e8 : lea rax, qword ptr [rip + 0x15e71] ; ret
0x00000000004266c2 : lea rax, qword ptr [rip + 0x17647] ; ret
0x00000000004212d3 : lea rax, qword ptr [rip + 0x1a966] ; ret
0x00000000004260cc : lea rax, qword ptr [rip + 0x1d] ; ret
0x0000000000426d92 : lea rax, qword ptr [rip + 0x67] ; ret
0x00000000004260e0 : lea rax, qword ptr [rip + 0x8449] ; ret
0x0000000000421526 : lea rax, qword ptr [rip + 3] ; ret
0x0000000000426de5 : lea rax, qword ptr [rip + 4] ; ret
0x000000000043b17d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004668cf : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000469931 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0x469944
0x000000000046aeb6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000046f915 : lea rdi, qword ptr [rax + 0x6cab80] ; call rdx
0x000000000040212b : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000426865 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x426859 ; mov rax, rdi ; ret
0x000000000042c2c5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x42c2b7 ; ret
0x000000000047b81b : lea rdi, qword ptr [rsp + 0x78] ; call r12
0x000000000047bbc1 : lea rdi, qword ptr [rsp + 0x80] ; call r12
0x000000000047b9ce : lea rdi, qword ptr [rsp + 0x88] ; call r14
0x000000000042fcd3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004300c7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000004670ef : lea rdx, qword ptr [rsp + 0x48] ; mov rdi, r12 ; call rbx
0x000000000044c6d5 : lea rdx, qword ptr [rsp + 0x80] ; call r12
0x0000000000466c02 : lea rsi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004668ca : lea rsi, qword ptr [rsp + 0x30] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004669e9 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x000000000046b25c : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000488126 : leave ; cmove rax, rdx ; ret
0x000000000043d7c0 : leave ; jne 0x43d7b3 ; ret
0x000000000043d870 : leave ; jne 0x43d863 ; ret
0x000000000043db30 : leave ; jne 0x43db27 ; sub rax, 1 ; ret
0x0000000000466e3a : leave ; jne 0x466df7 ; mov rax, rdx ; ret
0x000000000046b112 : leave ; jne 0x46b0c6 ; xor eax, eax ; ret
0x0000000000499f20 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004449e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000400988 : leave ; ret
0x00000000004c4221 : leave ; std ; call qword ptr [rbx]
0x0000000000413ff1 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x00000000004a3f8f : ljmp ptr [rcx + rcx] ; stc ; call rdx
0x00000000004be7ff : ljmp ptr [rdi - 0x182b0003] ; std ; jmp rsp
0x000000000040f950 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047a6c5 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e90e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047fd5f : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000423410 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047abda : lodsb al, byte ptr [rsi] ; add byte ptr [r15 + 0x6cc364], r15b ; call rdx
0x00000000004c34ac : lodsb al, byte ptr [rsi] ; add byte ptr [r8], al ; sub byte ptr [rbx], 0xf8 ; jmp rsp
0x000000000043d140 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004c957d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jo 0x4c95d8 ; std ; call qword ptr [rdx]
0x000000000048b63e : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047aa20 : lodsb al, byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047831f : lodsb al, byte ptr [rsi] ; mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x478339 ; ret
0x00000000004bb5dd : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004be800 : lodsb al, byte ptr [rsi] ; out -3, eax ; call rsp
0x00000000004c85ac : lodsb al, byte ptr [rsi] ; pushfq ; add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004bcbb8 : lodsb al, byte ptr [rsi] ; ret
0x00000000004008f9 : lodsb al, byte ptr [rsi] ; sub al, 0 ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000417dd0 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [r8] ; test rax, rax ; je 0x417de4 ; call rax
0x000000000046b114 : lodsb al, byte ptr [rsi] ; xor eax, eax ; ret
0x00000000004c41e1 : lodsd eax, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000004bc9a8 : lodsd eax, dword ptr [rsi] ; mov edi, 0x4b ; add byte ptr [rax], al ; ret
0x00000000004952a0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000478fa2 : lodsd eax, dword ptr [rsi] ; ret
0x000000000043fd84 : lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; test rax, rax ; je 0x43fd97 ; ret
0x00000000004055a1 : loop 0x4055a9 ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041be0a : loop 0x41be19 ; add byte ptr [rax], al ; mov rdi, rbx ; call 0x418069
0x000000000042e51d : loop 0x42e555 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000043494a : loop 0x434945 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434949 : loop 0x434946 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000045c83b : loop 0x45c7c8 ; ret
0x00000000004762a2 : loop 0x4762ad ; add rdx, rax ; jmp 0x4762bd
0x00000000004767b1 : loop 0x47681e ; and eax, 0x38754000 ; ret
0x000000000049c219 : loop 0x49c268 ; add esp, 0x18 ; ret
0x00000000004a379d : loop 0x4a3798 ; call rax
0x00000000004a3b61 : loop 0x4a3b5d ; jmp qword ptr [rax]
0x00000000004bb97a : loop 0x4bb9cf ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000042c862 : loope 0x42c8b9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004348ba : loope 0x4348b5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004348b9 : loope 0x4348b6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043be6b : loope 0x43be75 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043e55e : loope 0x43e555 ; ret
0x000000000044422f : loope 0x44423a ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000046664e : loope 0x466663 ; je 0x466674 ; ret
0x000000000046aa7c : loope 0x46aa09 ; ret 0xf631
0x000000000046e9af : loope 0x46e9db ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000478e37 : loope 0x478e89 ; mov dword ptr [rdi], ecx ; ret
0x0000000000478e68 : loope 0x478ebb ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000478edd : loope 0x478f30 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000049e5d5 : loope 0x49e601 ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x000000000049f1f6 : loope 0x49f255 ; ret
0x00000000004a3799 : loope 0x4a3798 ; call qword ptr [rax - 0x2f00081e]
0x0000000000400484 : loopne 0x4004b5 ; add al, bpl ; ret
0x0000000000400c90 : loopne 0x400ca7 ; mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000412a09 : loopne 0x412a70 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412ab7 : loopne 0x412b1e ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000414606 : loopne 0x41466a ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416cd5 : loopne 0x416d39 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042094b : loopne 0x4209ad ; pop rbp ; pop r12 ; ret
0x000000000042659d : loopne 0x426601 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000426632 : loopne 0x426696 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042cb1d : loopne 0x42cb75 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430121 : loopne 0x430138 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430120 : loopne 0x430139 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430271 : loopne 0x430288 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430270 : loopne 0x430289 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004303c1 : loopne 0x4303d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004303c0 : loopne 0x4303d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430511 : loopne 0x430528 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430510 : loopne 0x430529 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430661 : loopne 0x430678 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430660 : loopne 0x430679 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004307b1 : loopne 0x4307c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004307b0 : loopne 0x4307c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430901 : loopne 0x430918 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430900 : loopne 0x430919 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a4f : loopne 0x430a66 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a4e : loopne 0x430a67 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ba1 : loopne 0x430bb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ba0 : loopne 0x430bb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cf1 : loopne 0x430d08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430cf0 : loopne 0x430d09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e41 : loopne 0x430e58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e40 : loopne 0x430e59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f91 : loopne 0x430fa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f90 : loopne 0x430fa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310e1 : loopne 0x4310f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310e0 : loopne 0x4310f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431231 : loopne 0x431248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431230 : loopne 0x431249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431381 : loopne 0x431398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431380 : loopne 0x431399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004327c2 : loopne 0x43278f ; jp 0x43284b ; jp 0x4327be ; ret
0x000000000043dce5 : loopne 0x43dd36 ; sub eax, edx ; vzeroupper ; ret
0x000000000043dce4 : loopne 0x43dd37 ; sub eax, edx ; vzeroupper ; ret
0x000000000043f45c : loopne 0x43f4b0 ; add byte ptr [rax], al ; ret
0x00000000004425ba : loopne 0x44260d ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000442898 : loopne 0x4428ad ; cmp eax, 4 ; je 0x4428a7 ; ret
0x00000000004435f8 : loopne 0x443657 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000444232 : loopne 0x444292 ; pop rbp ; ret
0x000000000045a7ad : loopne 0x45a73a ; ret 0xe680
0x0000000000461d7b : loopne 0x461ddf ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000462133 : loopne 0x462195 ; pop rbp ; pop r12 ; ret
0x000000000046215d : loopne 0x4621bf ; pop rbp ; pop r12 ; ret
0x000000000046281b : loopne 0x46287d ; pop rbp ; pop r12 ; ret
0x000000000046288d : loopne 0x4628ef ; pop rbp ; pop r12 ; ret
0x0000000000463e5e : loopne 0x463df7 ; mov eax, 0xffffffff ; ret
0x000000000047897d : loopne 0x478986 ; sub eax, 1 ; ret
0x000000000049e6e5 : loopne 0x49e711 ; add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004a3a08 : loopne 0x4a39c5 ; clc ; call rax
0x00000000004a3b5d : loopne 0x4a3b5d ; push qword ptr [rax] ; loop 0x4a3b61 ; jmp qword ptr [rax]
0x00000000004a3b7d : loopne 0x4a3b79 ; call qword ptr [rax]
0x00000000004a3b9d : loopne 0x4a3b99 ; jmp rax
0x00000000004a427c : loopne 0x4a42f7 ; stc ; inc dword ptr [rax] ; jae 0x4a4283 ; jmp qword ptr [rax]
0x00000000004a42b0 : loopne 0x4a432f ; stc ; push rax ; jbe 0x4a42b7 ; call qword ptr [rax]
0x00000000004b8f54 : loopne 0x4b8f34 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004be218 : loopne 0x4be297 ; std ; call qword ptr [rax]
0x00000000004c4220 : loopne 0x4c41ee ; std ; call qword ptr [rbx]
0x00000000004c50c0 : loopne 0x4c50ab ; stc ; call qword ptr [rsi]
0x00000000004b896a : mov ah, 0x13 ; ret
0x00000000004c03b4 : mov ah, 0x1a ; add byte ptr [rax], al ; or byte ptr [rcx - 0xb], cl ; jmp qword ptr [rcx]
0x00000000004c1fb4 : mov ah, 0x36 ; add byte ptr [rax], al ; cmp byte ptr [rsi - 0xa], cl ; call qword ptr [rax]
0x00000000004b8e10 : mov ah, 0xa5 ; ret
0x000000000046be88 : mov ah, 0xe8 ; ret 0xfd34
0x00000000004c8b81 : mov ah, 0xfc ; call qword ptr [rax]
0x00000000004b8764 : mov ah, bl ; push rsi ; ret
0x000000000049a066 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004585f8 : mov al, 0 ; add cl, ch ; ret
0x00000000004a3ef0 : mov al, 0x16 ; stc ; inc dword ptr [rax + 0x16] ; stc ; call rax
0x00000000004a3cd8 : mov al, 0x19 ; stc ; inc dword ptr [rax + 0x19] ; stc ; call rax
0x00000000004a4210 : mov al, 0x70 ; stc ; inc eax ; jo 0x4a4217 ; call rax
0x00000000004a4250 : mov al, 0x71 ; stc ; inc eax ; jno 0x4a4257 ; jmp rax
0x00000000004a42cc : mov al, 0x77 ; stc ; inc eax ; ja 0x4a42d3 ; call rax
0x00000000004a42f0 : mov al, 0x78 ; stc ; call rax
0x00000000004c4290 : mov al, 0xb2 ; clc ; call qword ptr [rcx]
0x00000000004a4150 : mov al, 0xeb ; clc ; call rax
0x00000000004bac16 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004bff4d : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000004c6025 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000439666 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000439684 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043adf0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439640 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000040f94f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000439650 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435681 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000044cf7b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000044cafe : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x000000000043bd08 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004b9c44 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004a39f1 : mov bh, 0xf8 ; call rdx
0x00000000004a39e1 : mov bh, 0xf8 ; jmp qword ptr [rax]
0x00000000004a3a05 : mov bh, 0xf8 ; jmp rax
0x00000000004a3a01 : mov bh, 0xf8 ; push rax ; mov bh, 0xf8 ; jmp rax
0x00000000004c2e70 : mov bh, 1 ; ret
0x00000000004bb353 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000446aa8 : mov bh, byte ptr [rdx] ; pop rdi ; add byte ptr [rax - 0x7f], cl ; ret 0x5f20
0x00000000004be23d : mov bh, ch ; call rax
0x000000000043d5fe : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000466e3c : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000047e1b9 : mov bl, 0x66 ; nop dword ptr [rax + rax] ; call rbx
0x00000000004bad23 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004c4321 : mov bl, 0xf8 ; jmp qword ptr [rsi]
0x000000000041ca70 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000041190c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000041ca71 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x00000000004471c8 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000041190d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000047b9d2 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r14
0x000000000044c7b3 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r15
0x0000000000499f24 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x00000000004c1ed0 : mov byte ptr [rcx], al ; ret
0x000000000043ba58 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000043b3c8 : mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043bace : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000043b41e : mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043bb50 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000043b4a0 : mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b906 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b2e6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000043b922 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b302 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b343 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000043174b : mov byte ptr [rdi - 1], dl ; ret
0x00000000004328cc : mov byte ptr [rdi], cl ; ret
0x000000000043b8e0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000043b2c0 : mov byte ptr [rdi], dh ; ret
0x00000000004356f3 : mov byte ptr [rdi], dl ; ret
0x000000000043ae19 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x0000000000439669 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000043ae47 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000439687 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000043adf2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000439642 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000440ce4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000049aa90 : mov byte ptr [rip + 0x231a69], 8 ; ret
0x00000000004008f6 : mov byte ptr [rip + 0x2cac03], 1 ; pop rbp ; ret
0x00000000004678ca : mov byte ptr [rsi - 0x3e], cl ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x73], cl ; nop ; ret 0x6c
0x00000000004bedc8 : mov byte ptr [rsi - 0xc], bl ; call qword ptr [rax]
0x0000000000452163 : mov byte ptr [rsi], al ; jne 0x452147 ; mov rax, rsi ; ret
0x00000000004520df : mov byte ptr [rsi], dl ; jne 0x4520cf ; mov rax, rsi ; ret
0x000000000047a8c7 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000004b8762 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004b9aa3 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004bae3f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004bb7ea : mov ch, 0xab ; ret
0x00000000004c1241 : mov ch, 0xf5 ; call qword ptr [rax]
0x000000000042122c : mov ch, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000042f486 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425feb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000414978 : mov cl, 0x35 ; ret 0x2b75
0x000000000041de04 : mov cl, 0x35 ; xchg eax, esi ; ret
0x000000000044f3fb : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000429005 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000004215b4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004bac12 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000004328ca : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000046664b : mov cl, dl ; and cl, 0xf ; je 0x466677 ; ret
0x00000000004baecc : mov cs, edi ; ret 0x8b36
0x000000000042b43e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043b2e0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000049d14f : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000411dee : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004150f0 : mov dh, 0 ; pop rbx ; ret
0x000000000041306b : mov dh, 0 ; ret
0x00000000004356f1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000004261c4 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040db20 : mov dh, 0x17 ; test dl, dl ; jne 0x40db06 ; ret
0x00000000004a3d20 : mov dh, 0x18 ; stc ; inc dword ptr [rsi + 0x18] ; stc ; call rsi
0x0000000000461ece : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040da55 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x0000000000462503 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000043d1d1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d1c1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d191 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000043d1b1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d1a1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000448b50 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000004b9c02 : mov dh, 0x4e ; ret 0x474c
0x000000000046d8c5 : mov dh, 0x53 ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000462aa9 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000043d1d5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x000000000043d1c5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x000000000043d195 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x000000000043d1a5 : mov dh, 0x56 ; sub eax, edx ; ret
0x000000000045d307 : mov dh, 0x57 ; or al, 0x83 ; ret
0x000000000045d28a : mov dh, 0x57 ; or al, 0xf6 ; ret 0xf08
0x000000000046e3e7 : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x000000000044ed0f : mov dh, 0xb2 ; sbb byte ptr [rdi + 0x4a], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000044f69d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000049b196 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000047af9d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047ad47 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ac76 : mov dh, 0xc0 ; ret
0x000000000043e3d8 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000043e400 : mov dh, 0xc2 ; pop rbx ; ret
0x0000000000413f2e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bae44 : mov dh, 0xc7 ; ret 0xe71f
0x0000000000499f1f : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x00000000004261ea : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000049b6cf : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000422961 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e564 : mov dh, 0xe ; sub eax, ecx ; ret
0x0000000000466822 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000049e7e7 : mov dh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414d8e : mov dh, 2 ; pop rbx ; ret
0x0000000000411e01 : mov dh, 2 ; ret
0x000000000042e561 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004261c1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422964 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004c7b29 : mov dh, bl ; jmp qword ptr [rsi]
0x000000000040f914 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000043e55c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000004a3a00 : mov dil, 0xf8 ; push rax ; mov bh, 0xf8 ; jmp rax
0x00000000004a3dc4 : mov dl, 0x14 ; stc ; inc dword ptr [rdx + 0x14] ; stc ; call rdx
0x000000000044ed10 : mov dl, 0x18 ; add byte ptr [eax - 0x77], cl ; ret 0x8840
0x0000000000400e18 : mov dl, 0x2c ; add dh, dh ; ret 0x7420
0x00000000004a3fc4 : mov dl, 0xa ; stc ; jmp qword ptr [rdx]
0x00000000004c4291 : mov dl, 0xf8 ; call qword ptr [rcx]
0x00000000004c4279 : mov dl, 0xf8 ; call qword ptr [rdi]
0x00000000004317d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000047c8b4 : mov dword ptr [0x2d0], eax ; ret
0x000000000047b55c : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000418bf3 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000469fa3 : mov dword ptr [r12], 1 ; jmp 0x469f78
0x0000000000400c92 : mov dword ptr [r8], eax ; pop rbx ; ret
0x0000000000466797 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000435876 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000435861 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000463a29 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463a69 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004649c9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463a2d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000464a67 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000446ab8 : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446abb : mov dword ptr [rax + 0x54], edx ; ret
0x00000000004156da : mov dword ptr [rax + 8], 0 ; ret
0x0000000000442d66 : mov dword ptr [rax + 8], edx ; ret
0x00000000004267ce : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000480502 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000044db38 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041bfe7 : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x000000000041c8f8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000046a4b8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004c72a5 : mov dword ptr [rax], eax ; add byte ptr [rax + 5], bh ; sti ; jmp rsi
0x0000000000400c93 : mov dword ptr [rax], eax ; pop rbx ; ret
0x0000000000463f55 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000004870d8 : mov dword ptr [rax], edi ; jmp 0x4870a1
0x000000000047aef5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x00000000004838d3 : mov dword ptr [rax], edx ; jmp 0x48389c
0x0000000000463e95 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047aee9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000049c302 : mov dword ptr [rax], edx ; ret
0x0000000000464ce1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000461a1a : mov dword ptr [rbp - 0x10d0], edx ; call 0x41dc48
0x000000000045656c : mov dword ptr [rbp - 0x4d8], edx ; call 0x442788
0x0000000000454f38 : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x00000000004724f1 : mov dword ptr [rbp - 0xa8], edx ; call rax
0x00000000004726da : mov dword ptr [rbp - 0xa8], esi ; call rax
0x000000000045999f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000471ca0 : mov dword ptr [rbp - 0xc8], edx ; call rax
0x0000000000491691 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000411b32 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411b31 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044d431 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478575 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411c07 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000046a898 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0x46a86e
0x00000000004785ae : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004745af : mov dword ptr [rbx + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412409 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000478513 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487eb5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000414c23 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c8f3 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000044f69f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000414c9e : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000416421 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000413282 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000463ab4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004648c8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411b97 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x0000000000414f55 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000044d447 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004150ec : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047df96 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000414ffc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000004885d9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004649cc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000414c26 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000466798 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000435877 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000435862 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000435851 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000046b19c : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x00000000004853f9 : mov dword ptr [rcx], eax ; jmp 0x4853c2
0x00000000004c8132 : mov dword ptr [rcx], eax ; ret
0x00000000004174b2 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000043ba6d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043baab : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043bb2d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b41b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b49d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b3dd : mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b4e0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b500 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b4c1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000043bb93 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000043b4e3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000414bb3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043bb75 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043bbb3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000043b4c5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046741d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000470c85 : mov dword ptr [rdi + 0x300], eax ; ret
0x0000000000470c57 : mov dword ptr [rdi + 0x308], eax ; ret
0x000000000042ca91 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000414be3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004187d0 : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c341 : mov dword ptr [rdi + 0x98], esi ; ret
0x000000000043baed : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b43d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043ba8b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043bb0d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b3fb : mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000435535 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435378 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435618 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x00000000004354c5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435308 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b957 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435455 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435298 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b327 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004187d3 : mov dword ptr [rdi + 4], eax ; ret
0x000000000043b939 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000435228 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b319 : mov dword ptr [rdi + 4], edx ; ret
0x000000000043b9eb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004351b8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b38b : mov dword ptr [rdi + 5], edx ; ret
0x000000000043ba0b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435148 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b39b : mov dword ptr [rdi + 6], edx ; ret
0x000000000043b9a9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043ba2b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004350d8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b369 : mov dword ptr [rdi + 7], edx ; ret
0x0000000000414bb7 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000478f74 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000043b9c9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b98b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000047a334 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000043b35b : mov dword ptr [rdi + 8], edx ; ret
0x00000000004328c3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x00000000004267d5 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004267de : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000049c2ec : mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000431495 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004314d3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478edf : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000043181c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b88 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319fc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b08 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431bec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a88 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431dbd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349f9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431fbd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434969 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004321bd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348d9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431b9d : mov dword ptr [rdi - 2], ecx ; ret
0x00000000004319b5 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000431b99 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431f79 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000043164f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000431f76 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432176 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432376 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431499 : mov dword ptr [rdi - 8], ecx ; ret
0x00000000004314d7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000043164c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431748 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431694 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c08 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000478e64 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478f6e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000045c476 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043b925 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000043b977 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b904 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043b2e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043b955 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000043b325 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b9a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043b367 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b9c7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043b377 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004267d3 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000043dc69 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x000000000043b388 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b398 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b3a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004267db : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b316 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b358 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043dc76 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000042c867 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x0000000000400538 : mov dword ptr [rdi], ecx ; ret
0x000000000043b8f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b912 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043b964 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353e4 : mov dword ptr [rdi], edx ; ret
0x000000000043585f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004328ab : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000047a4dd : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043584e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043288e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000435873 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000004328c0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000047a503 : mov dword ptr [rdi], esi ; ret
0x000000000040f913 : mov dword ptr [rdx + 0x130], ecx ; ret
0x000000000042cb1f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047b55d : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000043ae77 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000004396a7 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000043ae59 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439699 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000043af0b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000043ae89 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00000000004396b9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000043af2b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043aea9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x00000000004396c9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000043aec9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000043af4b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004396d9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000043aee9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000043addb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043962b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000416576 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x000000000047a904 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000046ad1f : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000041addc : mov dword ptr [rdx], eax ; jmp 0x41abfb
0x000000000043ae04 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000043ae32 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000043ad84 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004123b1 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dbaa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000047a4df : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000412c10 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000004395d4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000047aed5 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x00000000004164e2 : mov dword ptr [rdx], eax ; ret
0x0000000000463d76 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049f1ef : mov dword ptr [rip + 0x22cd2b], ebx ; jne 0x49f1e1 ; pop rbx ; ret
0x000000000044f4e5 : mov dword ptr [rip + 0x27beed], edx ; je 0x44f4f9 ; ret
0x0000000000444166 : mov dword ptr [rip + 0x2857ec], edx ; pop rbx ; ret
0x00000000004014ca : mov dword ptr [rip + 0x2c8560], eax ; xor eax, eax ; ret
0x00000000004006a5 : mov dword ptr [rip + 0x2ca3a5], eax ; pop rbp ; pop r12 ; ret
0x000000000043dc79 : mov dword ptr [rsi - 2], ecx ; ret
0x000000000043dc6b : mov dword ptr [rsi - 4], ecx ; ret
0x000000000046dfd1 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000049c32e : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x0000000000473fc2 : mov dword ptr [rsi], eax ; ret
0x000000000041b5bb : mov dword ptr [rsp + 0x10], edx ; call rax
0x0000000000418bf4 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x000000000041b5b6 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047bcb0 : mov dword ptr [rsp + 0x78], ebp ; call r12
0x000000000047beb3 : mov dword ptr [rsp + 0x78], ebx ; call r12
0x000000000047be02 : mov dword ptr [rsp + 0x88], ebx ; call r14
0x0000000000440426 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000041b672 : mov dword ptr [rsp + 8], eax ; mov qword ptr [rsp], rcx ; call rdx
0x00000000004781be : mov dword ptr [rsp + 8], esi ; mov edi, 0x6caae0 ; call rax
0x00000000004918c6 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000044f615 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000469fa4 : mov dword ptr [rsp], 1 ; jmp 0x469f77
0x00000000004098d9 : mov dword ptr [rsp], eax ; call 0x405bd5
0x000000000041b677 : mov dword ptr [rsp], ecx ; call rdx
0x000000000047c8b3 : mov dword ptr fs:[0x2d0], eax ; ret
0x000000000044db37 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000041c8f7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000046a4b7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000004870d7 : mov dword ptr fs:[rax], edi ; jmp 0x4870a2
0x00000000004838d2 : mov dword ptr fs:[rax], edx ; jmp 0x48389d
0x000000000046ad6c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x00000000004853f8 : mov dword ptr fs:[rcx], eax ; jmp 0x4853c3
0x000000000047a903 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x00000000004123b0 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dba9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004328aa : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000004319b0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000043b2d0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400983 : mov eax, 0 ; leave ; ret
0x000000000043e4a9 : mov eax, 0x10 ; pop rbx ; ret
0x0000000000420ff4 : mov eax, 0x16 ; je 0x421007 ; ret
0x0000000000421190 : mov eax, 0x16 ; ret
0x000000000043e4a2 : mov eax, 0x20 ; pop rbx ; ret
0x000000000043e49b : mov eax, 0x30 ; pop rbx ; ret
0x000000000043e494 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000426689 : mov eax, 0x435710 ; ret
0x0000000000425d5c : mov eax, 0x43d6d0 ; cmove rax, rdx ; ret
0x00000000004b8d5b : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000426c3a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000004bcb58 : mov eax, 0x4bc2 ; add byte ptr [rax], al ; add dh, dl ; ret 0x4b
0x000000000043e48d : mov eax, 0x60 ; pop rbx ; ret
0x000000000046aaf0 : mov eax, 0x66 ; syscall ; ret
0x000000000046ab10 : mov eax, 0x68 ; syscall ; ret
0x000000000046ab00 : mov eax, 0x6b ; syscall ; ret
0x000000000046ab20 : mov eax, 0x6c ; syscall ; ret
0x0000000000417ca3 : mov eax, 0x6ca1a0 ; ret
0x000000000046f917 : mov eax, 0x6cab80 ; call rdx
0x000000000043e486 : mov eax, 0x80 ; pop rbx ; ret
0x0000000000410f41 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004671b0 : mov eax, 0xc9 ; syscall ; ret
0x0000000000442802 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000041aca3 : mov eax, 0xe8004a2c ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000420016 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000004110df : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000045198e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410f29 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000411ba1 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040dbac : mov eax, 0xffffffff ; ret
0x000000000047a4fd : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000415552 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e9db : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000444126 : mov eax, 1 ; ret
0x00000000004666b1 : mov eax, 2 ; ret
0x00000000004666c1 : mov eax, 3 ; ret
0x000000000049d1af : mov eax, 4 ; jne 0x49d1d8 ; ret
0x00000000004666d1 : mov eax, 4 ; ret
0x00000000004666e1 : mov eax, 5 ; ret
0x00000000004666f1 : mov eax, 6 ; ret
0x0000000000466701 : mov eax, 7 ; ret
0x000000000043e47f : mov eax, 8 ; pop rbx ; ret
0x000000000049d1d6 : mov eax, 8 ; ret
0x0000000000463dac : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000414cdc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000410c53 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000414eb8 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000004151d8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000487b33 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004154fc : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000464e14 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000047ea2d : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478391 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000473f9a : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x473f79 ; ret
0x000000000044f52f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455312 : mov eax, dword ptr [rax*8 + 0x4b32c0] ; jmp rax
0x0000000000455363 : mov eax, dword ptr [rax*8 + 0x4b33c0] ; jmp rax
0x0000000000457453 : mov eax, dword ptr [rax*8 + 0x4b34c0] ; jmp rax
0x0000000000455f86 : mov eax, dword ptr [rax*8 + 0x4b37c0] ; jmp rax
0x0000000000460161 : mov eax, dword ptr [rax*8 + 0x4b3c40] ; jmp rax
0x0000000000461485 : mov eax, dword ptr [rax*8 + 0x4b3d40] ; jmp rax
0x0000000000461969 : mov eax, dword ptr [rax*8 + 0x4b3e40] ; jmp rax
0x00000000004601f7 : mov eax, dword ptr [rax*8 + 0x4b4140] ; jmp rax
0x0000000000499f69 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x0000000000499f51 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x00000000004748d9 : mov eax, dword ptr [rax] ; ret
0x00000000004408bc : mov eax, dword ptr [rbp - 0x48] ; call rax
0x0000000000445327 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000475de5 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000471a91 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aef1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000467ea1 : mov eax, dword ptr [rbx + 0x26] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004396a4 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000004396b6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000004396c6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004396d6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004396e6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004292aa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000042ab82 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043ae30 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000439670 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000043ad81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004395d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000043ae01 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439651 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000464c5f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x00000000004164f0 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000416518 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004a0c58 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0c6f ; call rax
0x0000000000464e11 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416821 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047a6d8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47a6f0 ; ret
0x000000000049c2c1 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000049c311 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000049c351 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000049c3b1 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000049c3a1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000049c361 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x000000000044db4c : mov eax, dword ptr [rdi*8 + 0x6cb3e0] ; ret
0x0000000000478321 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x478337 ; ret
0x00000000004164df : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000049e615 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e627 ; ret
0x000000000049e630 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e647 ; ret
0x000000000049e860 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x49e877 ; ret
0x000000000043e557 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x43e549 ; ret
0x0000000000429006 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000041721e : mov eax, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000410bd0 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000463f57 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000410110 : mov eax, dword ptr [rdx] ; ret
0x00000000004164d1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x4164d0 ; ret
0x00000000004885a0 : mov eax, dword ptr [rip + 0x24465a] ; ret
0x0000000000473fbb : mov eax, dword ptr [rip + 0x258747] ; mov qword ptr [rsi], rax ; ret
0x0000000000473f5a : mov eax, dword ptr [rip + 0x2587b0] ; ret
0x000000000044ca01 : mov eax, dword ptr [rip + 0x27f691] ; ret
0x0000000000445691 : mov eax, dword ptr [rip + 0x2875d1] ; ret
0x0000000000416801 : mov eax, dword ptr [rip + 0x2b3259] ; ret
0x000000000049d202 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000049a091 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000049a064 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000049a081 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x0000000000473e4c : mov eax, dword ptr [rsi + 4] ; ret
0x000000000049d221 : mov eax, dword ptr [rsi + 8] ; ret
0x0000000000463e97 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000049c386 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400bd0 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000044732a : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000447c8d : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000040e017 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000004787ac : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x000000000047862d : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x000000000043e614 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004748d8 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041cbe5 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045a490 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041ca75 : mov eax, eax ; pop rbx ; ret
0x00000000004329a5 : mov eax, eax ; ret
0x00000000004778c2 : mov eax, eax ; sub eax, ecx ; ret
0x0000000000412b7a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046306b : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004636b9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046368c : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040f643 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410f46 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047a473 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000004132ed : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474ba8 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000465ee9 : mov eax, ebx ; jmp 0x465d43
0x000000000040f9a9 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa8e : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fd2e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000411c0b : mov eax, ebx ; pop rbx ; ret
0x000000000047a337 : mov eax, ecx ; adc eax, eax ; ret
0x000000000046b0c5 : mov eax, ecx ; jne 0x46b11d ; ret
0x000000000046d743 : mov eax, ecx ; mov rcx, r15 ; mov r15, rax ; jmp 0x46d719
0x000000000041bfee : mov eax, ecx ; ret
0x0000000000416831 : mov eax, edi ; ret
0x0000000000487e5e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047b063 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000041dcf8 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004174b5 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004725df : mov eax, edx ; call rax
0x000000000047c88b : mov eax, edx ; jle 0x47c89d ; ret
0x0000000000462e2b : mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045c27a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041e682 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041789c : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040f830 : mov eax, edx ; pop rbx ; ret
0x0000000000426d59 : mov eax, edx ; ret
0x0000000000478937 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000046a8e3 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487c88 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb04 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000004520e4 : mov eax, esi ; ret
0x000000000043dcfb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000414605 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042094a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000414604 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045a48f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000045a3c9 : mov eax, r8d ; ret
0x00000000004778c1 : mov eax, r8d ; sub eax, ecx ; ret
0x0000000000467ac7 : mov ebp, 0x83000001 ; call 0xffffffffc40dc30a
0x00000000004ae9c4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004b821d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000465838 : mov ebp, 0xf80148c0 ; ret
0x0000000000465abc : mov ebp, 0xf80148c6 ; ret
0x00000000004b9986 : mov ebp, 0xfb67d10d ; ret
0x00000000004554cc : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000455a51 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000045cf9f : mov ebp, 0xfffffb60 ; call rax
0x000000000047627f : mov ebp, 0xffffff78 ; call rax
0x000000000041ae04 : mov ebp, dword ptr [rax] ; add al, bpl ; ret 0xffff
0x000000000049c7e3 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049da2a : mov ebp, dword ptr [rsp + 8] ; jmp 0x49da48
0x00000000004204af : mov ebp, eax ; call 0x41c744
0x000000000043ff17 : mov ebp, eax ; call rax
0x00000000004408b9 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000047893d : mov ebp, ecx ; nop ; jmp rdx
0x000000000047d537 : mov ebp, edi ; mov r15, rax ; jmp 0x47d553
0x0000000000440cbf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000040212d : mov ebx, 0x80 ; call rax
0x0000000000442834 : mov ebx, 0xafb8341 ; je 0x442843 ; ret
0x00000000004a3a25 : mov ebx, 0xbb91fff8 ; clc ; call qword ptr [rcx]
0x00000000004b821b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000445c66 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x445c49 ; jmp 0x445c3b
0x0000000000476a69 : mov ebx, dword ptr [rsp] ; add rsp, 0x18 ; jmp r11
0x0000000000476dd8 : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x0000000000476eea : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440cc6 : mov ebx, eax ; call rax
0x000000000044fa2f : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000044ef26 : mov ebx, edi ; test rax, rax ; je 0x44ef36 ; call rax
0x00000000004bf784 : mov ecx, 0x41380e0a ; ret
0x00000000004a39e9 : mov ecx, 0xba00fff8 ; clc ; jmp qword ptr [rsi]
0x00000000004a3a1d : mov ecx, 0xba91fff8 ; clc ; call qword ptr [rcx]
0x00000000004b8219 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000043585c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042fc05 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000464deb : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000429003 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000431f73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432173 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000432373 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000043b300 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000043b341 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000435533 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004354c3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435453 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435375 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435305 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435295 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435225 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004351b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435145 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004350d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435615 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b2e1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004734ad : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000478487 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478415 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000466f78 : mov ecx, edi ; call rbx
0x000000000046d746 : mov ecx, edi ; mov r15, rax ; jmp 0x46d716
0x00000000004329c1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004329c4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004154f7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000044495b : mov ecx, esi ; call rbx
0x0000000000473e33 : mov ecx, esi ; cmp rcx, rdx ; jne 0x473e18 ; ret
0x0000000000442012 : mov edi, 0x1f0ffffd ; add bl, dh ; ret
0x0000000000442590 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000441bcd : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000041ae1c : mov edi, 0x4a285c ; call 0x417057
0x000000000041ae03 : mov edi, 0x4a288b ; call 0x417057
0x00000000004bc9a9 : mov edi, 0x4b ; add byte ptr [rax], al ; ret
0x000000000046547d : mov edi, 0x4b2dbc ; call 0x401747
0x0000000000470cc6 : mov edi, 0x6caaa0 ; call rax
0x0000000000470d32 : mov edi, 0x6caaa0 ; pop rbx ; pop rbp ; jmp rax
0x000000000047834f : mov edi, 0x6caae0 ; add rsp, 8 ; jmp rax
0x0000000000443e35 : mov edi, 0x6caae0 ; call rax
0x000000000047686f : mov edi, 0x6caae0 ; jmp rax
0x000000000040087c : mov edi, 0x6cb4f0 ; jmp rax
0x0000000000402ea5 : mov edi, 0x6cb980 ; call rax
0x0000000000402baf : mov edi, 0x6cb980 ; call rbx
0x0000000000402c56 : mov edi, 0x6cba00 ; call rax
0x00000000004034fc : mov edi, 0x6cba40 ; call r15
0x00000000004034b4 : mov edi, 0x6cba40 ; call rax
0x0000000000445731 : mov edi, 0x6cc070 ; call rax
0x000000000043e64a : mov edi, 0x6cc0c0 ; call rax
0x0000000000402ba8 : mov edi, 0x6cc0c0 ; call rbx
0x000000000047aab2 : mov edi, 0x6cc360 ; call rax
0x000000000047abdd : mov edi, 0x6cc364 ; call rdx
0x0000000000441ff6 : mov edi, 0x8b48fffd ; jge 0x442004 ; call rbx
0x0000000000441fe8 : mov edi, 0x8b49fffd ; cmp al, 0x24 ; call rbx
0x00000000004a3ac9 : mov edi, 0xc05bfff8 ; clc ; jmp rax
0x00000000004be3cd : mov edi, 0xc5f4fffd ; std ; call rsp
0x000000000049c016 : mov edi, 1 ; call r14
0x00000000004015e7 : mov edi, 1 ; call rax
0x000000000049ccdc : mov edi, 1 ; jmp rax
0x00000000004098d5 : mov edi, dword ptr [rax + 0x10] ; mov qword ptr [rsp], rax ; call 0x405bd9
0x00000000004098fc : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rsp], rax ; call 0x405bd9
0x00000000004098e6 : mov edi, dword ptr [rax + 8] ; mov qword ptr [rsp], rax ; call 0x405bd9
0x0000000000440423 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045cf9e : mov edi, dword ptr [rbp - 0x4a0] ; call rax
0x000000000047627e : mov edi, dword ptr [rbp - 0x88] ; call rax
0x000000000049c661 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000466825 : mov edi, dword ptr [rbp] ; call r12
0x000000000040df9d : mov edi, dword ptr [rbp] ; call r14
0x000000000044007a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000476e08 : mov edi, dword ptr [rdi + 0x28] ; call r11
0x0000000000440028 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000464dd8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x464da4
0x00000000004b9c46 : mov edi, dword ptr [rdx] ; ret
0x000000000047adf8 : mov edi, dword ptr [rip + 0x251566] ; call rax
0x000000000047acbb : mov edi, dword ptr [rip + 0x2516a3] ; jmp rax
0x000000000043ffe7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000447031 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x000000000049df3f : mov edi, dword ptr [rsp + 0x10] ; call r14
0x000000000044050f : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447325 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447c88 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000044b87a : mov edi, dword ptr [rsp + 0x18] ; call r14
0x000000000044806e : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x00000000004477a5 : mov edi, dword ptr [rsp + 0x28] ; call r12
0x00000000004484d0 : mov edi, dword ptr [rsp + 0x28] ; call r14
0x0000000000446e32 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000447859 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x000000000044b0ba : mov edi, dword ptr [rsp + 0x30] ; call r14
0x00000000004496d8 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000449b18 : mov edi, dword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000448a58 : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000448dff : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000400b77 : mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000400bcb : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000440470 : mov edi, dword ptr [rsp] ; call rbx
0x000000000049ce2c : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x00000000004085b2 : mov edi, eax ; call 0x41dfe8
0x000000000042119a : mov edi, eax ; call rcx
0x000000000046d749 : mov edi, eax ; jmp 0x46d713
0x000000000047d53a : mov edi, eax ; jmp 0x47d550
0x00000000004520dd : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4520d1 ; mov rax, rsi ; ret
0x00000000004204ac : mov edi, eax ; mov rbp, rax ; call 0x41c747
0x0000000000420538 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049f25c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000441da0 : mov edi, ebp ; call 0x41dfe4
0x000000000040ffdd : mov edi, ebp ; call 0x42c254
0x000000000047e316 : mov edi, ebp ; call qword ptr [rbx]
0x000000000040e1dc : mov edi, ebp ; call r14
0x000000000044fa77 : mov edi, ebp ; call r15
0x000000000041eab6 : mov edi, ebp ; call rax
0x0000000000440d10 : mov edi, ebp ; call rbx
0x000000000044fff4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000041f417 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000041be0f : mov edi, ebx ; call 0x418064
0x000000000044c9b7 : mov edi, ebx ; call r12
0x0000000000444c2d : mov edi, ebx ; call r14
0x00000000004627d9 : mov edi, ebx ; call r8
0x00000000004121c7 : mov edi, ebx ; call rax
0x00000000004457f1 : mov edi, ebx ; jmp 0x4457bb
0x000000000049f083 : mov edi, ebx ; jne 0x49f075 ; pop rbx ; ret
0x0000000000414d44 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414eb4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000441cff : mov edi, edi ; call 0x41dfe4
0x00000000004105b5 : mov edi, edi ; call rax
0x0000000000440d54 : mov edi, edi ; call rbx
0x0000000000465134 : mov edi, edi ; xor r8d, r8d ; call rbx
0x0000000000452161 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x452149 ; mov rax, rsi ; ret
0x0000000000441d0c : mov edi, esi ; call 0x41dfe4
0x000000000045c886 : mov edi, esi ; call 0x4267f9
0x000000000044527e : mov edi, esi ; call r15
0x0000000000440d34 : mov edi, esi ; call rbx
0x0000000000441dae : mov edi, esp ; call 0x41dfe4
0x000000000044fa32 : mov edi, esp ; call r15
0x0000000000440ceb : mov edi, esp ; call rbx
0x0000000000466f75 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000445324 : mov edi, esp ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000004733f9 : mov edi, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000004733f8 : mov edi, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042667f : mov edx, 0x42fb80 ; cmove rax, rdx ; ret
0x00000000004426b6 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x00000000004a39ed : mov edx, 0xb726fff8 ; clc ; call rdx
0x00000000004a39dd : mov edx, 0xb751fff8 ; clc ; jmp qword ptr [rax]
0x00000000004a39d5 : mov edx, 0xb91efff8 ; clc ; jmp qword ptr [rax]
0x00000000004b90fe : mov edx, 0xcac982a4 ; call 0xffffffffaf0e2f7e
0x0000000000446b77 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x00000000004449a0 : mov edx, 8 ; mov eax, edx ; ret
0x0000000000463d78 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000049ce30 : mov edx, dword ptr [rbp] ; call r12
0x000000000047aed1 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004121c0 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000042ab7f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004292ad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000047aee5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x00000000004105ae : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000049dd19 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x00000000004725d8 : mov edx, dword ptr [rdx + 8] ; add rdx, qword ptr [rax] ; mov rax, rdx ; call rax
0x000000000043b322 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000043b313 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000043b363 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b373 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004319b1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000431d70 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431601 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043b910 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004355a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000043b961 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000043b8f1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043b2d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000041e3c9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x000000000049bf69 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000417734 : mov edx, eax ; jmp 0x417751
0x0000000000421230 : mov edx, eax ; jmp 0x4211fb
0x0000000000469936 : mov edx, eax ; jmp 0x46993f
0x000000000046b305 : mov edx, eax ; jmp 0x46b2fa
0x000000000044fff7 : mov edx, ebp ; call r15
0x000000000040ffda : mov edx, ebp ; mov rdi, r13 ; call 0x42c257
0x000000000047e311 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e2d1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fa71 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000044fa8c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000473b5c : mov edx, ebp ; xor edi, edi ; call 0x43fde6
0x00000000004585f4 : mov edx, esp ; call 0x4636d8
0x0000000000473b5b : mov edx, r13d ; xor edi, edi ; call 0x43fde7
0x000000000046aeb9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000441236 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x000000000044f4e8 : mov esi, 0x3740027 ; ret
0x0000000000446ab5 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000446aa7 : mov esi, 0x4a5f3a8a ; add byte ptr [rax - 0x7f], cl ; ret 0x5f20
0x00000000004a3e4c : mov esi, 0x64fff913 ; adc edi, ecx ; call rsp
0x000000000047658f : mov esi, 0x89fffffe ; ret 0x758b
0x000000000048a2af : mov esi, 0xbe0f2414 ; ret 0x8349
0x00000000004a3a81 : mov esi, 0xbf36fff8 ; clc ; call rsi
0x00000000004b821e : mov esi, 0xc2c1c0bf ; ret
0x000000000041485b : mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000043e384 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000440d76 : mov esi, 1 ; call rbx
0x0000000000440f63 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x0000000000440e2f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000440da7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000004411ed : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00000000004627d3 : mov esi, 1 ; mov rdi, rbx ; call r8
0x00000000004620e8 : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043ff61 : mov esi, 2 ; jmp rax
0x00000000004411e1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000440f54 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000440e20 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000440d98 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000043ff7b : mov esi, 3 ; jmp rax
0x000000000044175c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000004417b3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000441833 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000441933 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000004c1f89 : mov esi, dr0 ; call qword ptr [rax]
0x000000000049c65d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000476e04 : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000040df9a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049df3c : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000049cde5 : mov esi, dword ptr [rsi] ; call r12
0x00000000004328a9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000400b73 : mov esi, dword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0xc] ; call r12
0x0000000000444956 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450ac1 : mov esi, dword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041eab1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000447854 : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x00000000004496d3 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000041e0c1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000400577 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400584 ; ret
0x000000000041f6ae : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000046a89c : mov esi, ebp ; xor edx, edx ; jmp 0x46a86a
0x000000000047adf6 : mov esi, ebx ; mov edi, dword ptr [rip + 0x251566] ; call rax
0x000000000044fa8f : mov esi, ebx ; mov rdi, r12 ; call r15
0x0000000000421197 : mov esi, ebx ; mov rdi, rax ; call rcx
0x0000000000414d89 : mov esi, ecx ; jbe 0x414d2d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049ccda : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045cf9b : mov esi, edi ; mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000040e1d9 : mov esi, edi ; mov rdi, r13 ; call r14
0x0000000000452d1b : mov esi, edi ; mov rdi, rbx ; call rax
0x000000000049cd31 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000466f72 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000044fff1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000047e314 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e2d4 : mov esi, esp ; mov edi, ebp ; call rax
0x000000000044fa43 : mov esi, esp ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000420535 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fa74 : mov esi, esp ; mov rdi, rbp ; call r15
0x000000000042025a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000041fa95 : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000004c4abc : mov esp, 0x30000061 ; js 0x4c4ac3 ; call rdi
0x0000000000426031 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000426061 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000426051 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004bf3bc : mov esp, 0x5000000a ; clc ; hlt ; call qword ptr [rdx]
0x00000000004c4bbc : mov esp, 0x60000062 ; jp 0x4c4bc3 ; call rdx
0x00000000004c6ebc : mov esp, 0xa0000085 ; salc ; cli ; call rsi
0x00000000004a3a2d : mov esp, 0xbc91fff8 ; clc ; call qword ptr [rcx]
0x00000000004be2e1 : mov esp, 0xbca8fffd ; std ; call rax
0x00000000004be2e5 : mov esp, 0xbcd0fffd ; std ; jmp rax
0x00000000004a3af5 : mov esp, 0xbd50fff8 ; clc ; jmp rax
0x00000000004a3a75 : mov esp, 0xbd86fff8 ; clc ; call qword ptr [rsi]
0x00000000004c42bc : mov esp, 0xc0000059 ; mov dl, 0xf8 ; call qword ptr [rcx]
0x0000000000423a13 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004c50bc : mov esp, 0xe0000067 ; out 0xf9, al ; call qword ptr [rsi]
0x000000000042cc5b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000426041 : mov esp, 0xf80148c0 ; ret
0x00000000004006bf : mov esp, eax ; call 0x43e378
0x000000000047893a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c7e7 : mov esp, ecx ; ret
0x000000000043ff14 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000042cb1e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000499f53 : mov qword ptr [r10], r8 ; ret
0x0000000000435850 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000463a28 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000463a68 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004649c8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000463a2c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000464a66 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000004156d9 : mov qword ptr [rax + 8], 0 ; ret
0x0000000000442d65 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000463f54 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047aef4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000463e94 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047aee8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000049c301 : mov qword ptr [rax], rdx ; ret
0x0000000000464ce0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000461a19 : mov qword ptr [rbp - 0x10d0], rdx ; call 0x41dc49
0x000000000045656b : mov qword ptr [rbp - 0x4d8], rdx ; call 0x442789
0x0000000000454f37 : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000004724f0 : mov qword ptr [rbp - 0xa8], r10 ; call rax
0x00000000004726d9 : mov qword ptr [rbp - 0xa8], rsi ; call rax
0x0000000000471c9f : mov qword ptr [rbp - 0xc8], r10 ; call rax
0x000000000044d430 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000478574 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000411c06 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000004785ad : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004745ae : mov qword ptr [rbx + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412408 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000478512 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000487eb4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000414c22 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000047c8f2 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x0000000000414c9d : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000411b96 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x0000000000414f54 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x00000000004150eb : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000047df95 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000004885d8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000478fee : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043bb2c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000043b49c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000043b47c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b4df : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000043b4ff : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000043b4c0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000414bb2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000470c84 : mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000470c56 : mov qword ptr [rdi + 0x308], rax ; ret
0x000000000042ca90 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000414be2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004187cf : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x000000000049c340 : mov qword ptr [rdi + 0x98], rsi ; ret
0x000000000043baec : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000043b43c : mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043bb0c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000043b45c : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435377 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435307 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435297 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435227 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b9ea : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004351b7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b38a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000043ba0a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000435147 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b39a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043ba2a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004350d7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000043b3aa : mov qword ptr [rdi + 7], rdx ; ret
0x000000000047a333 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000478f73 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000414bb6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000004267dd : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000049c2eb : mov qword ptr [rdi + rsi*8], rdx ; ret
0x0000000000431494 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004314d2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000478ede : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000043181b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b87 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004319fb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434b07 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431beb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434a87 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431dbc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004349f8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000431fbc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434968 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004321bc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004348d8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000478e69 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000431498 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000004314d6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000043164b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431747 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431693 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434c07 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000045c475 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000042c866 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000478e38 : mov qword ptr [rdi], r9 ; ret
0x000000000043b976 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000043b366 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000043b376 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000043b387 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000043b397 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000043b3a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004267da : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000043b357 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000400537 : mov qword ptr [rdi], rcx ; ret
0x000000000043b963 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004353e3 : mov qword ptr [rdi], rdx ; ret
0x000000000043584d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000043288d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000047a502 : mov qword ptr [rdi], rsi ; ret
0x000000000040f912 : mov qword ptr [rdx + 0x130], rcx ; ret
0x000000000043af0a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000004396fa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000043af2a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000043971a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000043af4a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000043973a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000043adda : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000043962a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000416575 : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000043ad83 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004395d3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047aed4 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004164e1 : mov qword ptr [rdx], rax ; ret
0x0000000000463d75 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000004014c9 : mov qword ptr [rip + 0x2c8560], rax ; xor eax, eax ; ret
0x000000000046dfd0 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x0000000000473fc1 : mov qword ptr [rsi], rax ; ret
0x000000000041b5ba : mov qword ptr [rsp + 0x10], r10 ; call rax
0x000000000047bcaf : mov qword ptr [rsp + 0x78], rbp ; call r12
0x000000000047beb2 : mov qword ptr [rsp + 0x78], rbx ; call r12
0x000000000047be01 : mov qword ptr [rsp + 0x88], rbx ; call r14
0x000000000041b671 : mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp], rcx ; call rdx
0x0000000000440425 : mov qword ptr [rsp + 8], rax ; call rbx
0x00000000004098d8 : mov qword ptr [rsp], rax ; call 0x405bd6
0x000000000041b676 : mov qword ptr [rsp], rcx ; call rdx
0x000000000044f50d : mov qword ptr fs:[rdx], rax ; ret
0x000000000043288c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000004b90fd : mov r10d, 0xcac982a4 ; call 0xffffffffaf0e2f7f
0x00000000004006be : mov r12, rax ; call 0x43e379
0x000000000046be87 : mov r12b, 0xe8 ; ret 0xfd34
0x000000000043ff13 : mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047d536 : mov r13, r15 ; mov r15, rax ; jmp 0x47d554
0x00000000004408b8 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000049c65c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000049c660 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000046d748 : mov r15, rax ; jmp 0x46d714
0x000000000047d539 : mov r15, rax ; jmp 0x47d551
0x0000000000499f50 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004734ac : mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000044495a : mov r9, r14 ; call rbx
0x0000000000466f77 : mov r9, r15 ; call rbx
0x0000000000411ba0 : mov rax, -1 ; pop rbx ; ret
0x0000000000412c12 : mov rax, -1 ; ret
0x00000000004666a0 : mov rax, 1 ; ret
0x00000000004666b0 : mov rax, 2 ; ret
0x00000000004666c0 : mov rax, 3 ; ret
0x00000000004666d0 : mov rax, 4 ; ret
0x00000000004666e0 : mov rax, 5 ; ret
0x00000000004666f0 : mov rax, 6 ; ret
0x0000000000466700 : mov rax, 7 ; ret
0x0000000000475de4 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x0000000000414cdb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000410c52 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414eb7 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004151d7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000487b32 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000004154fb : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000464e13 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000047ea2c : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000478390 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044f52e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000455311 : mov rax, qword ptr [rax*8 + 0x4b32c0] ; jmp rax
0x0000000000455362 : mov rax, qword ptr [rax*8 + 0x4b33c0] ; jmp rax
0x0000000000457452 : mov rax, qword ptr [rax*8 + 0x4b34c0] ; jmp rax
0x0000000000455f85 : mov rax, qword ptr [rax*8 + 0x4b37c0] ; jmp rax
0x0000000000460160 : mov rax, qword ptr [rax*8 + 0x4b3c40] ; jmp rax
0x0000000000461484 : mov rax, qword ptr [rax*8 + 0x4b3d40] ; jmp rax
0x0000000000461968 : mov rax, qword ptr [rax*8 + 0x4b3e40] ; jmp rax
0x00000000004601f6 : mov rax, qword ptr [rax*8 + 0x4b4140] ; jmp rax
0x000000000049c292 : mov rax, qword ptr [rax] ; ret
0x00000000004408bb : mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000445326 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000471a90 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000047aef0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x00000000004395d0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004a0c57 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x4a0c70 ; call rax
0x0000000000464e10 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000416820 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000049c2c0 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000049c310 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049c350 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000049c3b0 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000049c3a0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000049c360 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000044db4b : mov rax, qword ptr [rdi*8 + 0x6cb3e0] ; ret
0x0000000000478320 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x478338 ; ret
0x00000000004164de : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000004164d0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x4164d1 ; ret
0x0000000000473f59 : mov rax, qword ptr [rip + 0x2587b0] ; ret
0x000000000044ca00 : mov rax, qword ptr [rip + 0x27f691] ; ret
0x0000000000445690 : mov rax, qword ptr [rip + 0x2875d1] ; ret
0x0000000000416800 : mov rax, qword ptr [rip + 0x2b3259] ; ret
0x000000000049d201 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049a090 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000049a063 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000049a080 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000049d220 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000049c385 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000400bcf : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000447329 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000447c8c : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000040e016 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x00000000004787ab : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x68 ; ret
0x0000000000416cd3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420949 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041cbe4 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041ca74 : mov rax, r8 ; pop rbx ; ret
0x00000000004329a4 : mov rax, r8 ; ret
0x000000000046b0c4 : mov rax, r9 ; jne 0x46b11e ; ret
0x000000000046b145 : mov rax, r9 ; ret
0x0000000000412b79 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004636b8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046368b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000474731 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049c4ba : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000004132ec : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000474ba7 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040f9a8 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fa8d : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043fd2d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000411c0a : mov rax, rbx ; pop rbx ; ret
0x000000000041bfed : mov rax, rcx ; ret
0x0000000000416830 : mov rax, rdi ; ret
0x0000000000487e5d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047b062 : mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000041dcf7 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004174b4 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000004725de : mov rax, rdx ; call rax
0x000000000041e681 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041789b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000043e4c7 : mov rax, rdx ; pop rbx ; ret
0x0000000000426d58 : mov rax, rdx ; ret
0x000000000046a8e2 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000487c87 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb03 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000004520e3 : mov rax, rsi ; ret
0x000000000043dcfa : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000049c7e2 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049da29 : mov rbp, qword ptr [rsp + 8] ; jmp 0x49da49
0x000000000047893c : mov rbp, r9 ; nop ; jmp rdx
0x00000000004204ae : mov rbp, rax ; call 0x41c745
0x000000000043ff16 : mov rbp, rax ; call rax
0x0000000000476ee9 : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x0000000000440cc5 : mov rbx, rax ; call rax
0x000000000044fa2e : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000044ef25 : mov rbx, rdi ; test rax, rax ; je 0x44ef37 ; call rax
0x000000000043b340 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000478486 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000478414 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x000000000046d745 : mov rcx, r15 ; mov r15, rax ; jmp 0x46d717
0x00000000004329c0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004329c3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000473e32 : mov rcx, rsi ; cmp rcx, rdx ; jne 0x473e19 ; ret
0x000000000044046f : mov rdi, qword ptr [r12] ; call rbx
0x000000000040df9c : mov rdi, qword ptr [r13] ; call r14
0x0000000000440079 : mov rdi, qword ptr [r13] ; call rbx
0x000000000043ffe6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000440027 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000440422 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000045cf9d : mov rdi, qword ptr [rbp - 0x4a0] ; call rax
0x000000000047627d : mov rdi, qword ptr [rbp - 0x88] ; call rax
0x0000000000466824 : mov rdi, qword ptr [rbp] ; call r12
0x00000000004401ae : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000476e07 : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000464dd7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x464da5
0x0000000000447030 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x000000000049df3e : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000044b879 : mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004477a4 : mov rdi, qword ptr [rsp + 0x28] ; call r12
0x00000000004484cf : mov rdi, qword ptr [rsp + 0x28] ; call r14
0x0000000000446e31 : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000447858 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x000000000044b0b9 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x00000000004496d7 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000448a57 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000049ce2b : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000441dad : mov rdi, r12 ; call 0x41dfe5
0x000000000044fa31 : mov rdi, r12 ; call r15
0x0000000000440cea : mov rdi, r12 ; call rbx
0x0000000000466f74 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000445323 : mov rdi, r12 ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000441d9f : mov rdi, r13 ; call 0x41dfe5
0x000000000040ffdc : mov rdi, r13 ; call 0x42c255
0x000000000040e1db : mov rdi, r13 ; call r14
0x0000000000440d0f : mov rdi, r13 ; call rbx
0x000000000044fff3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x0000000000441d0b : mov rdi, r14 ; call 0x41dfe5
0x000000000044527d : mov rdi, r14 ; call r15
0x0000000000440d33 : mov rdi, r14 ; call rbx
0x0000000000441cfe : mov rdi, r15 ; call 0x41dfe5
0x00000000004105b4 : mov rdi, r15 ; call rax
0x0000000000440d53 : mov rdi, r15 ; call rbx
0x0000000000465133 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000004085b1 : mov rdi, rax ; call 0x41dfe9
0x0000000000421199 : mov rdi, rax ; call rcx
0x00000000004204ab : mov rdi, rax ; mov rbp, rax ; call 0x41c748
0x0000000000420537 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000049f25b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000044fa76 : mov rdi, rbp ; call r15
0x000000000041eab5 : mov rdi, rbp ; call rax
0x00000000004411f2 : mov rdi, rbp ; call rbx
0x000000000041f416 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000041be0e : mov rdi, rbx ; call 0x418065
0x000000000044c9b6 : mov rdi, rbx ; call r12
0x0000000000444c2c : mov rdi, rbx ; call r14
0x00000000004627d8 : mov rdi, rbx ; call r8
0x00000000004121c6 : mov rdi, rbx ; call rax
0x00000000004457f0 : mov rdi, rbx ; jmp 0x4457bc
0x000000000049f082 : mov rdi, rbx ; jne 0x49f076 ; pop rbx ; ret
0x0000000000414d43 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414eb3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000049bf68 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000049dd18 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000049ce2f : mov rdx, qword ptr [rbp] ; call r12
0x000000000047aed0 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000047aee4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000431600 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004353e0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000041e3c8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000004585f3 : mov rdx, r12 ; call 0x4636d9
0x000000000047e310 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e2d0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000417733 : mov rdx, rax ; jmp 0x417752
0x000000000042122f : mov rdx, rax ; jmp 0x4211fc
0x0000000000469935 : mov rdx, rax ; jmp 0x469940
0x000000000046b304 : mov rdx, rax ; jmp 0x46b2fb
0x000000000044fff6 : mov rdx, rbp ; call r15
0x000000000040ffd9 : mov rdx, rbp ; mov rdi, r13 ; call 0x42c258
0x000000000049cde4 : mov rsi, qword ptr [r14] ; call r12
0x000000000040df99 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x000000000049df3b : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000444955 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x0000000000450ac0 : mov rsi, qword ptr [rsp + 0x20] ; mov rdi, r12 ; call r15
0x000000000041eab0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000041e0c0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000047e313 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000047e2d3 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000044fa42 : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x000000000044fa73 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000420259 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000041fa94 : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000041f6ad : mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000049cd30 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000466f71 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000040e1d8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000452d1a : mov rsi, r15 ; mov rdi, rbx ; call rax
0x0000000000400576 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400585 ; ret
0x000000000046a89b : mov rsi, rbp ; xor edx, edx ; jmp 0x46a86b
0x000000000047adf5 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x251566] ; call rax
0x000000000044fa8e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000421196 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x0000000000414d88 : mov rsi, rcx ; jbe 0x414d2e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049ccd9 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x0000000000478939 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000049c7e6 : mov rsp, rcx ; ret
0x0000000000435875 : mov word ptr [r9 - 2], cx ; ret
0x0000000000442b89 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004267cd : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000004c752d : mov word ptr [rax], es ; add byte ptr [rax - 0x67], ah ; std ; call rcx
0x000000000043ba6c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043b3dc : mov word ptr [rdi + 0x10], cx ; ret
0x000000000043bb74 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000043b4c4 : mov word ptr [rdi + 0x18], cx ; ret
0x0000000000435617 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000043b938 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000043b318 : mov word ptr [rdi + 4], dx ; ret
0x000000000043b98a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043b35a : mov word ptr [rdi + 8], dx ; ret
0x00000000004328c2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000431b9c : mov word ptr [rdi - 2], cx ; ret
0x00000000004319b4 : mov word ptr [rdi - 2], dx ; ret
0x0000000000431b98 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x000000000043b2e3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000043dc75 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043561b : mov word ptr [rdi], cx ; ret
0x000000000043b8f3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000435683 : mov word ptr [rdi], dx ; ret
0x0000000000435872 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000004328bf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000043ae58 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000439698 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000043ae03 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000439653 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000417106 : mov word ptr [rdx], es ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004c1ffa : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000043dc78 : mov word ptr [rsi - 2], cx ; ret
0x00000000004c7fa8 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; test byte ptr [rcx], al ; ret
0x00000000004c8058 : mov word ptr [rsi], es ; add qword ptr [rdi], 3 ; pop rbx ; add cl, byte ptr [rdx] ; ret
0x000000000044f614 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004328be : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000044e065 : movabs al, byte ptr [0x274c08548004a66] ; call rax
0x000000000048aaad : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000004c0fc1 : movabs al, byte ptr [0x41380e0a01cf0301] ; ret
0x0000000000446289 : movabs al, byte ptr [0x89482fff7880fffb] ; ret 0x774
0x000000000048eea5 : movabs al, byte ptr [0xc74900758b48fffe] ; ret 0xc001
0x0000000000464dd3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00000000004a0e86 : movabs byte ptr [0x5b000000000022b3], al ; ret
0x000000000041c261 : movabs eax, dword ptr [0x950f243c8b48006c] ; ret 0x8348
0x00000000004bcbb0 : movabs eax, dword ptr [0xac00000000004bc3] ; ret
0x0000000000430122 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000043011e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004301cc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043b3b0 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bc2d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b57d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004352ef : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043527f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043520f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043519f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbcd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b51d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043512f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b53d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004350bf : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bc0d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b55d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000004356df : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043566f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004355ff : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043558f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043551f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354af : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043543f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353cf : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043535f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042672c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x426749 ; ret
0x0000000000426745 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000043484b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x00000000004348bb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ba44 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b3c4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b407 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3f7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b478 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b438 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b458 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b3d8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b579 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b519 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b539 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b559 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043506a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004350c4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043b3b1 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043bc2e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043b57e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004352f0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435280 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435210 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004351a0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbce : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000043b51e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x0000000000435130 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bbee : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043b53e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000004350c0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043bc0e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043b55e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000004356e0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435670 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435600 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435590 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435520 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354b0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435440 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004353d0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435360 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042672d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x426748 ; ret
0x0000000000426746 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000043484c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x00000000004348bc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434ff7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f77 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ee7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e67 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434de7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d67 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ce7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c67 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434be7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b67 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434ae7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434a67 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004349d7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434947 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004348b7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043ba45 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043b3c5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000043b418 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000043b408 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000043b3f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b479 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000043b439 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000043b459 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000043b3d9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043b57a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043b51a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043b53a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043b55a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043506b : movq qword ptr [rdi], mm0 ; ret
0x00000000004350c5 : movq qword ptr [rdi], mm1 ; ret
0x00000000004c0ba4 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, byte ptr [rax] ; add byte ptr [rax + 0x62], bh ; cmc ; call qword ptr [rsi]
0x00000000004b9ac2 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004bad1d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4bad76 ; jmp 0x4bacb7
0x00000000004c72a4 : movsb byte ptr [rdi], byte ptr [rsi] ; mov dword ptr [rax], eax ; add byte ptr [rax + 5], bh ; sti ; jmp rsi
0x00000000004bf3a4 : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add byte ptr [rax - 8], bl ; hlt ; call qword ptr [rax]
0x000000000041aca8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047455c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000417507 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000004c97e1 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000004bb355 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004bac11 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000415a4a : movsd dword ptr [rdi], dword ptr [rsi] ; mov esi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000478e92 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000491883 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000049183d : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004778f1 : movsx eax, dl ; neg eax ; ret
0x00000000004215b1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432c86 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042fc02 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000049b198 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000049ba99 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000049a147 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000499f21 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000049b6d1 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000042e54d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000043b179 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042fccf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004c0c91 : movsxd rsi, ebp ; call qword ptr [rdx]
0x000000000043d15c : movsxd rsi, esi ; ret 0x7520
0x000000000049183e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000491884 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000044f69c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047af9c : movzx eax, al ; neg eax ; ret
0x000000000047ad46 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046ac75 : movzx eax, al ; ret
0x0000000000413f2c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000415bc6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000049d14e : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000411ded : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004150ef : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000041306a : movzx eax, byte ptr [rax] ; ret
0x0000000000422948 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042e560 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000004261c0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000422963 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000414d8d : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000411e00 : movzx eax, byte ptr [rdx] ; ret
0x0000000000413f2d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043e3d7 : movzx eax, cl ; pop rbx ; ret
0x000000000043e3ff : movzx eax, dl ; pop rbx ; ret
0x000000000043d7ba : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d7b9 ; ret
0x000000000043d86a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x43d869 ; ret
0x000000000042f404 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000422960 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042e563 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040db1f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40db07 ; ret
0x000000000042e431 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000422a8f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042e2c3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000043d184 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x000000000043d1e4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x000000000043d1d4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000043d1c4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000043d1b4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x000000000043d1a4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043d194 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000435010 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f1b7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000043d16b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004356f0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004261c3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000004261e9 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000434f90 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435680 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000466821 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x000000000046ac74 : movzx rax, al ; ret
0x0000000000465907 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000463027 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041697f : neg eax ; ret
0x000000000043f4d1 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x00000000004a4114 : nop ; adc cl, bh ; call qword ptr [rax]
0x0000000000410478 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041344c : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043473b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000047bb5e : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x3950245c], cl ; ret
0x0000000000462d1b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042e86c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041b17a : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000004680e6 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], -0x6c ; ret
0x00000000004bf5d5 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x4bf5ed ; ret
0x00000000004bf5e3 : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000043e61f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000444b1f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042602f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004886ff : nop ; call rax
0x000000000040152b : nop ; cwde ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a38ac : nop ; jle 0x4a38aa ; jmp rax
0x00000000004117c2 : nop ; jmp 0x4116cc
0x000000000047893f : nop ; jmp rdx
0x00000000004a379c : nop ; loop 0x4a3799 ; call rax
0x00000000004317cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004319af : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000046aaef : nop ; mov eax, 0x66 ; syscall ; ret
0x0000000000416e2f : nop ; mov eax, 0xffffffff ; ret
0x000000000041010f : nop ; mov eax, dword ptr [rdx] ; ret
0x000000000046aebf : nop ; mov eax, edi ; ret
0x0000000000431d6f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043b90f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000411b9f : nop ; mov rax, -1 ; pop rbx ; ret
0x0000000000415b4f : nop ; mov rax, -1 ; ret
0x000000000049c30f : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000049a07f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000049d21f : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000417144 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004457ef : nop ; mov rdi, rbx ; jmp 0x4457bd
0x000000000041eaaf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x000000000043b3af : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004a40f4 : nop ; or al, 0xf9 ; call qword ptr [rax]
0x000000000046263f : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46260e
0x000000000046263e : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46260f
0x00000000004a40fc : nop ; or edi, ecx ; call qword ptr [rax]
0x00000000004a37ac : nop ; out -9, eax ; call rax
0x00000000004008ff : nop ; ret
0x00000000004678d1 : nop ; ret 0x6c
0x000000000040993c : nop ; ret 0xffff
0x00000000004be24d : nop ; std ; call rax
0x000000000041651f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000004261ef : nop ; xor eax, eax ; ret
0x00000000004260af : nop ; xor rax, rax ; ret
0x000000000047835b : nop dword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000047e1bb : nop dword ptr [rax + rax] ; call rbx
0x000000000043b2eb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400883 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000047acc3 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000412c1b : nop dword ptr [rax + rax] ; ret
0x00000000004133db : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000046666c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000400a95 : nop dword ptr [rax] ; call qword ptr [rbx + 0x10]
0x000000000047e019 : nop dword ptr [rax] ; call rax
0x000000000041695c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000410b9d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000042c7e4 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000041e3c4 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000004008c5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000041e784 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000043e5bc : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000406285 : nop dword ptr [rax] ; ret
0x00000000004113e4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000047e1ba : nop word ptr [rax + rax] ; call rbx
0x0000000000412c1a : nop word ptr [rax + rax] ; ret
0x00000000004133da : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004449e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000429f17 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b58f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046ad82 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041bfe9 : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000041c8fa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046acff : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x0000000000452970 : or al, 0x13 ; add rdx, r13 ; call qword ptr [r10 + rax*8]
0x0000000000422946 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041ca72 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x0000000000469933 : or al, 0x20 ; mov rdx, rax ; jmp 0x469942
0x000000000041b678 : or al, 0x24 ; call rdx
0x0000000000443e31 : or al, 0x24 ; je 0x443e45 ; mov edi, 0x6caae0 ; call rax
0x00000000004c1d0c : or al, 0x34 ; add byte ptr [rax], al ; jo 0x4c1d54 ; idiv bh ; ret
0x0000000000462642 : or al, 0x40 ; jmp 0x46260b
0x0000000000462641 : or al, 0x40 ; jmp 0x46260c
0x0000000000400b7a : or al, 0x41 ; call rsp
0x000000000044574f : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000478630 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000400bce : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004744ab : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000047b083 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000047b55f : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x000000000046238a : or al, 0x7e ; ret
0x000000000045d309 : or al, 0x83 ; ret
0x0000000000458c0c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004215b3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000429004 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432c88 : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042fc04 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048a06b : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000046aeb8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042e54f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000043b17b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004c860c : or al, 0x9d ; add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004c8c0c : or al, 0xa3 ; add byte ptr [rax], al ; and ch, ch ; cld ; call qword ptr [rax]
0x00000000004c97e0 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x000000000042fc08 : or al, 0xb ; jmp r9
0x000000000043b17f : or al, 0xb ; jmp rcx
0x0000000000435213 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000426733 : or al, 0xf3 ; ret
0x0000000000462aab : or al, 0xf6 ; ret 0xf04
0x000000000045d28c : or al, 0xf6 ; ret 0xf08
0x00000000004a40f9 : or al, 0xf9 ; call qword ptr [rax + 0x10fff90b]
0x00000000004a40f5 : or al, 0xf9 ; call qword ptr [rax]
0x00000000004c806c : or al, 7 ; or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004a37dd : or al, bh ; call rax
0x000000000044faa1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000422bdd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a121 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c01 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004bf3a5 : or al, byte ptr [rax] ; add byte ptr [rax - 8], bl ; hlt ; call qword ptr [rax]
0x00000000004bf3bd : or al, byte ptr [rax] ; add byte ptr [rax - 8], dl ; hlt ; call qword ptr [rdx]
0x000000000049c03a : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x0000000000408346 : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000047d620 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8008
0x0000000000489b97 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x00000000004c71d3 : or al, byte ptr [rcx] ; ret
0x0000000000496ed7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000477579 : or al, ch ; add dword ptr [rcx], ebp ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000408e07 : or al, ch ; ret
0x000000000040c208 : or al, ch ; ret 0xff99
0x00000000004653f8 : or al, ch ; ret 1
0x00000000004a3fc9 : or bh, cl ; call qword ptr [rdx + 0x22fff909]
0x00000000004a3fc5 : or bh, cl ; jmp qword ptr [rdx]
0x00000000004a4145 : or bh, cl ; jmp rax
0x0000000000442d68 : or bl, al ; nop word ptr [rax + rax] ; ret
0x000000000049da2d : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004402d2 : or bl, ch ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004353d3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044f947 : or bl, dh ; ret
0x000000000040a3b5 : or byte ptr [eax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x0000000000414f56 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x0000000000472471 : or byte ptr [r8 + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000410627 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000047404f : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000439628 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047e466 : or byte ptr [r8 - 0x77], cl ; ret
0x000000000040e8b2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000004408e7 : or byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004970b2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a093 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x000000000049ba97 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004396e7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000004642ff : or byte ptr [r9 - 0x77], r9b ; ret
0x0000000000410628 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000416dab : or byte ptr [rax + 0x29], cl ; ret 0x149
0x0000000000472472 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x0000000000416937 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000442595 : or byte ptr [rax + 0x39], cl ; ret
0x000000000041bee9 : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000479275 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000004c60ea : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000004c29d4 : or byte ptr [rax + 0xb], cl ; ret
0x00000000004759eb : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403e8c : or byte ptr [rax + 1], cl ; ret
0x000000000041b217 : or byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000467cbc : or byte ptr [rax - 0x39], cl ; ret
0x00000000004260cb : or byte ptr [rax - 0x73], cl ; add eax, 0x1d ; ret
0x00000000004260df : or byte ptr [rax - 0x73], cl ; add eax, 0x8449 ; ret
0x0000000000418b33 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000473f58 : or byte ptr [rax - 0x75], cl ; add eax, 0x2587b0 ; ret
0x000000000049eff3 : or byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax - 0x7f] ; call qword ptr [rax]
0x0000000000440421 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000004098e8 : or byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405bd7
0x000000000040df7a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000043962d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000474050 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043fd2c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000041b675 : or byte ptr [rax - 0x77], cl ; or al, 0x24 ; call rdx
0x0000000000439629 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000041f415 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000041789a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000047dec7 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000472da0 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000040e8b3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000472d49 : or byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000472d9f : or byte ptr [rax - 0x77], r9b ; ret 0x8948
0x000000000041bee5 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b06fc
0x000000000041bee4 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc27b06fd
0x000000000041caa8 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000044fac4 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000440817 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000042c876 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c8fe : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000462f0e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000473008 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c432 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x0000000000410f28 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004106dd : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x0000000000422e3c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000417744 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000417705 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x0000000000422e3d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a2c1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422e61 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004156dc : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041dba6 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000004449a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000043e480 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000049d1d7 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040a3b6 : or byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 8
0x00000000004c57d8 : or byte ptr [rax], al ; cli ; jmp rdx
0x000000000042b97e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000049c28f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000478c1c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000047e0f9 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000049c2fe : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000489ef3 : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000473f9c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x000000000041dda0 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000405923 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004017a5 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412baa : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x0000000000462640 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46260d
0x0000000000457917 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040f6b1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000470c59 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000047a46b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000046a094 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x000000000045c279 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000047f40a : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000049ba98 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000004c806e : or byte ptr [rcx + 0xb], al ; add esp, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x00000000004c0ee7 : or byte ptr [rcx + 0xb], al ; ret
0x0000000000461ecb : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000047ff7b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000479510 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000040e1d7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x000000000047a472 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000041190a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000004396e8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x0000000000464300 : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000489a52 : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000041d639 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000040e0ca : or byte ptr [rcx - 0x7d], cl ; ret
0x000000000044fd43 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000004489a9 : or byte ptr [rcx - 0xa], al ; ret
0x00000000004c03b8 : or byte ptr [rcx - 0xb], cl ; jmp qword ptr [rcx]
0x000000000045b151 : or byte ptr [rcx], al ; ret 0xd529
0x000000000044292e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000451a90 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004178db : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bb5de : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000471117 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000470d31 : or byte ptr [rdi + 0x6caaa0], bh ; pop rbx ; pop rbp ; jmp rax
0x00000000004781c1 : or byte ptr [rdi + 0x6caae0], bh ; call rax
0x00000000004034fb : or byte ptr [rdi + 0x6cba40], bh ; call r15
0x00000000004bff5b : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000004c52a4 : or byte ptr [rdi + 0xb], al ; jae 0x4c52b8 ; ret
0x0000000000482118 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000449d33 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000044cf79 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x00000000004150ee : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000462501 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000487e99 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000414f57 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004301cb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000044dc04 : or byte ptr [rdi], cl ; test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000455a56 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000040046c : or byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000476886 : or byte ptr [rsp + 0x5b], dh ; ret
0x00000000004a4111 : or cl, bh ; call qword ptr [rax + 0x10fff910]
0x00000000004a40d1 : or cl, bh ; jmp qword ptr [rax + 0x20fff910]
0x000000000047b1e7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000044cb00 : or cl, byte ptr [rax + 0x39] ; ret 0x3a76
0x0000000000411dde : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000412627 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x0000000000464d9f : or cl, byte ptr [rax - 0x77] ; ret
0x000000000040fbbc : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000042538a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004525d7 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000048a033 : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000463d77 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x0000000000444142 : or cl, byte ptr [rbx - 0x3f7affd8] ; je 0x444158 ; ret
0x00000000004004d8 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000489ef9 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000408048 : or cl, ch ; ret
0x0000000000462912 : or cl, ch ; ret 0xfffc
0x0000000000488125 : or cl, cl ; cmove rax, rdx ; ret
0x00000000004352f3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000049e635 : or dh, bl ; ret
0x000000000047e1b7 : or dh, byte ptr [rbp - 0x4d] ; nop word ptr [rax + rax] ; call rbx
0x000000000041bac3 : or dh, dh ; ret 0x7404
0x000000000041ba3e : or dh, dh ; ret 0xf04
0x000000000040277e : or dh, dh ; ret 0xfdf
0x00000000004bcb18 : or dl, al ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; ret 0x4b
0x000000000040da57 : or dword ptr [rax + rax*8 - 0x38b7938c], eax ; ret 0xfff0
0x000000000040212a : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x000000000047627c : or dword ptr [rax - 0x75], ecx ; mov ebp, 0xffffff78 ; call rax
0x000000000042381e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004bf2ed : or dword ptr [rax], eax ; add al, al ; div ah ; call qword ptr [rbx]
0x0000000000422d6d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b82f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422cc7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041023f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000048a013 : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000042f986 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412420 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000478d6c : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000041fd66 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000041ff4c : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000004015e4 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x00000000004786a6 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000004748b9 : or dword ptr [rip + 0x256250], 1 ; pop rbx ; ret
0x00000000004c71d0 : or eax, 0x10a0303 ; ret
0x00000000004c7280 : or eax, 0x1370303 ; ret
0x000000000043bbd1 : or eax, 0x1c478d48 ; ret
0x0000000000415892 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000004c71c0 : or eax, 0x34b0303 ; ret
0x00000000004c7220 : or eax, 0x35b0303 ; ret
0x0000000000461efa : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462602 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000042ce52 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000048a087 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000429d77 : or eax, 0x83480000 ; ret 0x4910
0x0000000000429de1 : or eax, 0x83480000 ; ret 0xe910
0x00000000004a146d : or eax, 0x834825eb ; ret 0x4810
0x00000000004a40f1 : or eax, 0xc90fff9 ; stc ; call qword ptr [rax]
0x00000000004ae719 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004bac13 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000440d4e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x00000000004351a3 : or eax, 0xf7f0ff3 ; ret
0x000000000044434c : or eax, 0xffffffff ; ret
0x00000000004c806f : or eax, dword ptr [r11] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045df2f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000422b0d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429f81 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422b31 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044d3f4 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x00000000004c8070 : or eax, dword ptr [rbx] ; add dword ptr es:[rdx], ecx ; ret
0x000000000045df2e : or eax, dword ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044276e : or ebp, 0x1b ; add byte ptr [rax], al ; ret
0x000000000043f26e : or ebp, 0x50 ; add byte ptr [rax], al ; ret
0x0000000000416514 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041de00 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; xchg eax, esi ; ret
0x00000000004c9828 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x0000000000435363 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047a6de : or ebx, esi ; ret
0x000000000041d43a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000418c84 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000040fa8c : or ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000447b45 : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000048a04f : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000004c526e : or ecx, dword ptr [rdx + 0xa] ; ret
0x00000000004a3f91 : or ecx, edi ; call rdx
0x00000000004a3fcd : or ecx, edi ; jmp qword ptr [rdx]
0x00000000004a3f8d : or ecx, edi ; ljmp ptr [rcx + rcx] ; stc ; call rdx
0x000000000042c864 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004a37e5 : or edi, eax ; call rax
0x00000000004a40fd : or edi, ecx ; call qword ptr [rax]
0x00000000004a3f41 : or edi, ecx ; jmp rax
0x00000000004a4141 : or edi, ecx ; push qword ptr [rax + 0xa] ; stc ; jmp rax
0x00000000004a3f3d : or edi, ecx ; push qword ptr [rax + 0xb] ; stc ; jmp rax
0x00000000004c52a6 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000004bf5e0 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000435283 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000412421 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004353d2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435362 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004352f2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004c52a5 : or r14d, dword ptr [r11 + 0xa] ; ret
0x0000000000435282 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042c863 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x000000000044caff : or r9b, byte ptr [r8 + 0x39] ; ret 0x3a76
0x0000000000462911 : or r9b, r13b ; ret 0xfffc
0x00000000004c526d : or r9d, dword ptr [r10 + 0xa] ; ret
0x00000000004c727f : or rax, 0x1370303 ; ret
0x00000000004c71bf : or rax, 0x34b0303 ; ret
0x00000000004c721f : or rax, 0x35b0303 ; ret
0x0000000000461ef9 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462601 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000044434b : or rax, 0xffffffffffffffff ; ret
0x0000000000496db2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000405e17 : out -0x18, eax ; ret
0x00000000004b9ac0 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000441ff5 : out -0x41, eax ; std ; dec dword ptr [rax - 0x75] ; jge 0x442005 ; call rbx
0x000000000040320b : out -0x77, eax ; ret 0x8948
0x00000000004bb7e8 : out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000434bea : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004be801 : out -3, eax ; call rsp
0x00000000004be82d : out -3, eax ; jmp qword ptr [rax]
0x00000000004be805 : out -3, eax ; jmp rsp
0x00000000004a3bcd : out -8, eax ; call qword ptr [rax]
0x00000000004a3bed : out -8, eax ; call rax
0x00000000004a37ad : out -9, eax ; call rax
0x000000000042c3d4 : out 0x29, al ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000044fa33 : out 0x41, eax ; call rdi
0x0000000000475999 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000044fa44 : out 0x48, al ; mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000420536 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000044fa75 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000445325 : out 0x48, eax ; mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000466f76 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x000000000041fa96 : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x0000000000415be3 : out 0x5b, al ; ret
0x00000000004733fa : out 0x5b, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000042025b : out 0x5d, al ; pop r12 ; jmp rax
0x000000000047e315 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000047e2d5 : out 0x89, al ; out dx, eax ; call rax
0x0000000000434b6a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a37a9 : out 0xf7, al ; call qword ptr [rax - 0x2f000819]
0x00000000004a3b49 : out 0xf8, al ; inc dword ptr [rax - 0x18] ; clc ; call rax
0x00000000004a3b69 : out 0xf8, al ; jmp qword ptr [rax]
0x00000000004c50c1 : out 0xf9, al ; call qword ptr [rsi]
0x000000000040fb94 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000401696 : out 3, eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000042c6d9 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041d43d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x00000000004a4159 : out dx, al ; clc ; call rax
0x00000000004c19f1 : out dx, al ; cmc ; call qword ptr [rdx]
0x00000000004bac17 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000041dd7e : out dx, al ; fcos ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000043181a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000041f6af : out dx, al ; mov rdi, rbx ; call rax
0x0000000000434f7a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b6de : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046a89d : out dx, al ; xor edx, edx ; jmp 0x46a869
0x000000000041b7c3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000041e595 : out dx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000418c87 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000049f25d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000441da1 : out dx, eax ; call 0x41dfe3
0x000000000040ffde : out dx, eax ; call 0x42c253
0x000000000047e317 : out dx, eax ; call qword ptr [rbx]
0x000000000040e1dd : out dx, eax ; call r14
0x000000000044fa78 : out dx, eax ; call r15
0x000000000041eab7 : out dx, eax ; call rax
0x0000000000440d11 : out dx, eax ; call rbx
0x000000000045c1f5 : out dx, eax ; jmp qword ptr [rsi]
0x000000000043164a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431746 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431692 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044fff5 : out dx, eax ; mov rdx, rbp ; call r15
0x0000000000434ffa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b7dd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041f418 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000415b8e : out dx, eax ; pop rbx ; ret
0x000000000042e5d3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5e8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e5fd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d903 : out dx, eax ; ret 0xf66
0x00000000004098dd : out dx, eax ; ret 0xffff
0x000000000042faec : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fad5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fabe : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e57a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004296ee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000443120 : outsb dx, byte ptr [rsi] ; add byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x00000000004c57d5 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; or byte ptr [rax], al ; cli ; jmp rdx
0x000000000043bd2e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004bb3c3 : outsb dx, byte ptr [rsi] ; ja 0x4bb34c ; ret 0x48f
0x000000000041dece : outsb dx, byte ptr [rsi] ; ret 0x2a
0x000000000040995e : outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000000004b9104 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000426b9a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000421708 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000004271be : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042f8ed : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042f98d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000046590a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042f8f2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004b9ac6 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000431f87 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000042f992 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x000000000046595a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000441f6d : outsd dx, dword ptr [rsi] ; sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b9ac5 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000041addf : paddd mm7, mm7 ; dec dword ptr [rax - 0x39] ; ret 0xffd0
0x0000000000422a02 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000466664 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x000000000046664f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000422a01 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004baec5 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004baec6 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004238af : pmovmskb edx, mm4 ; test edx, edx ; je 0x4238c3 ; bsf eax, edx ; ret
0x00000000004427e5 : pop r10 ; ret
0x00000000004bb34f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000041e78a : pop r12 ; jmp rax
0x000000000042053c : pop r12 ; jmp rcx
0x000000000043ff5f : pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff79 : pop r12 ; mov esi, 3 ; jmp rax
0x00000000004733fd : pop r12 ; pop r13 ; jmp rax
0x000000000048ee4c : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048edca : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402073 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040144f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401572 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040f4f5 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000405926 : pop r12 ; pop r13 ; ret
0x000000000047b48c : pop r12 ; pop r14 ; ret
0x000000000046b261 : pop r12 ; pop rbp ; ret
0x00000000004005aa : pop r12 ; ret
0x00000000004733ff : pop r13 ; jmp rax
0x000000000048ee4e : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048edcc : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402075 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401451 : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401574 : pop r13 ; pop r14 ; ret
0x000000000040f4f7 : pop r13 ; pop rbp ; ret
0x0000000000405928 : pop r13 ; ret
0x000000000048ee50 : pop r14 ; fmul st(0) ; ret
0x000000000048edce : pop r14 ; fmulp st(1) ; ret
0x000000000044172f : pop r14 ; pop r15 ; jmp rax
0x0000000000402077 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401453 : pop r14 ; pop r15 ; ret
0x0000000000401576 : pop r14 ; ret
0x0000000000441731 : pop r15 ; jmp rax
0x0000000000402079 : pop r15 ; pop rbp ; ret
0x0000000000401455 : pop r15 ; ret
0x00000000004187d1 : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004bed88 : pop rax ; add edi, esi ; call rdi
0x00000000004bf3a8 : pop rax ; clc ; hlt ; call qword ptr [rax]
0x00000000004187d2 : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000004c1f88 : pop rax ; mov esi, dr0 ; call qword ptr [rax]
0x0000000000478516 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000468579 : pop rax ; ret 0x6c
0x0000000000409974 : pop rax ; ret 0xffff
0x000000000047920a : pop rbp ; enter -0x74b8, 0x14 ; ret
0x000000000041dda2 : pop rbp ; jmp rax
0x0000000000418bf2 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000040087b : pop rbp ; mov edi, 0x6cb4f0 ; jmp rax
0x000000000041e789 : pop rbp ; pop r12 ; jmp rax
0x000000000042053b : pop rbp ; pop r12 ; jmp rcx
0x000000000043ff5e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff78 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004733fc : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000048ee4b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048edc9 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040144e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401571 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405925 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b48b : pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004005a9 : pop rbp ; pop r12 ; ret
0x000000000048ee4f : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000048edcd : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000044172e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000402076 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401452 : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401575 : pop rbp ; pop r14 ; ret
0x000000000040f4f8 : pop rbp ; pop rbp ; ret
0x000000000047a478 : pop rbp ; pop rbx ; ret
0x0000000000400471 : pop rbp ; ret
0x0000000000479212 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000412bac : pop rbp ; sub rax, rdx ; ret
0x00000000004c805e : pop rbx ; add cl, byte ptr [rdx] ; ret
0x00000000004b8698 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000043e42c : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000043e45f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004b8696 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000487b3a : pop rbx ; jmp rax
0x00000000004110de : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000004748d7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x000000000043e4c3 : pop rbx ; mov eax, eax ; ret
0x0000000000462e2a : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000045a48e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000047686e : pop rbx ; mov edi, 0x6caae0 ; jmp rax
0x0000000000414d46 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000414eb6 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000004636b7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000420258 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000040f4f4 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000046b260 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000041dda1 : pop rbx ; pop rbp ; jmp rax
0x000000000041e788 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000042053a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000043ff5d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000043ff77 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x00000000004733fb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x0000000000401570 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405924 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b48a : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000004005a8 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000400470 : pop rbx ; pop rbp ; ret
0x0000000000412bab : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000400c95 : pop rbx ; ret
0x00000000004bb980 : pop rbx ; ret 0x6f9
0x00000000004204e1 : pop rbx ; ret 0xffff
0x0000000000466ac9 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000044082a : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000047acb8 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x2516a3] ; jmp rax
0x00000000004c421d : pop rcx ; add byte ptr [rax], al ; loopne 0x4c41f1 ; std ; call qword ptr [rbx]
0x00000000004c428d : pop rcx ; add byte ptr [rax], al ; mov al, 0xb2 ; clc ; call qword ptr [rcx]
0x00000000004c4275 : pop rcx ; add byte ptr [rax], al ; test al, 0xb2 ; clc ; call qword ptr [rdi]
0x0000000000474699 : pop rcx ; dec dword ptr [rax + 0x63] ; ret
0x0000000000488d8f : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000004301c8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000446aaa : pop rdi ; add byte ptr [rax - 0x7f], cl ; ret 0x5f20
0x000000000042be6d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000431be9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004319f9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bac3e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000441732 : pop rdi ; jmp rax
0x00000000004b9c01 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000431819 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431649 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431745 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000431691 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000040207a : pop rdi ; pop rbp ; ret
0x0000000000401456 : pop rdi ; ret
0x00000000004be21d : pop rdi ; std ; call rax
0x00000000004885a2 : pop rdx ; and al, 0 ; ret
0x00000000004a3851 : pop rdx ; clc ; call qword ptr [rax]
0x00000000004ba821 : pop rdx ; je 0x4ba7eb ; ret 0xacfc
0x00000000004a384f : pop rdx ; jo 0x4a38b0 ; clc ; call qword ptr [rax]
0x00000000004bb7e7 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x00000000004427e4 : pop rdx ; pop r10 ; ret
0x0000000000478517 : pop rdx ; pop rbx ; ret
0x00000000004a384e : pop rdx ; pop rdx ; jo 0x4a38b1 ; clc ; call qword ptr [rax]
0x00000000004a384d : pop rdx ; pop rdx ; pop rdx ; jo 0x4a38b2 ; clc ; call qword ptr [rax]
0x00000000004a384c : pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x4a38b3 ; clc ; call qword ptr [rax]
0x00000000004a384b : pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x4a38b4 ; clc ; call qword ptr [rax]
0x00000000004a384a : pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; pop rdx ; jo 0x4a38b5 ; clc ; call qword ptr [rax]
0x0000000000442809 : pop rdx ; pop rsi ; ret
0x00000000004427e6 : pop rdx ; ret
0x00000000004bb350 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000042bd6e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004738d3 : pop rsi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004260ec : pop rsi ; add dword ptr [rax], eax ; ret
0x00000000004c0a59 : pop rsi ; cmc ; jmp qword ptr [rax]
0x000000000048ee51 : pop rsi ; fmul st(0) ; ret
0x000000000048edcf : pop rsi ; fmulp st(1) ; ret
0x00000000004bedc9 : pop rsi ; hlt ; call qword ptr [rax]
0x000000000042c875 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000441730 : pop rsi ; pop r15 ; jmp rax
0x0000000000402078 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401454 : pop rsi ; pop r15 ; ret
0x0000000000401577 : pop rsi ; ret
0x00000000004bfd5c : pop rsp ; adc al, 0 ; add byte ptr [rax + 0x28], dl ; cmc ; call qword ptr [rax]
0x0000000000429900 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c45d5 : pop rsp ; add byte ptr [rax], al ; fcom st(5) ; clc ; call qword ptr [rax]
0x00000000004c45bd : pop rsp ; add byte ptr [rax], al ; rcl ch, 1 ; clc ; call qword ptr [rbx]
0x00000000004c45ed : pop rsp ; add byte ptr [rax], al ; rcl ch, 1 ; clc ; call qword ptr [rdx]
0x00000000004c6a5c : pop rsp ; add dword ptr [rax], 0xfaa86000 ; call rdx
0x000000000042a600 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000047beb4 : pop rsp ; and al, 0x78 ; call r12
0x00000000004c255c : pop rsp ; cmp al, 0 ; add byte ptr [rax], ah ; ret
0x000000000041e78b : pop rsp ; jmp rax
0x000000000042053d : pop rsp ; jmp rcx
0x000000000043ff60 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000043ff7a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000422e60 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004733fe : pop rsp ; pop r13 ; jmp rax
0x000000000048ee4d : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000048edcb : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000044172c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000402074 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401450 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401573 : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040f4f6 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000405927 : pop rsp ; pop r13 ; ret
0x000000000047b48d : pop rsp ; pop r14 ; ret
0x000000000046b262 : pop rsp ; pop rbp ; ret
0x00000000004005ab : pop rsp ; ret
0x000000000041ae1d : pop rsp ; sub byte ptr [rdx], cl ; call 0x417056
0x00000000004c860d : popfq ; add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004c8625 : popfq ; add byte ptr [rax], al ; js 0x4c8633 ; cld ; call qword ptr [rdx]
0x000000000049b85e : popfq ; ret 0xf45
0x00000000004943b0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045f839 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x00000000004350c2 : psllq mm1, qword ptr [r15] ; jg 0x4350dd ; ret
0x00000000004350c3 : psllq mm1, qword ptr [rdi] ; jg 0x4350dc ; ret
0x000000000043b3f6 : psllq mm1, qword ptr [rdi] ; jg 0x43b40a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b3f5 : psllq mm1, qword ptr [rdi] ; jg 0x43b40b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000043b457 : psllq mm1, qword ptr [rdi] ; jg 0x43b46c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000004a37f1 : psubb mm7, mm7 ; push rax ; adc eax, edi ; call rax
0x00000000004a3f9d : psubw mm7, mm7 ; psubw mm7, mm7 ; ret 0xf90e
0x00000000004a3fa1 : psubw mm7, mm7 ; ret 0xf90e
0x00000000004be858 : push -0x3f0001fd ; add edi, esi ; jmp qword ptr [rax]
0x0000000000452adf : push -0x76000005 ; ret 0x8941
0x000000000047bd6e : push -0x7a000006 ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000487946 : push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000480f9f : push -0x7c000006 ; ret 0x8908
0x0000000000485aba : push -0x9000007 ; ret 0xf02
0x000000000043bd14 : push -0x9ffffff ; ret 0x7501
0x000000000041f6ac : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000004be1f1 : push 0x6a00fffd ; std ; jmp rax
0x00000000004bb3c2 : push 0x6e ; ja 0x4bb34d ; ret 0x48f
0x00000000004be1f5 : push 0xfd ; jmp rax
0x000000000048594c : push 0xffffff9 ; xchg eax, esp ; ret
0x000000000045a3d1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000004be83b : push qword ptr [rax + 0x20fffe03] ; add edi, esi ; jmp qword ptr [rbx]
0x00000000004a3cd7 : push qword ptr [rax + 0x40fff919] ; sbb ecx, edi ; call rax
0x00000000004be273 : push qword ptr [rax + 0x45] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004be1e7 : push qword ptr [rax + 0x64] ; std ; inc dword ptr [rax + 0x66] ; std ; jmp qword ptr [rax]
0x00000000004a386f : push qword ptr [rax + 0x67] ; clc ; call qword ptr [rax]
0x00000000004a4143 : push qword ptr [rax + 0xa] ; stc ; jmp rax
0x00000000004a3f3f : push qword ptr [rax + 0xb] ; stc ; jmp rax
0x00000000004a3c4b : push qword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a3c47 : push qword ptr [rax - 0x1c] ; clc ; push qword ptr [rax - 0x1a] ; clc ; jmp qword ptr [rax]
0x00000000004a42cb : push qword ptr [rax - 0x3f000689] ; ja 0x4a42d4 ; call rax
0x00000000004a424f : push qword ptr [rax - 0x3f00068f] ; jno 0x4a4258 ; jmp rax
0x00000000004a420f : push qword ptr [rax - 0x3f000690] ; jo 0x4a4218 ; call rax
0x00000000004a3867 : push qword ptr [rax] ; clc ; call rax
0x00000000004a38b3 : push qword ptr [rax] ; cmp eax, 0xf88280ff ; call rax
0x00000000004a37cb : push qword ptr [rax] ; fdivrp st(7) ; call rax
0x000000000049d1fd : push qword ptr [rax] ; jne 0x49d230 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000049e05d : push qword ptr [rax] ; jne 0x49e090 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004a3b5f : push qword ptr [rax] ; loop 0x4a3b5f ; jmp qword ptr [rax]
0x00000000004a3b7b : push qword ptr [rax] ; loopne 0x4a3b7b ; call qword ptr [rax]
0x00000000004a39d3 : push qword ptr [rax] ; mov edx, 0xb91efff8 ; clc ; jmp qword ptr [rax]
0x000000000043d698 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000410c3b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000041553d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000464955 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004648fd : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000415be1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000004429b2 : push qword ptr [rbp - 0xd] ; xor eax, eax ; leave ; ret
0x0000000000415b89 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000466c1a : push qword ptr [rbx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x0000000000411111 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004747c9 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000045a3d2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x000000000040db7d : push qword ptr [rdi + 0x20] ; ret
0x000000000043f4a8 : push qword ptr [rdi + 0x35] ; ret
0x000000000043f54c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x000000000043f2ca : push qword ptr [rdi + 3] ; ret
0x000000000043f319 : push qword ptr [rdi + 4] ; ret
0x000000000046ab9f : push qword ptr [rdi + 6] ; ret
0x000000000044f945 : push qword ptr [rdi + 8] ; ret
0x000000000046a7bc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x0000000000415066 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000004a3dc3 : push qword ptr [rdx + 0x42fff914] ; adc al, 0xf9 ; call rdx
0x00000000004a3d1f : push qword ptr [rsi + 0x46fff918] ; sbb cl, bh ; call rsi
0x00000000004be3fb : push qword ptr [rsi + rcx*8] ; std ; call rsp
0x000000000046aa6d : push qword ptr [rsi + rsi - 0x77] ; ret 0xe283
0x0000000000414c9f : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a37fc : push rax ; adc al, 0xf8 ; call rax
0x0000000000463a2a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000416521 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041b180 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000004a37f4 : push rax ; adc eax, edi ; call rax
0x00000000004182f4 : push rax ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000000004a41cc : push rax ; add bh, cl ; jmp qword ptr [rax]
0x0000000000468e5d : push rax ; add byte ptr [r8 + 0xf], cl ; ret 0x8d48
0x0000000000414ca0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000043f270 : push rax ; add byte ptr [rax], al ; ret
0x00000000004a4188 : push rax ; add cl, bh ; call rax
0x000000000041a5bf : push rax ; add eax, 0xf6410000 ; ret 0xf01
0x0000000000425d05 : push rax ; add eax, ebp ; add byte ptr fs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004748a2 : push rax ; and eax, 0x89485300 ; ret
0x00000000004449e8 : push rax ; call rbx
0x00000000004a41a4 : push rax ; clc ; call rax
0x00000000004bf3c0 : push rax ; clc ; hlt ; call qword ptr [rdx]
0x00000000004a41bc : push rax ; cld ; clc ; call rax
0x00000000004a4178 : push rax ; cli ; clc ; call rax
0x000000000040fb96 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004a38db : push rax ; cmp eax, 0x4000fff8 ; clc ; call qword ptr [rax]
0x00000000004a3764 : push rax ; div edi ; jmp qword ptr [rax]
0x00000000004a3b78 : push rax ; fdivp st(0) ; push qword ptr [rax] ; loopne 0x4a3b7e ; call qword ptr [rax]
0x00000000004a4168 : push rax ; hlt ; clc ; call rax
0x00000000004a41ac : push rax ; idiv al ; call rax
0x00000000004a4170 : push rax ; idiv eax ; call rax
0x00000000004a4194 : push rax ; in eax, dx ; clc ; call rax
0x00000000004a4160 : push rax ; int1 ; clc ; call rax
0x00000000004a42d7 : push rax ; ja 0x4a42d8 ; call qword ptr [rax]
0x00000000004a42b3 : push rax ; jbe 0x4a42b4 ; call qword ptr [rax]
0x000000000047841c : push rax ; jmp qword ptr [rax]
0x00000000004a425b : push rax ; jno 0x4a4260 ; inc dword ptr [rax] ; jb 0x4a4264 ; jmp qword ptr [rax]
0x00000000004a421f : push rax ; jo 0x4a4224 ; inc dword ptr [rax] ; jno 0x4a4228 ; call qword ptr [rax]
0x00000000004a42f7 : push rax ; js 0x4a42f8 ; call qword ptr [rax]
0x00000000004a3798 : push rax ; loope 0x4a3799 ; call qword ptr [rax - 0x2f00081e]
0x00000000004a3b5c : push rax ; loopne 0x4a3b5e ; push qword ptr [rax] ; loop 0x4a3b62 ; jmp qword ptr [rax]
0x00000000004a3a03 : push rax ; mov bh, 0xf8 ; jmp rax
0x00000000004be23c : push rax ; mov bh, ch ; call rax
0x0000000000446aba : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004be2e0 : push rax ; mov esp, 0xbca8fffd ; std ; call rax
0x0000000000487fb6 : push rax ; mov rax, rbx ; pop rbx ; ret
0x000000000044b878 : push rax ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x00000000004be24c : push rax ; nop ; std ; call rax
0x00000000004a37dc : push rax ; or al, bh ; call rax
0x0000000000418b32 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x00000000004a410f : push rax ; or cl, bh ; call qword ptr [rax + 0x10fff910]
0x000000000041bac2 : push rax ; or dh, dh ; ret 0x7404
0x000000000041ba3d : push rax ; or dh, dh ; ret 0xf04
0x0000000000422d6c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a37e4 : push rax ; or edi, eax ; call rax
0x00000000004a3f3b : push rax ; or edi, ecx ; push qword ptr [rax + 0xb] ; stc ; jmp rax
0x00000000004a37a8 : push rax ; out 0xf7, al ; call qword ptr [rax - 0x2f000819]
0x00000000004a4158 : push rax ; out dx, al ; clc ; call rax
0x000000000046682e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446abc : push rax ; push rsp ; ret
0x000000000046775b : push rax ; ret 0x6c
0x00000000004c5d20 : push rax ; sbb al, 0xfa ; jmp rdi
0x0000000000416516 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004649ca : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004a3ed8 : push rax ; sbb ecx, edi ; jmp rax
0x00000000004a41b4 : push rax ; stc ; clc ; call rax
0x00000000004c9581 : push rax ; std ; call qword ptr [rdx]
0x00000000004a4180 : push rax ; std ; clc ; call rax
0x00000000004bfd60 : push rax ; sub ch, dh ; call qword ptr [rax]
0x00000000004be22c : push rax ; test bh, ch ; call rax
0x00000000004be254 : push rax ; xchg eax, ebx ; std ; call rax
0x00000000004be234 : push rax ; xchg ebp, edi ; call rax
0x0000000000415bdd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000049f267 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000049bbc2 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000047996f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000440671 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000474708 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000046be83 : push rbp ; enter -0x76bc, 0x45 ; mov ah, 0xe8 ; ret 0xfd34
0x00000000004954f8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004c6a4e : push rbp ; ret
0x0000000000465131 : push rbp ; ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000042602a : push rbp ; xor rax, rax ; ret
0x0000000000400a99 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047ad44 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046d8c6 : push rbx ; add dword ptr [rdx + rdx*8 - 0x7cb7eb8c], eax ; ret
0x0000000000423749 : push rbx ; add qword ptr [rax], rax ; ret
0x000000000044d3f2 : push rbx ; je 0x44d409 ; cmp esi, 3 ; je 0x44d409 ; pop rbx ; ret
0x00000000004648c9 : push rbx ; je 0x46492d ; pop rbp ; pop r12 ; ret
0x000000000046496e : push rbx ; je 0x4649d2 ; pop rbp ; pop r12 ; ret
0x0000000000462aaa : push rbx ; or al, 0xf6 ; ret 0xf04
0x0000000000416daa : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x149
0x00000000004150ed : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000040d6c9 : push rbx ; ret
0x0000000000403339 : push rbx ; rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000414044 : push rbx ; sub cl, ch ; ret 0xfffe
0x00000000004121c1 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004ba81c : push rbx ; xchg eax, edx ; jae 0x4ba7fb ; push rsi ; pop rdx ; je 0x4ba7f0 ; ret 0xacfc
0x00000000004b9aa5 : push rcx ; call qword ptr [rsi]
0x00000000004359dd : push rcx ; jl 0x435a2e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000435b44 : push rcx ; jl 0x435b95 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000004a39e0 : push rcx ; mov bh, 0xf8 ; jmp qword ptr [rax]
0x0000000000489ef5 : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000043b93a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000435229 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000043b9ec : push rdi ; add eax, 0xc478d48 ; ret
0x000000000042668b : push rdi ; add r11b, sil ; ret
0x00000000004314d8 : push rdi ; clc ; ret
0x0000000000431650 : push rdi ; cld ; ret
0x0000000000432177 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434b09 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000468811 : push rdi ; cmp ah, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfb57
0x0000000000434a89 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004348da : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000414be4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000043496a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000045d308 : push rdi ; or al, 0x83 ; ret
0x000000000045d28b : push rdi ; or al, 0xf6 ; ret 0xf08
0x000000000047a46a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000047ff7a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000047a471 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000043bbd0 : push rdi ; or eax, 0x1c478d48 ; ret
0x0000000000487945 : push rdi ; push -0x7ab70007 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000042f8ee : push rdi ; ret
0x0000000000400fc5 : push rdi ; ret 0
0x00000000004bcb38 : push rdi ; ret 0x4b
0x000000000042f98e : push rdi ; ret 0xff3
0x0000000000432377 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000431b9a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000431f77 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c5ba : push rdi ; sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x0000000000444169 : push rdi ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000004105af : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x000000000046590b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000046aefa : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004c60ed : push rdx ; ret
0x0000000000446ab6 : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3d48 : push rsi ; adc al, 0xf9 ; jmp rsi
0x000000000042e5d4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043ded9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x43df30 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000463e92 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004435d9 : push rsi ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004354c1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000435531 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000043b385 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435451 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000043b323 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042e5e9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000431602 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000431d71 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004319a5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431b85 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000431d65 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004317c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bb3c0 : push rsi ; cli ; push 0x6e ; ja 0x4bb34f ; ret 0x48f
0x000000000043d1d6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000043d1c6 : push rsi ; hlt ; sub eax, edx ; ret
0x000000000043d196 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004a3a73 : push rsi ; mov esp, 0xbd86fff8 ; clc ; call qword ptr [rsi]
0x000000000042c8fd : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004ba820 : push rsi ; pop rdx ; je 0x4ba7ec ; ret 0xacfc
0x000000000041ec92 : push rsi ; ret
0x000000000041def6 : push rsi ; ret 0x2a
0x0000000000485abd : push rsi ; ret 0xf02
0x000000000045eda8 : push rsi ; ret 0xf10
0x0000000000416908 : push rsi ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043d1a6 : push rsi ; sub eax, edx ; ret
0x000000000042e5fe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004c1f54 : push rsp ; add byte ptr ss:[rax], al ; fdiv dword ptr [rax - 0xa] ; call qword ptr [rax]
0x000000000041b5bc : push rsp ; and al, 0x10 ; call rax
0x0000000000464e83 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x10] ; call rbx
0x0000000000466a8e : push rsp ; and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004477a1 : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r12
0x0000000000446e2e : push rsp ; and al, 0x48 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x00000000004670f1 : push rsp ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x000000000044b876 : push rsp ; and al, 0x50 ; mov rdi, qword ptr [rsp + 0x18] ; call r14
0x000000000041e3ca : push rsp ; and al, 0x68 ; call rax
0x000000000041f6aa : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000004484cc : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x28] ; call r14
0x000000000044b0b6 : push rsp ; and al, 0x78 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000491880 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000049183a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000041aec5 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000004be82c : push rsp ; out -3, eax ; jmp qword ptr [rax]
0x000000000041bd4a : push rsp ; ret
0x0000000000467793 : push rsp ; ret 0x6c
0x0000000000441d88 : push rsp ; ret 0xfffd
0x00000000004be40b : push rsp ; sar ebp, 1 ; call rsp
0x00000000004c7054 : push rsp ; xchg dword ptr [rax], eax ; add byte ptr [rax], bl ; fdivp st(2) ; jmp qword ptr [rdx]
0x00000000004295c0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000004c85ad : pushfq ; add byte ptr [rax], al ; add byte ptr [rbx], 0xfc ; call qword ptr [rax]
0x00000000004c85c5 : pushfq ; add byte ptr [rax], al ; js 0x4c85d3 ; cld ; call qword ptr [rdx]
0x00000000004c85f5 : pushfq ; add byte ptr [rax], al ; js 0x4c8603 ; cld ; call qword ptr [rdx]
0x0000000000474ea4 : pushfq ; add r8b, bpl ; ret
0x0000000000446fb0 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004c569c : pushfq ; insd dword ptr [rdi], dx ; add byte ptr [rax], al ; sar dl, 0xf9 ; call rsi
0x000000000045c24c : pushfq ; jmp qword ptr [rsi]
0x000000000041417c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042a2c0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a3f8c : pushfq ; or ecx, edi ; ljmp ptr [rcx + rcx] ; stc ; call rdx
0x00000000004bcb50 : pushfq ; ret 0x4b
0x0000000000468553 : pushfq ; ret 0xb60f
0x000000000049b897 : pushfq ; ret 0xf45
0x00000000004be348 : pushfq ; ret 0xfffd
0x00000000004c8bb0 : rcl bl, 1 ; cld ; call qword ptr [rax]
0x00000000004be258 : rcl byte ptr [rbp + rdi*8 - 0x2817f01], 1 ; jmp rax
0x00000000004be250 : rcl byte ptr [rcx - 0x6caf0003], 1 ; std ; call rax
0x00000000004c7620 : rcl byte ptr [rdx], 0xfb ; call qword ptr [rax]
0x00000000004a3cfc : rcl byte ptr [rip + 0x1550fff9], 0xf9 ; jmp rax
0x00000000004a3800 : rcl byte ptr [rip + 0x1750fff8], 1 ; clc ; call rax
0x00000000004c45c0 : rcl ch, 1 ; clc ; call qword ptr [rbx]
0x00000000004c45f0 : rcl ch, 1 ; clc ; call qword ptr [rdx]
0x00000000004a3c8c : rcl dh, 0xf8 ; inc dword ptr [rax] ; ret 0xfff8
0x0000000000425d5d : rcl dh, 1 ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x00000000004a3c80 : rcl dl, 1 ; clc ; jmp qword ptr [rax]
0x00000000004ba81f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4ba7ed ; ret 0xacfc
0x00000000004ba81b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4ba7f1 ; ret 0xacfc
0x0000000000441fcc : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000046307a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x000000000044082c : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000462e2c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000047a477 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000442930 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000004175ff : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041ebce : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047b489 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000040eb9e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000049c4c8 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000045c27b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000041e683 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000041789d : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004bac3d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000478979 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000440109 : rcr esi, cl ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004329c6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000400579 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400582 ; ret
0x0000000000400281 : ret
0x00000000004005c4 : ret 0
0x00000000004aeb20 : ret 0x10
0x000000000044f5bb : ret 0x100
0x0000000000462a5f : ret 0x107
0x00000000004762a6 : ret 0x10eb
0x000000000041bd72 : ret 0x110
0x000000000047a44c : ret 0x114d
0x0000000000447268 : ret 0x1189
0x0000000000445ffb : ret 0x11e9
0x000000000048357a : ret 0x12
0x000000000047470c : ret 0x1272
0x000000000046dbbf : ret 0x1376
0x000000000046ad41 : ret 0x1477
0x000000000041b461 : ret 0x148
0x0000000000415bf2 : ret 0x149
0x0000000000419d73 : ret 0x14c
0x0000000000435d9c : ret 0x14d
0x0000000000423a7a : ret 0x17
0x0000000000435cd9 : ret 0x180f
0x000000000044f056 : ret 0x1874
0x0000000000426095 : ret 0x1876
0x0000000000417735 : ret 0x18eb
0x00000000004680e5 : ret 0x190
0x0000000000488b02 : ret 0x1a75
0x00000000004bb19a : ret 0x1ad4
0x00000000004b992d : ret 0x1b49
0x000000000041dbaf : ret 0x1be
0x000000000049ddff : ret 0x1be8
0x00000000004b07f0 : ret 0x1d4
0x00000000004b0f88 : ret 0x1d5
0x0000000000400c45 : ret 0x1d89
0x0000000000447bb3 : ret 0x1e76
0x0000000000449747 : ret 0x1f0f
0x000000000041e80e : ret 0x1f76
0x000000000044f4d7 : ret 0x200
0x0000000000446dac : ret 0x2176
0x00000000004a0a3c : ret 0x22
0x0000000000423818 : ret 0x2288
0x00000000004a0d95 : ret 0x22bd
0x000000000042faf2 : ret 0x2373
0x000000000043f447 : ret 0x23e8
0x00000000004af7f8 : ret 0x24
0x0000000000499f1a : ret 0x243
0x000000000047da9a : ret 0x24d0
0x000000000046d754 : ret 0x25
0x0000000000414719 : ret 0x2501
0x000000000041dd5d : ret 0x2575
0x000000000047424a : ret 0x2584
0x000000000046bd82 : ret 0x25db
0x000000000049b731 : ret 0x25e9
0x0000000000467f56 : ret 0x2642
0x0000000000401296 : ret 0x2773
0x0000000000465706 : ret 0x2774
0x0000000000451b92 : ret 0x277d
0x000000000043fe38 : ret 0x28
0x00000000004312a6 : ret 0x280f
0x0000000000426085 : ret 0x2876
0x000000000047f518 : ret 0x28f5
0x0000000000485e3d : ret 0x2941
0x000000000041061d : ret 0x2948
0x000000000049b70a : ret 0x2949
0x0000000000432a11 : ret 0x294c
0x000000000041272b : ret 0x294d
0x000000000041deb4 : ret 0x2a
0x000000000041e71b : ret 0x2a75
0x000000000041ef3a : ret 0x2ab1
0x000000000041dbe2 : ret 0x2ae3
0x000000000041905a : ret 0x2b19
0x000000000043f76a : ret 0x2b3
0x00000000004102bf : ret 0x2b48
0x000000000044629e : ret 0x2b49
0x000000000041687a : ret 0x2b56
0x0000000000415a95 : ret 0x2b70
0x000000000041497a : ret 0x2b75
0x000000000043e392 : ret 0x2b77
0x000000000040fe1a : ret 0x2ba2
0x000000000049b71f : ret 0x2be9
0x000000000043e037 : ret 0x2c76
0x0000000000483504 : ret 0x2e
0x0000000000462645 : ret 0x2e66
0x0000000000446185 : ret 0x3101
0x00000000004036a6 : ret 0x3145
0x000000000046fcc2 : ret 0x314c
0x00000000004afce8 : ret 0x33
0x000000000046ac37 : ret 0x33e8
0x0000000000403e51 : ret 0x348
0x000000000044c1db : ret 0x349
0x0000000000488b58 : ret 0x357e
0x00000000004baa7a : ret 0x3827
0x000000000047bc62 : ret 0x3840
0x000000000040fcdf : ret 0x3841
0x000000000044058f : ret 0x3845
0x0000000000426075 : ret 0x3876
0x0000000000443129 : ret 0x3880
0x0000000000414ffb : ret 0x389
0x00000000004b9106 : ret 0x38ae
0x000000000047a8a6 : ret 0x38b
0x000000000049d3e2 : ret 0x38e8
0x000000000044fab1 : ret 0x3948
0x000000000041d032 : ret 0x3949
0x000000000044cff6 : ret 0x394c
0x0000000000452978 : ret 0x394d
0x000000000043d7b2 : ret 0x3a01
0x000000000042fadb : ret 0x3a73
0x000000000044cb03 : ret 0x3a76
0x0000000000442921 : ret 0x3b01
0x00000000004671ca : ret 0x3bba
0x000000000040e56e : ret 0x3ce8
0x00000000004459c5 : ret 0x3d83
0x000000000046a082 : ret 0x3e9
0x0000000000419112 : ret 0x4007
0x00000000004668d6 : ret 0x408d
0x0000000000445db0 : ret 0x4101
0x0000000000454f90 : ret 0x4108
0x0000000000456a58 : ret 0x4110
0x000000000041c74c : ret 0x4117
0x000000000046ee5c : ret 0x412f
0x000000000043f89d : ret 0x4164
0x0000000000446b7e : ret 0x41c3
0x000000000042e46a : ret 0x4266
0x00000000004681e2 : ret 0x428d
0x000000000044cafa : ret 0x4372
0x000000000044d58b : ret 0x4389
0x0000000000445c6f : ret 0x438b
0x00000000004a4428 : ret 0x43e3
0x00000000004a4e18 : ret 0x43ef
0x0000000000411313 : ret 0x4401
0x0000000000455517 : ret 0x440f
0x0000000000464647 : ret 0x4410
0x000000000047b751 : ret 0x448d
0x0000000000489a55 : ret 0x44c6
0x00000000004623c2 : ret 0x4502
0x000000000046d858 : ret 0x4574
0x0000000000462f08 : ret 0x45f6
0x00000000004b9c04 : ret 0x474c
0x000000000045a383 : ret 0x47e9
0x0000000000448635 : ret 0x4801
0x000000000042c6e1 : ret 0x4802
0x000000000042c7bd : ret 0x4803
0x0000000000404230 : ret 0x4804
0x000000000042c78d : ret 0x4805
0x000000000042c775 : ret 0x4806
0x00000000004237a3 : ret 0x4808
0x000000000044f064 : ret 0x4809
0x0000000000458844 : ret 0x480f
0x000000000041afc9 : ret 0x4810
0x000000000044c9d0 : ret 0x4811
0x0000000000452fc2 : ret 0x481e
0x000000000041af0b : ret 0x4820
0x000000000045ba8c : ret 0x482d
0x000000000044457f : ret 0x4830
0x0000000000401292 : ret 0x4838
0x000000000042e376 : ret 0x4840
0x00000000004238b8 : ret 0x48c3
0x000000000046737d : ret 0x48d
0x0000000000473a44 : ret 0x48e9
0x00000000004bb3c6 : ret 0x48f
0x0000000000402f3e : ret 0x4901
0x000000000044bdb3 : ret 0x4904
0x000000000042c9fe : ret 0x4906
0x00000000004570c8 : ret 0x4908
0x000000000046a119 : ret 0x4909
0x0000000000422b12 : ret 0x4910
0x0000000000420d86 : ret 0x4920
0x000000000041fd00 : ret 0x4930
0x000000000047e654 : ret 0x4976
0x00000000004bcb19 : ret 0x4b
0x000000000046c982 : ret 0x4b30
0x00000000004058b5 : ret 0x4c01
0x000000000042c941 : ret 0x4c02
0x000000000044c8bf : ret 0x4c04
0x0000000000485b85 : ret 0x4c08
0x00000000004526b6 : ret 0x4c40
0x0000000000448880 : ret 0x4c88
0x0000000000446c91 : ret 0x4d02
0x00000000004bae27 : ret 0x4e27
0x0000000000469937 : ret 0x4eb
0x0000000000444a38 : ret 0x4ee9
0x000000000044588e : ret 0x4f74
0x000000000042fac4 : ret 0x5173
0x000000000044ee63 : ret 0x527e
0x0000000000462c88 : ret 0x5389
0x0000000000485bd7 : ret 0x53e8
0x000000000045af7b : ret 0x53e9
0x000000000047b9ed : ret 0x5438
0x00000000004918a6 : ret 0x5488
0x000000000044ce7a : ret 0x5489
0x000000000045abd3 : ret 0x548b
0x00000000004b908c : ret 0x5508
0x00000000004054bf : ret 0x5525
0x00000000004211f2 : ret 0x575
0x000000000046dbcd : ret 0x576
0x00000000004bb358 : ret 0x5803
0x000000000040e72b : ret 0x589
0x00000000004b8d60 : ret 0x591c
0x00000000004b9ac7 : ret 0x5ae4
0x0000000000449b71 : ret 0x5c77
0x0000000000446aaf : ret 0x5f20
0x000000000045967b : ret 0x5fe8
0x00000000004bb7f2 : ret 0x62c1
0x000000000045c443 : ret 0x6348
0x0000000000411932 : ret 0x6349
0x000000000047f107 : ret 0x63e8
0x0000000000489e27 : ret 0x6610
0x0000000000426002 : ret 0x6620
0x0000000000423905 : ret 0x66c3
0x000000000047471e : ret 0x674
0x00000000004b8d7f : ret 0x67b2
0x000000000047d76d : ret 0x6876
0x000000000043ed5d : ret 0x6b8
0x0000000000466b22 : ret 0x6c
0x00000000004bb981 : ret 0x6f9
0x0000000000433f4a : ret 0x6ff
0x0000000000432a5e : ret 0x7280
0x00000000004760f9 : ret 0x728d
0x000000000043e1fb : ret 0x72e9
0x0000000000415541 : ret 0x7401
0x000000000041e90f : ret 0x7402
0x000000000041bac5 : ret 0x7404
0x0000000000410e33 : ret 0x7408
0x0000000000400e1c : ret 0x7420
0x0000000000458c12 : ret 0x7450
0x000000000043bd19 : ret 0x7501
0x000000000043bd26 : ret 0x7502
0x00000000004267b9 : ret 0x7504
0x000000000043d154 : ret 0x7508
0x000000000043bceb : ret 0x7510
0x00000000004267b4 : ret 0x7518
0x000000000043bcf8 : ret 0x7520
0x000000000043bd05 : ret 0x7540
0x0000000000473091 : ret 0x758b
0x000000000042e9b2 : ret 0x7677
0x0000000000446292 : ret 0x774
0x0000000000478c3a : ret 0x777
0x000000000046db5a : ret 0x7874
0x000000000041b3fa : ret 0x7ae9
0x0000000000446dda : ret 0x7b8
0x0000000000425f92 : ret 0x7e20
0x000000000042170c : ret 0x7f10
0x00000000004618c6 : ret 0x7f3c
0x0000000000432d7e : ret 0x80
0x00000000004228e9 : ret 0x8000
0x000000000046993c : ret 0x8001
0x00000000004727ff : ret 0x8005
0x000000000047d626 : ret 0x8008
0x000000000046a322 : ret 0x8010
0x000000000047393e : ret 0x8018
0x0000000000470208 : ret 0x804
0x000000000046c5c0 : ret 0x8116
0x00000000004870db : ret 0x8148
0x000000000045ab94 : ret 0x8166
0x0000000000419ecc : ret 0x820f
0x0000000000404010 : ret 0x8301
0x000000000047db61 : ret 0x8308
0x000000000042e580 : ret 0x830f
0x000000000043e0c0 : ret 0x8341
0x00000000004212b5 : ret 0x8348
0x000000000041b4c3 : ret 0x8349
0x000000000047fcc9 : ret 0x8364
0x000000000043f3e7 : ret 0x83e8
0x0000000000411280 : ret 0x840
0x000000000046b1a2 : ret 0x8401
0x0000000000417749 : ret 0x840f
0x000000000049a34e : ret 0x8440
0x000000000043e160 : ret 0x8444
0x000000000045c435 : ret 0x8504
0x0000000000462b16 : ret 0x8508
0x0000000000412e42 : ret 0x850f
0x0000000000468445 : ret 0x8545
0x00000000004191e2 : ret 0x8548
0x000000000044ee75 : ret 0x854d
0x0000000000459a0c : ret 0x858b
0x00000000004572ad : ret 0x85c6
0x00000000004552fa : ret 0x85c7
0x0000000000400bde : ret 0x860f
0x000000000044f7c5 : ret 0x870f
0x00000000004b869e : ret 0x871e
0x00000000004618cd : ret 0x875
0x00000000004260a5 : ret 0x876
0x0000000000489a50 : ret 0x87e
0x000000000044e85a : ret 0x87e9
0x000000000047e414 : ret 0x87f6
0x0000000000447dc1 : ret 0x8804
0x000000000045e102 : ret 0x880f
0x000000000044ed17 : ret 0x8840
0x00000000004471c2 : ret 0x8901
0x0000000000470bce : ret 0x8908
0x0000000000400c86 : ret 0x890f
0x000000000044cf7f : ret 0x8941
0x0000000000400609 : ret 0x8944
0x00000000004112fb : ret 0x8945
0x0000000000449c31 : ret 0x8948
0x00000000004100ad : ret 0x8949
0x0000000000403a77 : ret 0x894c
0x0000000000445d8f : ret 0x894d
0x000000000047950b : ret 0x894e
0x00000000004836dc : ret 0x89e9
0x000000000047826e : ret 0x8b
0x000000000046260a : ret 0x8b04
0x000000000046ae93 : ret 0x8b05
0x00000000004baece : ret 0x8b36
0x000000000044f0ea : ret 0x8b41
0x0000000000401404 : ret 0x8b48
0x0000000000410a76 : ret 0x8b49
0x000000000047948e : ret 0x8b4a
0x00000000004115d0 : ret 0x8b4c
0x0000000000480505 : ret 0x8d01
0x00000000004525da : ret 0x8d04
0x0000000000459740 : ret 0x8d0f
0x000000000040d2cf : ret 0x8d48
0x0000000000403226 : ret 0x8d49
0x0000000000465c88 : ret 0x8d4a
0x0000000000411586 : ret 0x8d4c
0x000000000041c7ac : ret 0x8d4e
0x00000000004105c1 : ret 0x8e0f
0x000000000040142e : ret 0x900
0x0000000000421335 : ret 0x90c3
0x000000000049a18b : ret 0x9272
0x000000000041255b : ret 0x938b
0x0000000000485a90 : ret 0x940f
0x000000000048a6a6 : ret 0x941
0x00000000004659a8 : ret 0x94c
0x000000000047ad3f : ret 0x950f
0x0000000000455a59 : ret 0x9522
0x00000000004038b8 : ret 0x953d
0x00000000004b9cf3 : ret 0x9576
0x0000000000481840 : ret 0x9589
0x000000000041b411 : ret 0x976
0x0000000000488bd9 : ret 0x9e74
0x00000000004104d8 : ret 0x9e9
0x000000000045975c : ret 0x9ee8
0x0000000000473e49 : ret 0x9f75
0x00000000004ae320 : ret 0xa
0x0000000000491810 : ret 0xa074
0x000000000046adc7 : ret 0xa3e8
0x000000000049b60e : ret 0xa4e9
0x00000000004b99e3 : ret 0xa514
0x000000000049b70d : ret 0xa5e9
0x00000000004b9e67 : ret 0xac65
0x00000000004ba824 : ret 0xacfc
0x000000000043e1e6 : ret 0xaf0f
0x000000000041bdaf : ret 0xb48b
0x0000000000403296 : ret 0xb4e8
0x00000000004027f9 : ret 0xb60f
0x00000000004681fb : ret 0xb70f
0x000000000043ec90 : ret 0xb8
0x000000000045fd99 : ret 0xb848
0x000000000044eeb5 : ret 0xb87f
0x0000000000426687 : ret 0xb8c3
0x000000000049d462 : ret 0xb8e8
0x0000000000467132 : ret 0xb8e9
0x0000000000484922 : ret 0xb908
0x00000000004b9d2e : ret 0xb9b9
0x000000000045627d : ret 0xbb41
0x0000000000478d62 : ret 0xbc41
0x000000000049bbc6 : ret 0xbc80
0x000000000046084e : ret 0xbd83
0x0000000000484b10 : ret 0xbe08
0x00000000004b9a84 : ret 0xbe57
0x000000000045ac68 : ret 0xbf07
0x0000000000483ef1 : ret 0xbf08
0x00000000004227a9 : ret 0xc000
0x000000000048eeae : ret 0xc001
0x000000000048ee62 : ret 0xc002
0x0000000000412d83 : ret 0xc031
0x000000000046b700 : ret 0xc084
0x0000000000425e50 : ret 0xc085
0x000000000040e8b6 : ret 0xc148
0x000000000046729d : ret 0xc269
0x000000000045b136 : ret 0xc283
0x000000000042f994 : ret 0xc2b2
0x000000000043e401 : ret 0xc35b
0x00000000004b8222 : ret 0xc4c3
0x00000000004b9638 : ret 0xc4ff
0x0000000000432af8 : ret 0xc580
0x0000000000482710 : ret 0xc6e9
0x0000000000421231 : ret 0xc6eb
0x00000000004381f0 : ret 0xc748
0x000000000041c05c : ret 0xc789
0x0000000000414fec : ret 0xc883
0x000000000047d273 : ret 0xc931
0x0000000000442f69 : ret 0xc985
0x0000000000423771 : ret 0xc9ff
0x000000000048129d : ret 0xcb73
0x00000000004b90ca : ret 0xcca7
0x00000000004bb1ad : ret 0xcd11
0x000000000041d441 : ret 0xce31
0x0000000000404cc4 : ret 0xce80
0x0000000000480b75 : ret 0xce83
0x0000000000418c8b : ret 0xcf31
0x00000000004ae720 : ret 0xd
0x000000000047bb7a : ret 0xd021
0x000000000044241f : ret 0xd029
0x000000000043296c : ret 0xd073
0x00000000004054ce : ret 0xd089
0x0000000000464285 : ret 0xd108
0x0000000000486aa9 : ret 0xd129
0x000000000049db49 : ret 0xd1e8
0x000000000049b5e6 : ret 0xd284
0x00000000004859a7 : ret 0xd309
0x0000000000488fbb : ret 0xd348
0x000000000045b153 : ret 0xd529
0x0000000000486b20 : ret 0xd629
0x0000000000466fed : ret 0xd721
0x0000000000486a32 : ret 0xd729
0x000000000043e1eb : ret 0xd889
0x00000000004bac45 : ret 0xd8f
0x00000000004778f3 : ret 0xd8f7
0x00000000004007a6 : ret 0xd975
0x000000000047b940 : ret 0xda38
0x000000000040f825 : ret 0xdaf7
0x00000000004482f1 : ret 0xdb85
0x00000000004bad26 : ret 0xdcd9
0x000000000046a880 : ret 0xdd72
0x00000000004b9ca2 : ret 0xde5d
0x0000000000410bb5 : ret 0xde74
0x00000000004b8a31 : ret 0xde9e
0x0000000000486ef8 : ret 0xdee9
0x0000000000422669 : ret 0xe000
0x000000000043bca9 : ret 0xe074
0x0000000000446dcd : ret 0xe077
0x0000000000443c09 : ret 0xe083
0x00000000004781df : ret 0xe0bf
0x000000000044b353 : ret 0xe183
0x000000000049b7d1 : ret 0xe1e9
0x0000000000444182 : ret 0xe1eb
0x000000000044725b : ret 0xe277
0x000000000040db0c : ret 0xe281
0x0000000000400d8d : ret 0xe283
0x000000000043f387 : ret 0xe3e8
0x0000000000466350 : ret 0xe575
0x0000000000417727 : ret 0xe675
0x0000000000457c83 : ret 0xe680
0x00000000004bae46 : ret 0xe71f
0x0000000000401288 : ret 0xe72
0x0000000000452b10 : ret 0xe783
0x000000000046e045 : ret 0xe874
0x00000000004595f5 : ret 0xe87f
0x0000000000454e92 : ret 0xe883
0x000000000046e3ee : ret 0xe8c0
0x000000000040075e : ret 0xe8c1
0x00000000004255a3 : ret 0xe901
0x0000000000402ac2 : ret 0xe902
0x0000000000449d39 : ret 0xe904
0x000000000047b571 : ret 0xe907
0x0000000000423806 : ret 0xe908
0x0000000000429426 : ret 0xe910
0x00000000004530b9 : ret 0xe920
0x000000000041fda3 : ret 0xe96e
0x00000000004b91a7 : ret 0xe970
0x0000000000488b1c : ret 0xe974
0x000000000041ff4f : ret 0xe977
0x0000000000468e6e : ret 0xe9be
0x000000000043e38a : ret 0xea81
0x0000000000457c07 : ret 0xeac0
0x0000000000400c61 : ret 0xeac1
0x0000000000422b36 : ret 0xeb10
0x000000000041fd6f : ret 0xeb5b
0x000000000040e52a : ret 0xeb72
0x0000000000402158 : ret 0xebe8
0x00000000004bb958 : ret 0xec2
0x000000000047f4a9 : ret 0xec75
0x0000000000470738 : ret 0xed75
0x000000000044aeae : ret 0xed85
0x0000000000445d0f : ret 0xee75
0x00000000004bb5fa : ret 0xef32
0x00000000004187b6 : ret 0xef75
0x000000000049b398 : ret 0xef89
0x0000000000443a81 : ret 0xefc1
0x0000000000422529 : ret 0xf000
0x000000000040d498 : ret 0xf001
0x00000000004027aa : ret 0xf01
0x000000000041a196 : ret 0xf02
0x000000000041ba40 : ret 0xf04
0x000000000045d28e : ret 0xf08
0x000000000045a117 : ret 0xf0e9
0x000000000046b306 : ret 0xf0eb
0x000000000041b183 : ret 0xf0f
0x00000000004216c2 : ret 0xf10
0x0000000000462035 : ret 0xf229
0x000000000044fd46 : ret 0xf301
0x000000000045d2ca : ret 0xf40
0x00000000004683cd : ret 0xf43
0x000000000049b84c : ret 0xf45
0x00000000004642aa : ret 0xf48
0x000000000045a6d4 : ret 0xf4c
0x0000000000402acb : ret 0xf4e9
0x0000000000443bec : ret 0xf631
0x00000000004214d9 : ret 0xf66
0x000000000043dfac : ret 0xf685
0x000000000041bd93 : ret 0xf710
0x0000000000479f75 : ret 0xf74
0x0000000000426b2c : ret 0xf748
0x0000000000465df0 : ret 0xf749
0x00000000004a0a1a : ret 0xf7d5
0x00000000004a061a : ret 0xf7d9
0x0000000000432a1e : ret 0xf80
0x00000000004223e9 : ret 0xf800
0x00000000004b8910 : ret 0xf869
0x00000000004a3fbc : ret 0xf90b
0x00000000004a3fb4 : ret 0xf90c
0x00000000004a3fac : ret 0xf90d
0x00000000004a3fa4 : ret 0xf90e
0x00000000004a3f9c : ret 0xf90f
0x00000000004a3da8 : ret 0xf917
0x000000000040444a : ret 0xf929
0x0000000000459b19 : ret 0xfa80
0x000000000048aab6 : ret 0xfa81
0x00000000004054e2 : ret 0xfac1
0x000000000046881a : ret 0xfb57
0x00000000004222a9 : ret 0xfc00
0x000000000048bff6 : ret 0xfc01
0x000000000048bfaa : ret 0xfc02
0x000000000043f4da : ret 0xfc3
0x000000000046be8a : ret 0xfd34
0x0000000000446ea0 : ret 0xfd83
0x000000000044f34d : ret 0xfde8
0x0000000000402780 : ret 0xfdf
0x0000000000422169 : ret 0xfe00
0x000000000043e0e3 : ret 0xfe83
0x000000000043293e : ret 0xfec5
0x0000000000422029 : ret 0xff00
0x0000000000434931 : ret 0xff2
0x000000000042e39a : ret 0xff3
0x0000000000421ee9 : ret 0xff80
0x0000000000488df6 : ret 0xff81
0x0000000000488daa : ret 0xff82
0x000000000040c20a : ret 0xff99
0x0000000000487090 : ret 0xff9f
0x00000000004526a2 : ret 0xffb0
0x00000000004004e0 : ret 0xffb8
0x000000000048ed97 : ret 0xffbf
0x0000000000421da9 : ret 0xffc0
0x0000000000400386 : ret 0xffd0
0x000000000042106e : ret 0xffdf
0x000000000044f508 : ret 0xffe0
0x00000000004085ba : ret 0xffe2
0x000000000044163a : ret 0xffe8
0x000000000044153a : ret 0xffe9
0x0000000000459dbc : ret 0xffee
0x000000000040edac : ret 0xffef
0x000000000040da5e : ret 0xfff0
0x00000000004219e9 : ret 0xfff8
0x000000000041c5c1 : ret 0xfff9
0x000000000043f099 : ret 0xfffb
0x00000000004218a9 : ret 0xfffc
0x0000000000441d03 : ret 0xfffd
0x0000000000405278 : ret 0xfffe
0x000000000041071a : ret 0xffff
0x000000000040ffe1 : ret 1
0x0000000000419d5a : ret 2
0x000000000042f752 : ret 3
0x0000000000426159 : ret 4
0x000000000041a6a6 : ret 5
0x0000000000418e00 : ret 6
0x00000000004b27c4 : ret 7
0x000000000040a3be : ret 8
0x000000000043c75a : ret 9
0x000000000046263d : retf -0x6f9a ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x462610
0x000000000049283f : retf -0x7af1 ; call qword ptr [rsi]
0x000000000049cde3 : retf ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a3c94 : rol ah, 1 ; clc ; jmp qword ptr [rax]
0x000000000043d875 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000043e4c5 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000049d21c : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x0000000000466e4b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000416527 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004778fe : rol bl, 1 ; mov eax, 1 ; ret
0x00000000004261ed : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000042e372 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000465702 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004b21c0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000447b48 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000489ef6 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000004be26c : rol byte ptr [rax - 3], 1 ; jmp qword ptr [rax]
0x0000000000460555 : rol byte ptr [rax], 0 ; add byte ptr [rbx - 0x106f43], al ; call qword ptr [rax]
0x000000000042e8bd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000049c24e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000044f8ab : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000047a8a1 : rol byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000042cd82 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000004820f1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000004be230 : rol byte ptr [rbp - 0x78af0003], 1 ; std ; call rax
0x000000000046b0d1 : rol byte ptr [rbp - 0x7c], 0xdb ; je 0x46b0c8 ; ret
0x000000000047897b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000442cd6 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x0000000000416978 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004666c2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000004be85c : rol byte ptr [rbx], 0xfe ; jmp qword ptr [rax]
0x000000000043e381 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000044c4ab : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004408b7 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000046e2b5 : rol byte ptr [rcx - 0x80], cl ; cld ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0x8348
0x00000000004666a2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000043e196 : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000044dfc2 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000043e1f7 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x72e9
0x000000000043e1e2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000043296e : rol byte ptr [rcx], 1 ; ret 0x148
0x00000000004a418c : rol byte ptr [rcx], 1 ; stc ; call qword ptr [rax]
0x0000000000466702 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000004be228 : rol byte ptr [rdx - 0x7baf0003], 1 ; std ; call rax
0x00000000004666b2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004449e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x000000000047c8b7 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000004666f2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000004b8220 : rol cl, 0xc2 ; ret
0x00000000004681cf : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000046664c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000400533 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x000000000040333a : rol dword ptr [rbx], 1 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046b143 : rol ebx, 0x4c ; mov eax, ecx ; ret
0x000000000044422d : rol ecx, -0x1f ; add edx, ebx ; loopne 0x444297 ; pop rbp ; ret
0x00000000004a3ca0 : ror al, 0xf8 ; call qword ptr [rax]
0x0000000000426072 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x4260b9 ; add rax, rdi ; ret
0x0000000000423a17 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004109ca : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000473989 : ror byte ptr [rax + 0x29], cl ; ret 0x3949
0x0000000000446d9a : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000046ad4c : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x46ad7f ; ret
0x00000000004427b8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000479376 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000401285 : ror byte ptr [rax + 0x39], 1 ; ret 0xe72
0x0000000000443125 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3880
0x0000000000467b50 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000000000044f40d : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000046dafc : ror byte ptr [rax + 0xf], 1 ; ret 0x8348
0x000000000044f3fe : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000479efe : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000042cc5c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x0000000000426042 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000488bd6 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000488b19 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000423a14 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000004ae5c8 : ror byte ptr [rax + rax], 0 ; ret
0x00000000004261e5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000488376 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000046919a : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc37fdaad
0x000000000045dc3a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x000000000047b518 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000426032 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000426062 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000426052 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000041bd47 : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000041c066 : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000004154fa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004be238 : ror byte ptr [rax - 0x75af0003], 1 ; std ; call rax
0x0000000000479213 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x00000000004129b5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000469fb5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000459759 : ror byte ptr [rax - 0x77], 1 ; ret 0x9ee8
0x000000000040db09 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000420c82 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004178dd : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000413401 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x413416 ; ret
0x000000000047ad39 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000040fd0f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046ac70 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000041cbe6 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004786a8 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000049d08e : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041c7a5 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb0fc4
0x0000000000471fc2 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000472d4c : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000456dc2 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x000000000047a77a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000475ecd : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000449333 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000469c0e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000448874 : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000047aa2a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000488124 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000046db5f : ror byte ptr [rbp + rcx*4 + 0x4a], cl ; dec dword ptr [rcx + 0x29] ; ret 0x8d49
0x00000000004be240 : ror byte ptr [rbx - 0x72af0003], 1 ; std ; call rax
0x0000000000447bb0 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000446da9 : ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x0000000000447230 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x000000000049b197 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000046b0c3 : ror byte ptr [rcx + rcx*4 - 0x38], 0x75 ; ret
0x0000000000465132 : ror byte ptr [rcx + rcx*4 - 1], 0x45 ; xor eax, eax ; call rbx
0x000000000044f69e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000472475 : ror byte ptr [rcx - 0x77], 1 ; add ch, cl ; ret 0xfffd
0x000000000043e034 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2c76
0x00000000004115ca : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000426969 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x00000000004426bc : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000004681f8 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000041dddd : ror byte ptr [rdi], 0x84 ; cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000046aef7 : ror byte ptr [rdi], 0x84 ; push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047ef36 : ror byte ptr [rdi], 0x84 ; ret
0x00000000004465fc : ror byte ptr [rdi], 0x84 ; test dword ptr [rdx], 0x83480000 ; ret
0x000000000043817a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000004381b6 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000459db9 : ror byte ptr [rdi], 0x85 ; ret 0xffee
0x0000000000457dc7 : ror byte ptr [rdi], 0x8a ; ret 8
0x0000000000490af8 : ror byte ptr [rdi], 0x8f ; ret
0x000000000044241c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047c2ac : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x000000000047b9ea : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000041b3f7 : ror byte ptr [rdi], 0x94 ; ret 0x7ae9
0x00000000004618c3 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000047ad3c : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004859a4 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000047b93d : ror byte ptr [rdi], 0x94 ; ret 0xda38
0x000000000046712f : ror byte ptr [rdi], 0x95 ; ret 0xb8e9
0x0000000000466fea : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x000000000040f822 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000466c1e : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x000000000040fcdc : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x000000000040db1e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40db08 ; ret
0x0000000000419209 : ror byte ptr [rdi], 1 ; test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000046d7d5 : ror byte ptr [rdi], cl ; test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000047bc5f : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x000000000047bd73 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000004be248 : ror byte ptr [rsi - 0x6faf0003], 1 ; std ; call rax
0x0000000000457dc6 : ror byte ptr cs:[rdi], 0x8a ; ret 8
0x00000000004106e3 : ror dword ptr [rax + 0x29], cl ; ret
0x000000000047d096 : ror dword ptr [rax + 0xf], cl ; ret 0x8349
0x0000000000472d9c : ror dword ptr [rax - 0x75], 0x46 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000474246 : ror dword ptr [rax - 0x75], 5 ; ret 0x2584
0x000000000047a203 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000045a380 : ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x00000000004329c2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000047e1c1 : ror dword ptr [rax - 0x77], cl ; ret
0x0000000000414b7d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x414b77 ; ret
0x00000000004639ed : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x4639e7 ; ret
0x000000000040eaa8 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000004052b2 : ror dword ptr [rax - 0x7d], cl ; ret
0x00000000004bcb11 : ror dword ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x4b
0x000000000044ee72 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x000000000042c865 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x0000000000441d9e : ror dword ptr [rcx + rcx*4 - 0x11], cl ; call 0x41dfe6
0x0000000000441dac : ror dword ptr [rcx + rcx*4 - 0x19], cl ; call 0x41dfe6
0x0000000000441cfd : ror dword ptr [rcx + rcx*4 - 1], cl ; call 0x41dfe6
0x0000000000441d0a : ror dword ptr [rcx + rcx*4 - 9], cl ; call 0x41dfe6
0x000000000043bca7 : ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000488fb8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000004680eb : ror dword ptr [rdi], -0x6c ; ret
0x000000000042f128 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f834 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f606 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042f586 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042f8c4 : ror dword ptr [rdi], -0x7b ; je 0x42f8d4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f3bb : ror dword ptr [rdi], -0x7b ; jno 0x42f3d0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f483 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f100 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000414b7c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x414b78 ; ret
0x00000000004639ec : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x4639e8 ; ret
0x00000000004a3cd0 : sahf ; adc edi, ecx ; jmp qword ptr [rax]
0x0000000000446da4 : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2176
0x000000000042b82e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000479851 : sahf ; ret 0x148
0x00000000004b9105 : sahf ; ret 0x38ae
0x0000000000450fc0 : sahf ; ret 0x8348
0x000000000047bba4 : sahf ; ret 0xe8c1
0x000000000049b884 : sahf ; ret 0xf45
0x000000000041697e : sal bh, 0xd8 ; ret
0x000000000043e4d9 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x00000000004228e7 : sal bh, 1 ; ret 0x8000
0x00000000004227a7 : sal bh, 1 ; ret 0xc000
0x0000000000422667 : sal bh, 1 ; ret 0xe000
0x0000000000422527 : sal bh, 1 ; ret 0xf000
0x00000000004223e7 : sal bh, 1 ; ret 0xf800
0x00000000004222a7 : sal bh, 1 ; ret 0xfc00
0x0000000000422167 : sal bh, 1 ; ret 0xfe00
0x0000000000422027 : sal bh, 1 ; ret 0xff00
0x0000000000421ee7 : sal bh, 1 ; ret 0xff80
0x0000000000421da7 : sal bh, 1 ; ret 0xffc0
0x0000000000421c67 : sal bh, 1 ; ret 0xffe0
0x0000000000421b27 : sal bh, 1 ; ret 0xfff0
0x00000000004219e7 : sal bh, 1 ; ret 0xfff8
0x00000000004218a7 : sal bh, 1 ; ret 0xfffc
0x0000000000421767 : sal bh, 1 ; ret 0xfffe
0x000000000045a3d4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000466e3f : sal bl, 1 ; ret
0x00000000004a4214 : sal byte ptr [rax - 7], 0xff ; sal byte ptr [rax - 7], 1 ; jmp rax
0x00000000004a4218 : sal byte ptr [rax - 7], 1 ; jmp rax
0x00000000004734a2 : sal byte ptr [rbp + 0x4b], 0x89 ; ret
0x0000000000426028 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000049e633 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000049e618 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x0000000000458c0e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000413404 : sal byte ptr [rbp + 9], cl ; ret
0x00000000004427e1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x00000000004164d5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000043d9e0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000414b80 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000042e51b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040db23 : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000473f9f : sal byte ptr [rbp - 0x32], 0xf3 ; ret
0x0000000000466e7b : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000457456 : sal byte ptr [rbx + rcx*2], 0 ; jmp rax
0x000000000047e2fd : sal byte ptr [rbx - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000042395c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004427b6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000440cc2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004a42d4 : sal byte ptr [rdi - 7], 1 ; push rax ; ja 0x4a42db ; call qword ptr [rax]
0x00000000004a38d0 : sal byte ptr [rdi], 0xf8 ; call rax
0x00000000004656cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000047629d : sal byte ptr [rdx + rax*2 + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x4762c2
0x0000000000423813 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000004a42a8 : sal byte ptr [rsi - 7], 0xff ; sal byte ptr [rsi - 7], 1 ; jmp rax
0x00000000004a42ac : sal byte ptr [rsi - 7], 1 ; jmp rax
0x000000000046d5d1 : sal byte ptr [rsp + 0x48], 0x83 ; ret
0x000000000040da59 : sal byte ptr [rsp + rbp*2 + 0x48], 0xc7 ; ret 0xfff0
0x000000000047b081 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x00000000004bf2f0 : sal dh, 0xf4 ; call qword ptr [rbx]
0x00000000004a378c : sal dl, 0xf7 ; call rax
0x0000000000478c1f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000473e37 : sal dword ptr [rbp - 0x2a], 1 ; ret
0x00000000004154f8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004329c5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004a0e47 : sal edi, 1 ; push rbx ; ret
0x0000000000425d5e : salc ; add byte ptr [r8 + 0xf], cl ; ret 0x66c3
0x000000000043bce6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000044dc07 : salc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042fba9 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000049f0d1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a3c8d : salc ; clc ; inc dword ptr [rax] ; ret 0xfff8
0x000000000043dc5b : salc ; clc ; ret
0x00000000004c6ec1 : salc ; cli ; call rsi
0x0000000000473e39 : salc ; ret
0x00000000004bcb60 : salc ; ret 0x4b
0x00000000004a3c81 : sar al, cl ; jmp qword ptr [rax]
0x0000000000485a8a : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x0000000000483e4c : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000484493 : sar bl, 0xff ; dec dword ptr [rcx + 0x29] ; fmul dword ptr [rax - 0x77] ; ret 0x348
0x00000000004be604 : sar bpl, 1 ; call rsp
0x00000000004be600 : sar bpl, 1 ; dec dword ptr [rax + rdx*8 - 3] ; call rsp
0x00000000004be408 : sar bpl, cl ; push rsp ; sar ebp, 1 ; call rsp
0x000000000044d583 : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x0000000000471291 : sar byte ptr [rax + 3], 0x5b ; ret
0x000000000047a6dc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000449d31 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000004a42f4 : sar byte ptr [rax - 7], 1 ; push rax ; js 0x4a42fb ; call qword ptr [rax]
0x00000000004a38d4 : sar byte ptr [rcx], 1 ; clc ; jmp rax
0x000000000044417d : sar byte ptr [rcx], cl ; ret
0x0000000000474ea2 : sar byte ptr [rdi + 0x4b659c], 0xe8 ; ret
0x0000000000474f2c : sar byte ptr [rdi + 0x4bcbf8], 0x83 ; ret
0x00000000004c1d90 : sar byte ptr [rdi], 0xf6 ; call qword ptr [rsi]
0x00000000004411ec : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000047c88c : sar byte ptr [rsi + 9], 1 ; ret
0x00000000004b9a9f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000441fda : sar ch, 0xff ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441f6e : sar ch, 0xff ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004be7dd : sar ch, 1 ; call qword ptr [rdx]
0x00000000004be605 : sar ch, 1 ; call rsp
0x00000000004be601 : sar ch, 1 ; dec dword ptr [rax + rdx*8 - 3] ; call rsp
0x00000000004c3409 : sar ch, 1 ; jmp qword ptr [rdx]
0x00000000004be409 : sar ch, cl ; push rsp ; sar ebp, 1 ; call rsp
0x00000000004c56a0 : sar dl, 0xf9 ; call rsi
0x00000000004c6dc9 : sar dl, cl ; jmp rdi
0x00000000004357a3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x4357ae ; ret
0x00000000004004de : sar dword ptr [rcx], 1 ; ret 0xffb8
0x0000000000402bae : sar dword ptr [rdi + 0x6cb980], cl ; call rbx
0x0000000000474361 : sar eax, -1 ; xor eax, eax ; ret
0x00000000004a3c7d : sar eax, 1 ; call rax
0x0000000000464b5c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047ccbb : sar eax, 3 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004a3cc1 : sar eax, cl ; call qword ptr [rax - 0x1f00072c]
0x0000000000441ed9 : sar ebp, -1 ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000441e46 : sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004be40d : sar ebp, 1 ; call rsp
0x00000000004b9803 : sar ecx, 1 ; jnp 0x4b97c4 ; ret
0x00000000004c6d41 : sar edx, 1 ; jmp rsi
0x00000000004261e7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004c8bb1 : sar esp, cl ; call qword ptr [rax]
0x0000000000464b5b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000004261e6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000049aa93 : sbb ah, byte ptr [rbx] ; add byte ptr [rax], cl ; ret
0x00000000004c0585 : sbb al, 0 ; add byte ptr [rax + 0x4f], ch ; cmc ; call qword ptr [rcx]
0x0000000000476a6a : sbb al, 0x24 ; add rsp, 0x18 ; jmp r11
0x0000000000476dd9 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x0000000000476eeb : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x00000000004c421c : sbb al, 0x59 ; add byte ptr [rax], al ; loopne 0x4c41f2 ; std ; call qword ptr [rbx]
0x00000000004c5d1c : sbb al, 0x74 ; add byte ptr [rax], al ; push rax ; sbb al, 0xfa ; jmp rdi
0x0000000000418bc3 : sbb al, 0x74 ; add eax, 0x5c415d5b ; ret
0x0000000000467b4e : sbb al, 0x89 ; ror byte ptr [rax + 0xf], 0xaf ; ret
0x00000000004c761c : sbb al, 0x8d ; add byte ptr [rax], al ; rcl byte ptr [rdx], 0xfb ; call qword ptr [rax]
0x00000000004c5d21 : sbb al, 0xfa ; jmp rdi
0x000000000047beb0 : sbb al, 2 ; mov qword ptr [rsp + 0x78], rbx ; call r12
0x00000000004c3041 : sbb al, bh ; call qword ptr [rax]
0x00000000004c03b5 : sbb al, byte ptr [rax] ; add byte ptr [rax], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000460b05 : sbb al, byte ptr [rcx - 0x7d] ; ret
0x00000000004a0618 : sbb al, ch ; ret 0xf7d9
0x00000000004a3d15 : sbb bh, cl ; call qword ptr [rsi + 0x26fff919]
0x00000000004b8585 : sbb bl, byte ptr [rsi] ; ret
0x0000000000478514 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000049f26b : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000041077a : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000047ad36 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004716db : sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000478515 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000417143 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x000000000043e9da : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000448071 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x000000000049ce8a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004098fe : sbb byte ptr [rax - 0x77], cl ; add al, 0x24 ; call 0x405bd7
0x0000000000414be1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004104d1 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000041de77 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x0000000000412553 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x938b
0x000000000049f26c : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000042c6de : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000449414 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042c6dd : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000041549f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000464e85 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; call rbx
0x0000000000444959 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000416cf3 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000042cb21 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000410b99 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000416517 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c5b48 : sbb byte ptr [rbx], dl ; cli ; jmp qword ptr [rax]
0x00000000004649cb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004715f9 : sbb byte ptr [rcx + 3], cl ; add al, 0x24 ; call rax
0x000000000041b5b9 : sbb byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x10 ; call rax
0x0000000000464f63 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000041ca73 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x0000000000410a73 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x000000000041077b : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000464fb7 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047ad37 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000044ed11 : sbb byte ptr [rdi + 0x4a], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8840
0x000000000041e592 : sbb byte ptr [rdi], cl ; test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004a3ee5 : sbb cl, bh ; call qword ptr [rax + 0x20fff917]
0x00000000004a3d25 : sbb cl, bh ; call rsi
0x00000000004a3d21 : sbb cl, bh ; inc dword ptr [rsi + 0x18] ; stc ; call rsi
0x0000000000412c05 : sbb cl, byte ptr [rax - 0x39] ; ret 0xffd0
0x00000000004234dd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429f7d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004230cd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422bd9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004233e9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bbca : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b3ea : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b7da : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042affa : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aadd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a2bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422e5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429a9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042319d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004234b9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b199 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000423589 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429ddd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004295bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a79d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042333d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422b2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000422f2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b68a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aeaa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bfba : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042340d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422bfd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004298fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422c9f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422ffd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000429a33 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a733 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a253 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b58b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042bebb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042326d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042aa73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d73 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429893 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a593 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b6db : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aefb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422cc3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a3d24 : sbb cl, r15b ; call rsi
0x00000000004c7058 : sbb dh, bl ; cli ; jmp qword ptr [rdx]
0x000000000049d1b5 : sbb dh, bl ; ret
0x00000000004a3b90 : sbb dl, 0xf8 ; inc dword ptr [rax - 0x24] ; clc ; jmp qword ptr [rax]
0x0000000000476a6f : sbb dl, dh ; jmp r11
0x0000000000494608 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004029ab : sbb dword ptr [rax - 0x76b7ffd4], edx ; ret 0x8348
0x000000000049d0a9 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000494591 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494609 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000453358 : sbb dword ptr [rbx - 0x4a743], eax ; call qword ptr [rax]
0x00000000004bae3d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000454fb6 : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000043d6b7 : sbb eax, -1 ; ret
0x00000000004429a5 : sbb eax, 0 ; leave ; ret
0x000000000049c202 : sbb eax, 0x18c48348 ; ret
0x000000000049f1f0 : sbb eax, 0x22cd2b ; jne 0x49f1e0 ; pop rbx ; ret
0x00000000004943b1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494429 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047897a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000049cd8f : sbb eax, eax ; ret
0x000000000043d6b5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004bcb20 : sbb eax, edx ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret 0x4b
0x000000000047b6e9 : sbb ebx, 0x89000001 ; ret
0x000000000045c440 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x0000000000446ab7 : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000004a3d99 : sbb ecx, edi ; call qword ptr [rdx]
0x00000000004a3cdd : sbb ecx, edi ; call rax
0x00000000004a3cd9 : sbb ecx, edi ; inc dword ptr [rax + 0x19] ; stc ; call rax
0x00000000004a3d19 : sbb ecx, edi ; jmp qword ptr [rsi]
0x00000000004a3ed9 : sbb ecx, edi ; jmp rax
0x0000000000425afd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042bc1e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x000000000042bd1d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042559d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004012e4 : scasd eax, dword ptr [rdi] ; ret
0x000000000041061c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000043e1fa : scasd eax, dword ptr [rdi] ; ret 0x72e9
0x0000000000420c88 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000401403 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000043e1e5 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000000000044f9c0 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x000000000048837d : scasd eax, dword ptr [rdi] ; ret 0xf48
0x00000000004427bc : setae al ; ret
0x000000000041697c : setne al ; neg eax ; ret
0x0000000000444180 : setne dl ; jmp 0x444168
0x0000000000465da5 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004a386c : shl byte ptr [rbp - 8], 1 ; push qword ptr [rax + 0x67] ; clc ; call qword ptr [rax]
0x000000000043d8ff : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000043bca3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004214d5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042fabb : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042fad2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000465946 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465957 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042f9b1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af7f0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004b9988 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000042fa36 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043d75b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000465942 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042faed : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042fad6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042fabf : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042e57b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042fa51 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000425e4c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042f911 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000444231 : shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000044422e : shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x0000000000478edc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478e67 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478e36 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000042c861 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000004762a1 : shl edx, 5 ; add rdx, rax ; jmp 0x4762be
0x0000000000478edb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000478e66 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000478e35 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004762a0 : shl rdx, 5 ; add rdx, rax ; jmp 0x4762bf
0x000000000047629f : shl rdx, 5 ; add rdx, rax ; jmp 0x4762c0
0x000000000046a89f : shr bl, cl ; ret
0x0000000000445c6d : shr bl, cl ; ret 0x438b
0x000000000042e51f : shr byte ptr [rcx], 0xc8 ; ret
0x000000000044c828 : shr byte ptr [rcx], cl ; ret
0x00000000004681e0 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000004261eb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000049bce2 : shr cl, 1 ; ret 0xfffe
0x000000000045ec37 : shr cl, cl ; ret
0x0000000000426c79 : shr dword ptr [rdx], cl ; add dword ptr [rax], eax ; ret
0x000000000043e40a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000043e3e9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000478fec : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478f71 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478f40 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464c63 : shr edx, 2 ; sub eax, edx ; ret
0x0000000000478feb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000478f70 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000478f3f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000464c62 : shr rdx, 2 ; sub eax, edx ; ret
0x00000000004ae9c9 : sldt word ptr [rax] ; ret
0x0000000000445cfc : stc ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a722 : stc ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004a40fa : stc ; call qword ptr [rax + 0x10fff90b]
0x00000000004a40f2 : stc ; call qword ptr [rax + 0x10fff90c]
0x00000000004a40ea : stc ; call qword ptr [rax + 0x10fff90d]
0x00000000004a40e2 : stc ; call qword ptr [rax + 0x10fff90e]
0x00000000004a40da : stc ; call qword ptr [rax + 0x10fff90f]
0x00000000004a4112 : stc ; call qword ptr [rax + 0x10fff910]
0x00000000004a3ee6 : stc ; call qword ptr [rax + 0x20fff917]
0x00000000004a3cee : stc ; call qword ptr [rax]
0x00000000004a3fca : stc ; call qword ptr [rdx + 0x22fff909]
0x00000000004a3dba : stc ; call qword ptr [rdx + 0x22fff915]
0x00000000004a3d9a : stc ; call qword ptr [rdx]
0x00000000004a3d16 : stc ; call qword ptr [rsi + 0x26fff919]
0x00000000004a3d36 : stc ; call qword ptr [rsi]
0x00000000004a3cde : stc ; call rax
0x0000000000466f79 : stc ; call rbx
0x00000000004c4ac2 : stc ; call rdi
0x00000000004a3dca : stc ; call rdx
0x00000000004a3d26 : stc ; call rsi
0x00000000004a3e52 : stc ; call rsp
0x00000000004a41b5 : stc ; clc ; call rax
0x000000000047aa22 : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000487947 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485bfa : stc ; dec dword ptr [rax - 0x7d] ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000004a3ef2 : stc ; inc dword ptr [rax + 0x16] ; stc ; call rax
0x00000000004a3cda : stc ; inc dword ptr [rax + 0x19] ; stc ; call rax
0x00000000004a427e : stc ; inc dword ptr [rax] ; jae 0x4a4281 ; jmp qword ptr [rax]
0x00000000004a425e : stc ; inc dword ptr [rax] ; jb 0x4a4261 ; jmp qword ptr [rax]
0x00000000004a4222 : stc ; inc dword ptr [rax] ; jno 0x4a4225 ; call qword ptr [rax]
0x00000000004a413e : stc ; inc dword ptr [rax] ; or edi, ecx ; push qword ptr [rax + 0xa] ; stc ; jmp rax
0x00000000004a3ee2 : stc ; inc dword ptr [rax] ; sbb cl, bh ; call qword ptr [rax + 0x20fff917]
0x000000000046d4c4 : stc ; inc dword ptr [rcx - 0x47] ; ret
0x00000000004a3dc6 : stc ; inc dword ptr [rdx + 0x14] ; stc ; call rdx
0x00000000004a3d22 : stc ; inc dword ptr [rsi + 0x18] ; stc ; call rsi
0x00000000004a3d12 : stc ; inc dword ptr [rsi] ; sbb bh, cl ; call qword ptr [rsi + 0x26fff919]
0x00000000004a3cfa : stc ; inc eax ; adc eax, 0x1550fff9 ; stc ; jmp rax
0x00000000004a42ce : stc ; inc eax ; ja 0x4a42d1 ; call rax
0x00000000004a4276 : stc ; inc eax ; jb 0x4a4279 ; jmp rax
0x00000000004a42a6 : stc ; inc eax ; jbe 0x4a42a9 ; call rax
0x00000000004a4252 : stc ; inc eax ; jno 0x4a4255 ; jmp rax
0x00000000004a4212 : stc ; inc eax ; jo 0x4a4215 ; call rax
0x000000000042acd2 : stc ; je 0x42ac9e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000496092 : stc ; je 0x49605e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a40d2 : stc ; jmp qword ptr [rax + 0x20fff910]
0x00000000004a3cd2 : stc ; jmp qword ptr [rax]
0x00000000004a3dbe : stc ; jmp qword ptr [rdx]
0x00000000004a3d1a : stc ; jmp qword ptr [rsi]
0x00000000004a3d02 : stc ; jmp rax
0x00000000004a3dae : stc ; jmp rdx
0x00000000004a3d4a : stc ; jmp rsi
0x00000000004a3e76 : stc ; jmp rsp
0x00000000004b9804 : stc ; jnp 0x4b97c3 ; ret
0x00000000004a3f8a : stc ; lcall ptr [rcx + rcx + 0x92cfff9] ; stc ; call rdx
0x00000000004a3f8e : stc ; ljmp ptr [rcx + rcx] ; stc ; call rdx
0x0000000000432378 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046d747 : stc ; mov r15, rax ; jmp 0x46d715
0x00000000004a3cd6 : stc ; push qword ptr [rax + 0x40fff919] ; sbb ecx, edi ; call rax
0x00000000004a4142 : stc ; push qword ptr [rax + 0xa] ; stc ; jmp rax
0x00000000004a3f3e : stc ; push qword ptr [rax + 0xb] ; stc ; jmp rax
0x00000000004a42ca : stc ; push qword ptr [rax - 0x3f000689] ; ja 0x4a42d5 ; call rax
0x00000000004a424e : stc ; push qword ptr [rax - 0x3f00068f] ; jno 0x4a4259 ; jmp rax
0x00000000004a420e : stc ; push qword ptr [rax - 0x3f000690] ; jo 0x4a4219 ; call rax
0x00000000004a3dc2 : stc ; push qword ptr [rdx + 0x42fff914] ; adc al, 0xf9 ; call rdx
0x00000000004a3d1e : stc ; push qword ptr [rsi + 0x46fff918] ; sbb cl, bh ; call rsi
0x00000000004a42d6 : stc ; push rax ; ja 0x4a42d9 ; call qword ptr [rax]
0x00000000004a42b2 : stc ; push rax ; jbe 0x4a42b5 ; call qword ptr [rax]
0x00000000004a425a : stc ; push rax ; jno 0x4a4261 ; inc dword ptr [rax] ; jb 0x4a4265 ; jmp qword ptr [rax]
0x00000000004a421e : stc ; push rax ; jo 0x4a4225 ; inc dword ptr [rax] ; jno 0x4a4229 ; call qword ptr [rax]
0x00000000004a42f6 : stc ; push rax ; js 0x4a42f9 ; call qword ptr [rax]
0x00000000004a410e : stc ; push rax ; or cl, bh ; call qword ptr [rax + 0x10fff910]
0x00000000004a3f3a : stc ; push rax ; or edi, ecx ; push qword ptr [rax + 0xb] ; stc ; jmp rax
0x000000000043dc5a : stc ; salc ; clc ; ret
0x0000000000435ca4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000004be21a : std ; call qword ptr [rax]
0x00000000004be34e : std ; call qword ptr [rbx + rax*8]
0x00000000004c4222 : std ; call qword ptr [rbx]
0x00000000004be7fa : std ; call qword ptr [rdi - 3]
0x00000000004be7de : std ; call qword ptr [rdx]
0x00000000004be2e6 : std ; call rax
0x00000000004c7532 : std ; call rcx
0x00000000004be3d2 : std ; call rsp
0x00000000004a4181 : std ; clc ; call rax
0x00000000004be602 : std ; dec dword ptr [rax + rdx*8 - 3] ; call rsp
0x00000000004be5fe : std ; dec dword ptr [rax + rdx*8 - 3] ; dec dword ptr [rax + rdx*8 - 3] ; call rsp
0x00000000004401ac : std ; dec dword ptr [rax - 0x75] ; jge 0x4401b8 ; call rbx
0x000000000044045f : std ; dec dword ptr [rax - 0x75] ; jge 0x44046b ; call rbx
0x0000000000441ff7 : std ; dec dword ptr [rax - 0x75] ; jge 0x442003 ; call rbx
0x000000000043f6c1 : std ; dec dword ptr [rax - 0x77] ; ret
0x000000000044006a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000044046d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000440077 : std ; dec dword ptr [rcx - 0x75] ; jge 0x440083 ; call rbx
0x000000000044019e : std ; dec dword ptr [rcx - 0x75] ; jge 0x4401aa ; call rbx
0x00000000004402e1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x4402ed ; call rbx
0x0000000000440451 : std ; dec dword ptr [rcx - 0x75] ; jge 0x44045d ; call rbx
0x0000000000441c6f : std ; dec dword ptr [rcx - 0x75] ; jge 0x441c7b ; call rbx
0x0000000000441d97 : std ; dec dword ptr [rcx - 0x75] ; jge 0x441da3 ; call rbx
0x0000000000441eda : std ; dec dword ptr [rcx - 0x75] ; jge 0x441ee6 ; call rbx
0x0000000000441fdb : std ; dec dword ptr [rcx - 0x75] ; jge 0x441fe7 ; call rbx
0x00000000004402df : std ; fdiv st(5), st(0) ; dec dword ptr [rcx - 0x75] ; jge 0x4402ef ; call rbx
0x00000000004be1ea : std ; inc dword ptr [rax + 0x66] ; std ; jmp qword ptr [rax]
0x00000000004be20a : std ; inc dword ptr [rax + 0x75] ; std ; jmp qword ptr [rax]
0x00000000004be266 : std ; inc dword ptr [rax - 0x2f0002c2] ; std ; jmp qword ptr [rax]
0x00000000004be212 : std ; inc dword ptr [rax] ; jns 0x4be219 ; jmp rax
0x00000000004be1f2 : std ; inc dword ptr [rax] ; push 0xfd ; jmp rax
0x000000000047349f : std ; inc dword ptr [rbp - 0x76b48a40] ; ret
0x00000000004be406 : std ; inc dword ptr [rdx + rdx*8 - 3] ; push rsp ; sar ebp, 1 ; call rsp
0x00000000004be3f6 : std ; inc dword ptr [rsi + rcx*8 - 3] ; push qword ptr [rsi + rcx*8] ; std ; call rsp
0x00000000004be276 : std ; inc eax ; std ; call qword ptr [rax]
0x00000000004be356 : std ; inc esp ; ret
0x000000000047814e : std ; jbe 0x47815b ; ret
0x00000000004be1ee : std ; jmp qword ptr [rax]
0x00000000004c340a : std ; jmp qword ptr [rdx]
0x00000000004be1f6 : std ; jmp rax
0x00000000004be32e : std ; jmp rsp
0x00000000004be7fe : std ; ljmp ptr [rdi - 0x182b0003] ; std ; jmp rsp
0x000000000047d538 : std ; mov r15, rax ; jmp 0x47d552
0x0000000000431b9b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004be272 : std ; push qword ptr [rax + 0x45] ; std ; inc eax ; std ; call qword ptr [rax]
0x00000000004be1e6 : std ; push qword ptr [rax + 0x64] ; std ; inc dword ptr [rax + 0x66] ; std ; jmp qword ptr [rax]
0x00000000004be3fa : std ; push qword ptr [rsi + rcx*8] ; std ; call rsp
0x00000000004be40a : std ; push rsp ; sar ebp, 1 ; call rsp
0x00000000004589f1 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000440cc0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000426681 : sti ; add byte ptr [rax + 0xf], cl ; ret 0xb8c3
0x00000000004c7622 : sti ; call qword ptr [rax]
0x00000000004c787a : sti ; call rsp
0x000000000046bce7 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000474704 : sti ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004663f5 : sti ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000044e386 : sti ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000004c830a : sti ; jmp qword ptr [rax]
0x00000000004c741a : sti ; jmp qword ptr [rdx]
0x00000000004c72aa : sti ; jmp rsi
0x0000000000431f78 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004748a1 : sti ; push rax ; and eax, 0x89485300 ; ret
0x00000000004b998a : sti ; ret
0x000000000048ed96 : sti ; ret 0xffbf
0x00000000004c8309 : sti ; sti ; jmp qword ptr [rax]
0x000000000044ef27 : sti ; test rax, rax ; je 0x44ef35 ; call rax
0x000000000043ff10 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x000000000047aaaf : stosb byte ptr [rdi], al ; add byte ptr [r15 + 0x6cc360], r15b ; call rax
0x00000000004b9e64 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000470d34 : stosb byte ptr [rdi], al ; insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000004683c8 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004683c9 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004baf6c : stosd dword ptr [rdi], eax ; ret
0x000000000046bce6 : stosd dword ptr [rdi], eax ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000004683c7 : stosd dword ptr [rdi], eax ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x00000000004bb351 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004c2558 : sub al, 0 ; add byte ptr [rax], al ; pop rsp ; cmp al, 0 ; add byte ptr [rax], ah ; ret
0x00000000004008fa : sub al, 0 ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004006a9 : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000004014ce : sub al, 0 ; xor eax, eax ; ret
0x000000000041aca4 : sub al, 0x4a ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000442b8a : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042f103 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004a3f90 : sub al, 9 ; stc ; call rdx
0x00000000004c1325 : sub al, byte ptr [rax] ; add byte ptr [rax - 0x47], ch ; cmc ; call qword ptr [rcx]
0x000000000041dbcd : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041eff3 : sub al, byte ptr [rax] ; test rax, rax ; je 0x41f003 ; call rax
0x0000000000480dc1 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x00000000004c3408 : sub al, dl ; std ; jmp qword ptr [rdx]
0x000000000045fd93 : sub bh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xb848
0x000000000045f83a : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000463e5c : sub bh, bh ; loopne 0x463df9 ; mov eax, 0xffffffff ; ret
0x000000000041077e : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000046dbbc : sub byte ptr [rax + 0x39], cl ; ret 0x1376
0x000000000046c9a6 : sub byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000483ba7 : sub byte ptr [rax + 0x48000000], 0x39 ; ret 0x820f
0x000000000041077f : sub byte ptr [rax + 1], cl ; ret 0x8949
0x0000000000466a90 : sub byte ptr [rax - 0x73], cl ; je 0x466abf ; call rbx
0x000000000041c5bb : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff9
0x000000000041eab4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000040558f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000004104d5 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x0000000000462d2c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040d3f9 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000048211c : sub byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000044270d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000478601 : sub byte ptr [rax], al ; jne 0x478618 ; add rsp, 0x38 ; ret
0x000000000044416a : sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000445695 : sub byte ptr [rax], al ; ret
0x0000000000444144 : sub byte ptr [rax], al ; test eax, eax ; je 0x444156 ; ret
0x000000000043fd85 : sub byte ptr [rax], al ; test rax, rax ; je 0x43fd96 ; ret
0x000000000040dada : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000414860 : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000444123 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000444122 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000004c34b0 : sub byte ptr [rbx], 0xf8 ; jmp rsp
0x00000000004bebe8 : sub byte ptr [rbx], dh ; hlt ; call qword ptr [rdx]
0x000000000044cfda : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000487f34 : sub byte ptr [rcx], cl ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000041ebcc : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000047af9b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000041ae05 : sub byte ptr [rdx], cl ; call 0x417055
0x000000000041acbc : sub byte ptr [rip - 0x7417ffb6], ch ; ret
0x00000000004bfd61 : sub ch, dh ; call qword ptr [rax]
0x000000000047ba5d : sub cl, al ; call 0xffffffff8a09e388
0x000000000047c3b4 : sub cl, al ; call 0xffffffff8a09ecdf
0x0000000000471b7e : sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000004683ca : sub cl, byte ptr [rcx + 1] ; ret 0xf43
0x0000000000414045 : sub cl, ch ; ret 0xfffe
0x00000000004bcb28 : sub dl, al ; add byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x4b
0x0000000000476e0a : sub dl, dh ; call r11
0x000000000046dbc9 : sub dword ptr [rax + rcx*2], 0x39 ; ret 0x576
0x000000000046cdc9 : sub dword ptr [rax - 0x9fffffe], 5 ; ret
0x00000000004c123d : sub dword ptr [rax], eax ; add byte ptr [rax], al ; mov ch, 0xf5 ; call qword ptr [rax]
0x00000000004301c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4301dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430317 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43032d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430467 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43047d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004305b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4305cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430707 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43071d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430857 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43086d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004309a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4309bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430af7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430b0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430dad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430efd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43104d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43119d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43143d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430123 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043011f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004301cd : sub dword ptr [rdi], esp ; jmp r9
0x000000000042f8e6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000046998c : sub dword ptr [rsi], esp ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000046992e : sub dword ptr [rsi], esp ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0x469947
0x000000000041eba9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004113fe : sub eax, 0x29480005 ; ret
0x00000000004a41ed : sub eax, 0x2f20fff9 ; stc ; jmp qword ptr [rax]
0x000000000045d341 : sub eax, 0x83000000 ; ret
0x000000000041acbd : sub eax, 0x8be8004a ; ret
0x00000000004654ac : sub eax, 0x8ce8004b ; ret 0xfff9
0x000000000046547f : sub eax, 0xb9e8004b ; ret 0xfff9
0x000000000043ec5c : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000044d444 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000043db34 : sub eax, 1 ; ret
0x00000000004783a6 : sub eax, dword ptr [0] ; ret
0x0000000000417dd1 : sub eax, dword ptr [r8] ; test rax, rax ; je 0x417de3 ; call rax
0x0000000000416909 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416896 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b56a5], 1 ; ret
0x0000000000416805 : sub eax, dword ptr [rax] ; ret
0x0000000000417dd2 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x417de2 ; call rax
0x000000000040179f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000499ec1 : sub eax, dword ptr [rcx + r8*4] ; je 0x499ea7 ; ret
0x0000000000499ec2 : sub eax, dword ptr [rcx + rax*4] ; je 0x499ea6 ; ret
0x000000000041703e : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000043e55a : sub eax, dword ptr [rdx + rcx*4] ; je 0x43e546 ; ret
0x00000000004164f3 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004151ad : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000466acb : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000415c29 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000047a59d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042294c : sub eax, ecx ; ret
0x0000000000423a19 : sub eax, edi ; ret
0x0000000000412bae : sub eax, edx ; ret
0x000000000043dce7 : sub eax, edx ; vzeroupper ; ret
0x000000000041530e : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412a08 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b9bfe : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b8695 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000479585 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x000000000044422c : sub ecx, eax ; shl ecx, 3 ; shl eax, cl ; pop rbx ; pop rbp ; ret
0x000000000049f1f1 : sub ecx, ebp ; and al, byte ptr [rax] ; jne 0x49f1df ; pop rbx ; ret
0x00000000004a41e5 : sub ecx, edi ; jmp qword ptr [rax]
0x00000000004c34b1 : sub edi, eax ; jmp rsp
0x00000000004a41e9 : sub edi, ecx ; jmp qword ptr [rax]
0x0000000000442751 : sub edx, 0x1b ; add byte ptr [rax], al ; ret
0x0000000000416520 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000416515 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000426074 : sub edx, eax ; jbe 0x4260b7 ; add rax, rdi ; ret
0x0000000000426084 : sub edx, eax ; jbe 0x4260b9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000426094 : sub edx, eax ; jbe 0x4260b9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x00000000004260a4 : sub edx, eax ; jbe 0x4260b9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004105b2 : sub edx, esi ; mov rdi, r15 ; call rax
0x00000000004121c4 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000004a15f1 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000415c28 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000043db33 : sub rax, 1 ; ret
0x00000000004783a5 : sub rax, qword ptr [0] ; ret
0x000000000041703d : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000004783a4 : sub rax, qword ptr fs:[0] ; ret
0x0000000000466aca : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000423a18 : sub rax, rdi ; ret
0x0000000000412bad : sub rax, rdx ; ret
0x000000000043dce6 : sub rax, rdx ; vzeroupper ; ret
0x0000000000426073 : sub rdx, rax ; jbe 0x4260b8 ; add rax, rdi ; ret
0x00000000004105b1 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000004121c3 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004a15f0 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000442807 : syscall ; pop rdx ; pop rsi ; ret
0x00000000004671b5 : syscall ; ret
0x000000000044381f : test ah, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004106f3 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x0000000000415629 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049a093 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004678e9 : test al, 0x40 ; ret 0x6c
0x00000000004b8f57 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004c4278 : test al, 0xb2 ; clc ; call qword ptr [rdi]
0x000000000047dbad : test al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004be2e4 : test al, 0xbc ; std ; call rax
0x00000000004c4df8 : test al, 0xde ; stc ; jmp rax
0x0000000000442419 : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004c6a61 : test al, 0xfa ; call rdx
0x000000000043f4d6 : test al, 2 ; cmove eax, edx ; ret
0x000000000042e51a : test al, al ; jne 0x42e508 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000041a6a5 : test al, dl ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004212d6 : test ax, 1 ; ret
0x00000000004be22d : test bh, ch ; call rax
0x0000000000445cfb : test bh, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041a721 : test bh, cl ; add eax, 0xf6410000 ; ret 0xf01
0x000000000046d7d7 : test bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046b0d3 : test bl, bl ; je 0x46b0c6 ; ret
0x00000000004750c5 : test byte ptr [r8 - 0x77], r9b ; ret
0x000000000047c4c3 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000004c0584 : test byte ptr [rax + rax], bl ; add byte ptr [rax + 0x4f], ch ; cmc ; call qword ptr [rcx]
0x000000000047ba99 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004670ee : test byte ptr [rax - 0x73], 0x54 ; and al, 0x48 ; mov rdi, r12 ; call rbx
0x0000000000440581 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x0000000000440cc4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000004750c6 : test byte ptr [rax - 0x77], cl ; ret
0x000000000046fbc1 : test byte ptr [rax], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004c6d3d : test byte ptr [rax], al ; add byte ptr [rax], ah ; sar edx, 1 ; jmp rsi
0x000000000043be7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000043b2ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041682a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000411dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000442d08 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000004167ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000043e3ba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000411b6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043bcba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000046617c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000444c28 : test byte ptr [rax], bh ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000041920b : test byte ptr [rax], dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000466194 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000047a8c6 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000417506 : test byte ptr [rbp - 0xa000000], ah ; ret
0x000000000047acba : test byte ptr [rbx + 0x2516a33d], 0 ; jmp rax
0x000000000041e0e7 : test byte ptr [rbx - 0xa000000], cl ; ret
0x00000000004493fc : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000041772e : test byte ptr [rbx], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000049b19b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000044fff2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000049cd32 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x0000000000466f73 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x0000000000457a5a : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000043ff12 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x0000000000422cc6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004c7fad : test byte ptr [rcx], al ; ret
0x0000000000417f97 : test byte ptr [rdi - 0xa000000], cl ; ret
0x00000000004a007e : test byte ptr [rdi], 0x84 ; ret
0x000000000044038a : test byte ptr [rdi], 0x84 ; ret 0
0x000000000047165e : test byte ptr [rdi], 0x85 ; ret
0x000000000047bb77 : test byte ptr [rdi], 0x94 ; ret 0xd021
0x0000000000486b1d : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000465dbc : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004005a3 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000465da4 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004114f4 : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004737be : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046565d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000004059d5 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004238fd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004c1f84 : test byte ptr [rsi], dh ; add byte ptr [rax], al ; pop rax ; mov esi, dr0 ; call qword ptr [rax]
0x000000000044e56d : test byte ptr [rsi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043e3d2 : test ch, 0xf0 ; je 0x43e3cb ; movzx eax, cl ; pop rbx ; ret
0x000000000043d7bf : test cl, cl ; jne 0x43d7b4 ; ret
0x000000000043d86f : test cl, cl ; jne 0x43d864 ; ret
0x000000000043db2f : test cl, cl ; jne 0x43db28 ; sub rax, 1 ; ret
0x00000000004687ad : test cl, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041d109 : test cl, dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000043e3fa : test dh, 0xf0 ; je 0x43e3c9 ; movzx eax, dl ; pop rbx ; ret
0x000000000043e3fa : test dh, 0xf0 ; je 0x43e3cb ; movzx eax, dl ; pop rbx ; ret
0x000000000041a650 : test dh, al ; add eax, 0xf6410000 ; ret 0xf01
0x00000000004465fe : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041dddf : test dh, ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446b75 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000043bd04 : test dl, 0x40 ; jne 0x43bcc9 ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000043bd32 : test dl, 4 ; jne 0x43bcc9 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004190f4 : test dl, bh ; add al, 0 ; add dh, dh ; ret
0x000000000045bc73 : test dl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000420756 : test dl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 9], al ; ret
0x000000000044dc06 : test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040db22 : test dl, dl ; jne 0x40db04 ; ret
0x000000000043d9df : test dl, dl ; jne 0x43d9d8 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000426c39 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000004014cd : test dword ptr [rax + rax], ebp ; xor eax, eax ; ret
0x0000000000460b2b : test dword ptr [rax - 0x16000006], ebp ; ret 0xffef
0x000000000047dc74 : test dword ptr [rax - 0x3f], 0x894803e0 ; ret 0x8948
0x000000000045c6b9 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000042c5af : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000042f3e7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f836 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047eae9 : test dword ptr [rbx - 0x16000002], esi ; ret
0x0000000000418330 : test dword ptr [rbx], ecx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000451ccb : test dword ptr [rbx], esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000425fea : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x0000000000426950 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x00000000004100a6 : test dword ptr [rcx + 0xf], 0x8948c046 ; ret 0x8949
0x000000000042f3bd : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f2cd : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042f1dd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004502be : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000040414c : test dword ptr [rcx], 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000041b40a : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000047db5a : test dword ptr [rcx], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x0000000000426b3a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000045f760 : test dword ptr [rdi + rbp*8 - 1], edx ; jmp qword ptr [rax]
0x000000000047cd63 : test dword ptr [rdi + rdi*8 - 1], ecx ; inc dword ptr [rcx - 0x77] ; ret
0x000000000049d114 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000045b2ac : test dword ptr [rdi - 0x7c00000c], esi ; ret
0x000000000042c3c5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x000000000041f884 : test dword ptr [rdi], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042f102 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004465ff : test dword ptr [rdx], 0x83480000 ; ret
0x0000000000440d2d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000043d542 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c6ae : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000042f608 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004bac40 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000432d76 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004426bb : test eax, eax ; cmove eax, edx ; ret
0x0000000000402c52 : test eax, eax ; je 0x402c66 ; mov edi, 0x6cba00 ; call rax
0x0000000000402ea1 : test eax, eax ; je 0x402ebf ; mov edi, 0x6cb980 ; call rax
0x0000000000403095 : test eax, eax ; je 0x4030b3 ; mov edi, 0x6cb980 ; call rax
0x00000000004034b0 : test eax, eax ; je 0x4034c4 ; mov edi, 0x6cba40 ; call rax
0x00000000004035f8 : test eax, eax ; je 0x40360c ; mov edi, 0x6cba40 ; call rax
0x0000000000417cf8 : test eax, eax ; je 0x417d03 ; pop rbx ; ret
0x0000000000417dd5 : test eax, eax ; je 0x417ddf ; call rax
0x000000000041eff6 : test eax, eax ; je 0x41f000 ; call rax
0x00000000004236d3 : test eax, eax ; je 0x4236df ; xchg eax, edx ; sub eax, edx ; ret
0x000000000043e646 : test eax, eax ; je 0x43e65a ; mov edi, 0x6cc0c0 ; call rax
0x000000000043e65e : test eax, eax ; je 0x43e672 ; mov edi, 0x6cc0c0 ; call rax
0x000000000043fd88 : test eax, eax ; je 0x43fd93 ; ret
0x0000000000443fbf : test eax, eax ; je 0x443fd3 ; mov edi, 0x6caae0 ; call rax
0x0000000000444146 : test eax, eax ; je 0x444154 ; ret
0x000000000044d97e : test eax, eax ; je 0x44d992 ; mov edi, 0x6cc0c0 ; call rax
0x000000000044d9ad : test eax, eax ; je 0x44d9c9 ; mov edi, 0x6cc0c0 ; call rax
0x000000000044daae : test eax, eax ; je 0x44dab8 ; call rax
0x000000000044db0d : test eax, eax ; je 0x44db21 ; mov edi, 0x6cc0c0 ; call rax
0x000000000044dc86 : test eax, eax ; je 0x44dca1 ; mov edi, 0x6cc0c0 ; call rax
0x000000000044df66 : test eax, eax ; je 0x44df7a ; mov edi, 0x6cc0c0 ; call rax
0x000000000044e06a : test eax, eax ; je 0x44e074 ; call rax
0x000000000044ef29 : test eax, eax ; je 0x44ef33 ; call rax
0x0000000000470cc2 : test eax, eax ; je 0x470cd6 ; mov edi, 0x6caaa0 ; call rax
0x0000000000474cb6 : test eax, eax ; je 0x474cca ; mov edi, 0x6caae0 ; call rax
0x0000000000474cde : test eax, eax ; je 0x474cf2 ; mov edi, 0x6caae0 ; call rax
0x0000000000474d54 : test eax, eax ; je 0x474d68 ; mov edi, 0x6caae0 ; call rax
0x0000000000476821 : test eax, eax ; je 0x476899 ; mov edi, 0x6caae0 ; call rax
0x00000000004781dc : test eax, eax ; je 0x4781ab ; mov edi, 0x6caae0 ; call rax
0x000000000047833a : test eax, eax ; je 0x47834e ; mov edi, 0x6caae0 ; call rax
0x000000000047b080 : test eax, eax ; je 0x47b098 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e756 : test eax, eax ; je 0x47e76a ; mov edi, 0x6caae0 ; call rax
0x000000000047e782 : test eax, eax ; je 0x47e796 ; mov edi, 0x6caae0 ; call rax
0x0000000000487f00 : test eax, eax ; je 0x487f14 ; mov edi, 0x6caae0 ; call rax
0x0000000000487fa8 : test eax, eax ; je 0x487fbc ; mov edi, 0x6caae0 ; call rax
0x000000000049e5d8 : test eax, eax ; je 0x49e5e5 ; ret
0x000000000049e6e8 : test eax, eax ; je 0x49e6f5 ; ret
0x000000000049eef8 : test eax, eax ; je 0x49ef0c ; mov edi, 0x6caaa0 ; call rax
0x000000000049efb9 : test eax, eax ; je 0x49efcd ; mov edi, 0x6caaa0 ; call rax
0x00000000004a0c5c : test eax, eax ; je 0x4a0c6b ; call rax
0x00000000004164d4 : test eax, eax ; jne 0x4164cd ; ret
0x0000000000426027 : test eax, eax ; jne 0x426087 ; xor rax, rax ; ret
0x00000000004427e0 : test eax, eax ; jne 0x4427db ; pop rdx ; pop r10 ; ret
0x0000000000473f9e : test eax, eax ; jne 0x473f75 ; ret
0x000000000049e617 : test eax, eax ; jne 0x49e625 ; ret
0x000000000049e632 : test eax, eax ; jne 0x49e645 ; ret
0x000000000049e862 : test eax, eax ; jne 0x49e875 ; ret
0x0000000000471290 : test eax, eax ; js 0x47129d ; pop rbx ; ret
0x000000000047a6db : test eax, eax ; js 0x47a6ed ; ret
0x000000000046b0c2 : test eax, eax ; mov rax, r9 ; jne 0x46b120 ; ret
0x0000000000425f50 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041e594 : test ebp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000445c6a : test ebx, ebx ; jne 0x445c45 ; jmp 0x445c37
0x000000000047a9fe : test ebx, ebx ; jne 0x47aa18 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049f080 : test ebx, ebx ; mov rdi, rbx ; jne 0x49f078 ; pop rbx ; ret
0x000000000043bcf2 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000043bcff : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000466e39 : test ecx, ecx ; jne 0x466df8 ; mov rax, rdx ; ret
0x000000000046b111 : test ecx, ecx ; jne 0x46b0c7 ; xor eax, eax ; ret
0x0000000000421280 : test edi, edi ; je 0x421299 ; mov eax, 0x16 ; ret
0x00000000004c67e9 : test edi, edx ; call rsi
0x00000000004238b2 : test edx, edx ; je 0x4238c0 ; bsf eax, edx ; ret
0x00000000004238b2 : test edx, edx ; je 0x4238c1 ; bsf eax, edx ; ret
0x000000000042395b : test edx, edx ; je 0x423977 ; bsf rax, rdx ; ret
0x000000000042395b : test edx, edx ; je 0x423978 ; bsf rax, rdx ; ret
0x00000000004656ca : test edx, edx ; je 0x4656f7 ; bsf rax, rdx ; ret
0x00000000004656ca : test edx, edx ; je 0x4656f8 ; bsf rax, rdx ; ret
0x0000000000413403 : test edx, edx ; jne 0x413414 ; ret
0x0000000000414b7f : test edx, edx ; jne 0x414b75 ; ret
0x00000000004639ef : test edx, edx ; jne 0x4639e5 ; ret
0x0000000000466e7a : test edx, edx ; jne 0x466e75 ; ret
0x0000000000400755 : test edx, edx ; jns 0x40064d ; jmp 0x40072a
0x000000000043bce5 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000041a6af : test esi, ebx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000040ed1b : test esi, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004655c1 : test esi, esi ; jne 0x4655d0 ; xor rax, rax ; ret
0x000000000042006c : test esp, edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041d113 : test esp, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000046b0d2 : test r11b, r11b ; je 0x46b0c7 ; ret
0x0000000000473f9d : test r8, r8 ; jne 0x473f76 ; ret
0x00000000004236d2 : test r8d, r8d ; je 0x4236e0 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000046b0c1 : test r8d, r8d ; mov rax, r9 ; jne 0x46b121 ; ret
0x0000000000466e38 : test r9d, r9d ; jne 0x466df9 ; mov rax, rdx ; ret
0x0000000000417cf7 : test rax, rax ; je 0x417d04 ; pop rbx ; ret
0x0000000000417dd4 : test rax, rax ; je 0x417de0 ; call rax
0x000000000041eff5 : test rax, rax ; je 0x41f001 ; call rax
0x000000000043fd87 : test rax, rax ; je 0x43fd94 ; ret
0x000000000044daad : test rax, rax ; je 0x44dab9 ; call rax
0x000000000044e069 : test rax, rax ; je 0x44e075 ; call rax
0x000000000044ef28 : test rax, rax ; je 0x44ef34 ; call rax
0x000000000047b07f : test rax, rax ; je 0x47b099 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a0c5b : test rax, rax ; je 0x4a0c6c ; call rax
0x00000000004164d3 : test rax, rax ; jne 0x4164ce ; ret
0x0000000000445c69 : test rbx, rbx ; jne 0x445c46 ; jmp 0x445c38
0x000000000047a9fd : test rbx, rbx ; jne 0x47aa19 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049f07f : test rbx, rbx ; mov rdi, rbx ; jne 0x49f079 ; pop rbx ; ret
0x000000000042395a : test rdx, rdx ; je 0x423978 ; bsf rax, rdx ; ret
0x000000000042395a : test rdx, rdx ; je 0x423979 ; bsf rax, rdx ; ret
0x00000000004656c9 : test rdx, rdx ; je 0x4656f8 ; bsf rax, rdx ; ret
0x00000000004656c9 : test rdx, rdx ; je 0x4656f9 ; bsf rax, rdx ; ret
0x0000000000413402 : test rdx, rdx ; jne 0x413415 ; ret
0x0000000000414b7e : test rdx, rdx ; jne 0x414b76 ; ret
0x00000000004639ee : test rdx, rdx ; jne 0x4639e6 ; ret
0x00000000004655c0 : test rsi, rsi ; jne 0x4655d1 ; xor rax, rax ; ret
0x0000000000413615 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043583a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000432b5a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x0000000000432a90 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x0000000000432859 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000043dc40 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000043299f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x00000000004327c3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x0000000000432826 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000043dbea : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000435826 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000043580d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000043ddbb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043ddbf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x000000000043dc55 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000043dc59 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000435b43 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004359dc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004357de : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000004357a2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000435ca5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000043df78 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x000000000043dedb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x000000000043dd7a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000042acd1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000040559d : vpsubsb xmm11, xmm15, xmm4 ; loop 0x4055ad ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000405535 : vpsubsb xmm8, xmm15, xmmword ptr [rbx + 1] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043dce9 : vzeroupper ; ret
0x000000000041eff1 : wait ; iretd ; sub al, byte ptr [rax] ; test rax, rax ; je 0x41f005 ; call rax
0x00000000004a3c9d : xbegin 0xfffffffff912fda8 ; call qword ptr [rax]
0x00000000004234df : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429f7f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004230cf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000422bdb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004233eb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bbcc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b3ec : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000042b7dc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042affc : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049782d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004423b7 : xchg bl, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffd0
0x0000000000496331 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000497531 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496c31 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496f31 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000496629 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aadf : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a2bf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000422e5f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000429a9f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000042319f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000004234bb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b19b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042358b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5ff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000429ddf : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004295bf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000042a79f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042333f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000422b2f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000049ba9c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x0000000000422f2f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000042b68c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042aeac : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bfbc : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042340f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000422bff : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000004298ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ca1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000422fff : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000004968d6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429a35 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a735 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004977d6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496ed6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000496bd6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000042a255 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042b58d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004965ce : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042bebd : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a3d34 : xchg byte ptr [rsi], dl ; stc ; call qword ptr [rsi]
0x000000000042326f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000049565f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049547f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495e57 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494d77 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000495c77 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aa75 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000429d75 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000429895 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a595 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000042b6dd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042aefd : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422cc5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000466be6 : xchg dword ptr [rax + rbp*8], eax ; ret
0x00000000004455dc : xchg dword ptr [rax - 0x39], ecx ; ret
0x00000000004c70fd : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x17], dl ; cli ; jmp qword ptr [rdx]
0x00000000004c7055 : xchg dword ptr [rax], eax ; add byte ptr [rax], bl ; fdivp st(2) ; jmp qword ptr [rdx]
0x0000000000470c86 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x0000000000443926 : xchg dword ptr [rax], ebp ; add dh, dh ; ret 0x7420
0x0000000000445176 : xchg dword ptr [rbp + rcx*4 + 0x24], ecx ; ret
0x0000000000476881 : xchg dword ptr [rbx + rax], edx ; add byte ptr [rax], al ; or byte ptr [rsp + 0x5b], dh ; ret
0x000000000045df2d : xchg dword ptr [rbx + rcx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004848f5 : xchg dword ptr [rbx - 0x76fffffd], eax ; ret 0x348
0x000000000044e675 : xchg dword ptr [rbx - 0x7c000005], ecx ; ret 0x8901
0x00000000004b890c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000049a14a : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000048292b : xchg dword ptr [rcx - 0x7d000000], ebx ; ret 0x8308
0x0000000000449782 : xchg dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000487863 : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000004427de : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x4427dd ; pop rdx ; pop r10 ; ret
0x0000000000473fbe : xchg dword ptr [rip + 0x6894800], esp ; ret
0x0000000000473fbd : xchg dword ptr [rip + 0x6894800], r12d ; ret
0x000000000046e3e8 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x0000000000485679 : xchg dword ptr [rip - 0x76ffffff], eax ; ret 0x348
0x00000000004b8aab : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004949b8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000447bab : xchg eax, ebp ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000464816 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004114a2 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004c3f61 : xchg eax, ebp ; clc ; jmp rbx
0x00000000004530b2 : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0xe920
0x000000000041aeca : xchg eax, ebp ; ret
0x000000000047bc61 : xchg eax, ebp ; ret 0x3840
0x0000000000462c87 : xchg eax, ebp ; ret 0x5389
0x000000000041c269 : xchg eax, ebp ; ret 0x8348
0x0000000000466f8e : xchg eax, ebp ; ret 0x8b4c
0x000000000048a6a5 : xchg eax, ebp ; ret 0x941
0x00000000004038b7 : xchg eax, ebp ; ret 0x953d
0x0000000000467c7b : xchg eax, ebp ; ret 0xb60f
0x0000000000467131 : xchg eax, ebp ; ret 0xb8e9
0x000000000046b6ff : xchg eax, ebp ; ret 0xc084
0x000000000045b135 : xchg eax, ebp ; ret 0xc283
0x0000000000442f68 : xchg eax, ebp ; ret 0xc985
0x0000000000488fba : xchg eax, ebp ; ret 0xd348
0x0000000000466fec : xchg eax, ebp ; ret 0xd721
0x000000000040f824 : xchg eax, ebp ; ret 0xdaf7
0x0000000000444181 : xchg eax, ebp ; ret 0xe1eb
0x0000000000466c20 : xchg eax, ebp ; ret 0xe883
0x000000000049b8aa : xchg eax, ebp ; ret 0xf45
0x0000000000467bef : xchg eax, ebp ; ret 0xf748
0x000000000041697d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000485a89 : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000004151d2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000046a120 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042e550 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x000000000043b17c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042fcd2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000044fab0 : xchg eax, ebx ; ret 0x3948
0x000000000045060e : xchg eax, ebx ; ret 0x3949
0x000000000041127f : xchg eax, ebx ; ret 0x840
0x0000000000450ae3 : xchg eax, ebx ; ret 0x8548
0x0000000000464284 : xchg eax, ebx ; ret 0xd108
0x00000000004be255 : xchg eax, ebx ; std ; call rax
0x0000000000421067 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000042ab81 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000004a3a1c : xchg eax, ecx ; mov ecx, 0xba91fff8 ; clc ; call qword ptr [rcx]
0x00000000004292af : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004a3991 : xchg eax, edi ; clc ; jmp rax
0x0000000000409835 : xchg eax, edi ; ret
0x000000000044241b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000441e45 : xchg eax, edi ; sar ebp, -1 ; mov rdi, qword ptr [r14] ; call rbx
0x00000000004b8f58 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000004c7b6d : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sti ; jmp qword ptr [rdx]
0x0000000000485a9f : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x000000000041782a : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004ba81d : xchg eax, edx ; jae 0x4ba7fa ; push rsi ; pop rdx ; je 0x4ba7ef ; ret 0xacfc
0x000000000045c256 : xchg eax, edx ; jmp qword ptr [rsi]
0x00000000004a3fcc : xchg eax, edx ; or ecx, edi ; jmp qword ptr [rdx]
0x000000000046e2bb : xchg eax, edx ; ret 0x8348
0x0000000000475196 : xchg eax, edx ; ret 0xb60f
0x000000000044241e : xchg eax, edx ; ret 0xd029
0x00000000004b890f : xchg eax, edx ; ret 0xf869
0x00000000004236d7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000042e850 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004697e6 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000434587 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000042e90d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042e86b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000403186 : xchg eax, esi ; ret
0x00000000004bb1ac : xchg eax, esi ; ret 0xcd11
0x000000000042e8bc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a0e46 : xchg eax, esi ; sal edi, 1 ; push rbx ; ret
0x00000000004a3d18 : xchg eax, esi ; sbb ecx, edi ; jmp qword ptr [rsi]
0x00000000004c3ed1 : xchg eax, esp ; clc ; call qword ptr [rdx]
0x0000000000444178 : xchg eax, esp ; imul eax, dword ptr [rdx], 0x39d23100 ; ret
0x00000000004bb3bf : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4bb350 ; ret 0x48f
0x00000000004589f4 : xchg eax, esp ; ret
0x000000000046d7c7 : xchg eax, esp ; ret 0x1f0f
0x000000000047c2ae : xchg eax, esp ; ret 0x3840
0x000000000047b9ec : xchg eax, esp ; ret 0x5438
0x000000000041b3f9 : xchg eax, esp ; ret 0x7ae9
0x00000000004618c5 : xchg eax, esp ; ret 0x7f3c
0x000000000043e0bf : xchg eax, esp ; ret 0x8341
0x0000000000449d35 : xchg eax, esp ; ret 0x8348
0x000000000043e15f : xchg eax, esp ; ret 0x8444
0x000000000046f3b1 : xchg eax, esp ; ret 0x8545
0x000000000047ad3e : xchg eax, esp ; ret 0x950f
0x0000000000455a58 : xchg eax, esp ; ret 0x9522
0x00000000004027f8 : xchg eax, esp ; ret 0xb60f
0x000000000046bb5c : xchg eax, esp ; ret 0xc283
0x000000000047bb79 : xchg eax, esp ; ret 0xd021
0x00000000004859a6 : xchg eax, esp ; ret 0xd309
0x000000000047b93f : xchg eax, esp ; ret 0xda38
0x000000000047a780 : xchg eax, esp ; ret 0xdaf7
0x000000000049b84b : xchg eax, esp ; ret 0xf45
0x0000000000459b18 : xchg eax, esp ; ret 0xfa80
0x000000000043e0e2 : xchg eax, esp ; ret 0xfe83
0x000000000046ac6f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004117c1 : xchg eax, r8d ; jmp 0x4116cd
0x00000000004be235 : xchg ebp, edi ; call rax
0x0000000000418da4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x000000000043ebbf : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000004114a1 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000004190f5 : xlatb ; add al, 0 ; add dh, dh ; ret
0x0000000000469da5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b1819 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042fbac : xlatb ; add r9, r11 ; jmp r9
0x000000000043e9c1 : xlatb ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046ad4f : xlatb ; ja 0x46ad7c ; ret
0x00000000004b9983 : xlatb ; jo 0x4b99ff ; mov ebp, 0xfb67d10d ; ret
0x0000000000452162 : xlatb ; mov byte ptr [rsi], al ; jne 0x452148 ; mov rax, rsi ; ret
0x0000000000421429 : xlatb ; ret
0x00000000004bae26 : xlatb ; ret 0x4e27
0x00000000004659a7 : xlatb ; ret 0x94c
0x0000000000425e4f : xlatb ; ret 0xc085
0x0000000000421420 : xlatb ; ret 0xc148
0x00000000004238d4 : xlatb ; ret 0xf66
0x000000000042cd81 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000043bca6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004228e6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000004227a6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000422666 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000422526 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004223e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004222a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000422166 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000422026 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000421ee6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000421da6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000421c66 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000421b26 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000004219e6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000004218a6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000421766 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000474360 : xlatb ; sar eax, -1 ; xor eax, eax ; ret
0x000000000043bca2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000465945 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000465956 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004c1d0d : xor al, 0 ; add byte ptr [rax + 0x3a], dh ; idiv bh ; ret
0x00000000004b890a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004054bd : xor al, 0x89 ; ret 0x5525
0x00000000004620e7 : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048cd36 : xor al, 0xc5 ; call 0xffffffffe84918c8
0x000000000049cde2 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004be3fc : xor al, 0xce ; std ; call rsp
0x00000000004b9aea : xor al, 0xd8 ; ret
0x00000000004a3b7c : xor al, ah ; clc ; call qword ptr [rax]
0x000000000044527a : xor al, byte ptr [rbx] ; add byte ptr [rcx + rcx*4 - 9], cl ; call r15
0x00000000004260ac : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000004401aa : xor bl, dh ; std ; dec dword ptr [rax - 0x75] ; jge 0x4401ba ; call rbx
0x0000000000425f6d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000421331 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000467acd : xor byte ptr [rax - 0x39], cl ; ret
0x0000000000449b1b : xor byte ptr [rax - 0x75], cl ; and al, 0x20 ; call rax
0x00000000004237df : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000464952 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004c4ac0 : xor byte ptr [rax - 7], bh ; call rdi
0x0000000000410c4d : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000004c19ed : xor byte ptr [rax], al ; add byte ptr [rax - 0x12], ah ; cmc ; call qword ptr [rdx]
0x000000000040e992 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e94a : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000043e49c : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000046489a : xor byte ptr [rax], al ; je 0x4648a4 ; ret
0x000000000049d1fe : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000415890 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004034f3 : xor byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a007b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000000004c125f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x0000000000426b9b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000415bde : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000443d79 : xor byte ptr [rcx + 0x2882e005], cl ; add cl, ch ; ret
0x0000000000420948 : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a38b4 : xor byte ptr [rcx - 0x7d7f0008], al ; clc ; call rax
0x0000000000458a27 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000410c4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040f915 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000004be264 : xor byte ptr [rdi*8 - 0x2c17f01], bh ; call rax
0x0000000000463ab0 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004589f2 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000004a39d4 : xor byte ptr [rdx - 0x46e10008], bh ; clc ; jmp qword ptr [rax]
0x00000000004c2307 : xor byte ptr [rdx], al ; int 0xa
0x00000000004c1b47 : xor byte ptr [rdx], al ; ret
0x000000000042e5ff : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046590c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000425f6e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000040e01a : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000004c1fd0 : xor byte ptr [rsi - 0xa], cl ; jmp qword ptr [rsi]
0x00000000004692b6 : xor byte ptr [rsi], ah ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbf091c10
0x00000000004c3540 : xor byte ptr [rsi], dh ; clc ; call qword ptr [rax]
0x000000000047ae56 : xor byte ptr [rsp + rbp*2 - 0x3b7cb800], 8 ; ret
0x0000000000465f8b : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000004730b6 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000047d4ff : xor cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000049c28e : xor cl, byte ptr [rax] ; jne 0x49c2b3 ; mov rax, qword ptr [rax] ; ret
0x0000000000455316 : xor cl, byte ptr [rbx] ; jmp rax
0x0000000000440e52 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004a3b60 : xor dl, ah ; clc ; jmp qword ptr [rax]
0x0000000000476dde : xor dl, dh ; jmp r11
0x0000000000476ef0 : xor dl, dh ; ret
0x0000000000420c85 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000000000045a37d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0x47e9
0x000000000041de7a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000049c2fd : xor dword ptr [rax], ecx ; jne 0x49c30c ; mov qword ptr [rax], rdx ; ret
0x000000000046998b : xor dword ptr [rcx], ebp ; add byte ptr es:[rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000043f3c7 : xor dword ptr [rdi + rcx*2], 0 ; ret
0x00000000004412f3 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004a41fd : xor eax, 0x3720fff9 ; stc ; jmp qword ptr [rax]
0x000000000048e4e9 : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040e98f : xor eax, dword ptr [0x30] ; call rax
0x000000000049d08d : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004786a7 : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000047877f : xor eax, eax ; add rsp, 0x68 ; ret
0x00000000004747ca : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000451b89 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000465137 : xor eax, eax ; call rbx
0x000000000046ad4b : xor eax, eax ; cmp rdi, rdx ; ja 0x46ad80 ; ret
0x00000000004427b7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004429b5 : xor eax, eax ; leave ; ret
0x0000000000463079 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044082b : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000044292f : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000041ebcd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047b488 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000040eb9d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042386c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000041240c : xor eax, eax ; pop rbx ; ret
0x00000000004014d0 : xor eax, eax ; ret
0x000000000042e51e : xor eax, eax ; sub eax, ecx ; ret
0x000000000043e3f8 : xor eax, eax ; test dh, 0xf0 ; je 0x43e3cb ; movzx eax, dl ; pop rbx ; ret
0x000000000046b0d0 : xor eax, eax ; test r11b, r11b ; je 0x46b0c9 ; ret
0x0000000000413400 : xor eax, eax ; test rdx, rdx ; jne 0x413417 ; ret
0x0000000000467a03 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474068 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a87d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000447fa1 : xor ecx, dword ptr [rax - 0x77] ; ret
0x0000000000466415 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000455367 : xor ecx, dword ptr [rbx] ; jmp rax
0x000000000044f062 : xor ecx, eax ; ret 0x4809
0x00000000004a41f5 : xor ecx, edi ; jmp qword ptr [rax]
0x00000000004c7b71 : xor edi, ebx ; jmp qword ptr [rdx]
0x00000000004a41f9 : xor edi, ecx ; jmp qword ptr [rax]
0x0000000000473b5e : xor edi, edi ; call 0x43fde4
0x000000000040e947 : xor edx, dword ptr [0x30] ; call rdx
0x00000000004449e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x000000000044417c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44416c
0x000000000045a3d3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x000000000047aa29 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046a89e : xor edx, edx ; jmp 0x46a868
0x0000000000473dd4 : xor edx, edx ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004154f9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000004178dc : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000488123 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000440cc1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000445279 : xor esi, dword ptr [rdx] ; add eax, dword ptr [rax] ; mov rdi, r14 ; call r15
0x00000000004015e5 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047acb9 : xor esi, esi ; mov edi, dword ptr [rip + 0x2516a3] ; jmp rax
0x000000000043ff11 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000440cc3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000440ce8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x0000000000440d0d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000440d31 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000440d51 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004bebe9 : xor esi, esp ; call qword ptr [rdx]
0x0000000000465136 : xor r8d, r8d ; call rbx
0x000000000040e98e : xor rax, qword ptr [0x30] ; call rax
0x000000000040e98d : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000425fef : xor rax, rax ; ret
0x000000000040e946 : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e945 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9123
